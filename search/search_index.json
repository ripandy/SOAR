{"config":{"lang":["en","ja"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SOAR","text":"<p>Scriptable Object Architecture Reactive-extensible (SOAR) is a modular Unity framework that uses ScriptableObjects to create a clean, decoupled, event-driven architecture. It is based on Ryan Hipple's talk at Unite Austin 2017.</p> <p>SOAR encourages a publish/subscribe pattern where <code>ScriptableObject</code> assets act as channels. Publishers and subscribers interact through these shared assets, eliminating direct dependencies.</p> <p>While SOAR can function independently, it is designed to be extended with R3, a modern Reactive Extensions library for C#. Using R3 with SOAR is highly recommended to unlock its full potential.</p>"},{"location":"#key-links","title":"Key Links","text":"<ul> <li>SOAR - Access to the GitHub repository.</li> <li>R3 - The new future of dotnet/reactive and UniRx. Developed by Cysharp, Inc.</li> <li>Kassets - SOAR's predecessor, developed by Kadinche Corp. An implementation of Scriptable Object Architecture extensible with UniRx and UniTask.</li> <li>Unite 2017 Talk by Ryan Hipple - The original inspiration.</li> </ul>"},{"location":"troubleshooting/","title":"Troubleshooting &amp; FAQ","text":"<p>This page contains solutions to common problems and answers to frequently asked questions.</p>"},{"location":"troubleshooting/#common-problems","title":"Common Problems","text":""},{"location":"troubleshooting/#my-unityeventbinder-is-not-firing","title":"My <code>UnityEventBinder</code> is not firing.","text":"<ol> <li>Check the <code>GameEvent</code> Reference: Ensure that you have dragged the correct <code>GameEvent</code> asset into the <code>Game Event To Listen</code> field in the <code>UnityEventBinder</code>'s Inspector.</li> <li>Check the Publisher: Is another script actually calling <code>Raise()</code> on that exact same <code>GameEvent</code> asset? You can test this by selecting the <code>GameEvent</code> asset in your Project window and clicking the \"Raise\" button in its Inspector while in Play Mode. If the binder fires, the problem is with your publishing script. If it doesn't, the problem is with the binder's setup.</li> <li>Check for <code>[ExecuteInEditMode]</code>: If you are trying to get the binder to work in Edit Mode, ensure the listening component has the <code>[ExecuteAlways]</code> or <code>[ExecuteInEditMode]</code> attribute.</li> </ol>"},{"location":"troubleshooting/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"troubleshooting/#what-are-the-performance-implications-of-using-soar","title":"What are the performance implications of using SOAR?","text":"<p>For most use cases, the performance overhead of SOAR is negligible. Raising a <code>GameEvent</code> is essentially a method call and a loop through a list of subscribers. While this is slightly slower than a direct method call, the architectural benefits of decoupling almost always outweigh the micro-optimization of direct references.</p> <p>Performance can become a consideration if you are raising an event hundreds or thousands of times per frame. In such high-frequency scenarios, you might consider a more direct approach for that specific system, but these cases are rare.</p>"},{"location":"troubleshooting/#can-i-use-soar-without-the-r3-reactive-extensions-library","title":"Can I use SOAR without the R3 (Reactive Extensions) library?","text":"<p>Yes. SOAR is designed to function independently. The core features (<code>GameEvent</code>, <code>Variable</code>, <code>Collection</code>, etc.) have a base implementation that uses standard C# events (<code>Action</code>).</p> <p>However, the R3 integration provides significant advantages for asynchronous programming and complex event processing (e.g., filtering, merging, and throttling event streams). It is highly recommended for anything beyond simple events.</p>"},{"location":"troubleshooting/#how-do-i-pass-multiple-parameters-with-a-gameevent","title":"How do I pass multiple parameters with a <code>GameEvent</code>?","text":"<p>A <code>GameEvent&lt;T&gt;</code> can only carry one parameter (<code>T</code>). If you need to pass multiple values, you should encapsulate them in a custom <code>struct</code> or <code>class</code>. This concept of encapsulation are also known as Data Transfer Object (DTO).</p> <p>Example: <pre><code>// Define a struct to hold the data\n[System.Serializable]\npublic struct PlayerDamagedData\n{\n    public float DamageAmount;\n    public DamageType Type;\n    public GameObject Instigator;\n}\n\n// Create a GameEvent for that struct\n[CreateAssetMenu(menuName = \"SOAR/Game Events/Player Damaged Event\")]\npublic class PlayerDamagedEvent : GameEvent&lt;PlayerDamagedData&gt; { }\n</code></pre></p>"},{"location":"concepts/architecture/","title":"Architectural Principles","text":"<p>SOAR (Scriptable Object Architecture Reactive-extensible) is not just a collection of tools, but a philosophy for building clean, decoupled, and scalable applications in Unity. Understanding the core architectural principles behind SOAR will help you write more maintainable and robust code.</p>"},{"location":"concepts/architecture/#the-publishersubscriber-pattern","title":"The Publisher/Subscriber Pattern","text":"<p>The most fundamental principle in SOAR is the Publisher/Subscriber (Pub/Sub) pattern. This is a messaging pattern where:</p> <ul> <li>Publishers (or Broadcasters) emit messages or events without direct knowledge of which components will receive them.</li> <li>Subscribers (or Listeners) register interest in certain events without knowing which components will produce them.</li> <li>A message broker or event channel mediates between them, decoupling the components.</li> </ul> <p>In SOAR's implementation:</p> <ul> <li><code>GameEvent</code> and <code>Variable</code> assets serve as the event channels or topics.</li> <li>Any script can act as a publisher by calling the <code>Raise()</code> method on a <code>GameEvent</code> or changing the <code>Value</code> of a <code>Variable</code>.</li> <li>Any script can act as a subscriber by calling <code>Subscribe()</code> on an event or using a <code>UnityEventBinder</code> to listen for it.</li> </ul> <p>This pattern is the key to decoupling. A UI button that raises an event doesn't need a reference to the audio system, the analytics system, or the game logic that needs to react to its click. They all just listen to the same shared event asset.</p>"},{"location":"concepts/architecture/#dependency-inversion","title":"Dependency Inversion","text":"<p>By using <code>ScriptableObject</code> assets as the communication channel, SOAR achieves Dependency Inversion. Instead of high-level components having direct references to low-level components (e.g., a <code>GameManager</code> knowing about a specific <code>PlayerHealth</code> script), both components reference the same, shared <code>ScriptableObject</code> asset.</p> <p>Traditional (Coupled) Approach: <pre><code>GameManager ---&gt; PlayerHealth\n</code></pre></p> <p>SOAR (Decoupled) Approach: <pre><code>GameManager --+\n              |\n              v\n          PlayerHealthVariable\n              ^\n              |\nPlayerHealth --+\n</code></pre></p> <p>This inversion means components can be developed, tested, and modified in isolation. You can test your <code>PlayerHealth</code> logic by simply changing the <code>PlayerHealthVariable</code> in the Inspector, without needing a <code>GameManager</code> at all.</p>"},{"location":"concepts/architecture/#scene-to-scene-communication","title":"Scene-to-Scene Communication","text":"<p>Because <code>ScriptableObject</code>s are assets that live outside of any specific scene, they are the perfect tool for communication between scenes. A <code>GameEvent</code> raised in your \"MainMenu\" scene can be easily listened to by a component in your \"Level01\" scene, as long as both have a reference to the same event asset. This solves a common Unity problem without resorting to complex <code>DontDestroyOnLoad</code> managers or static singletons.</p>"},{"location":"concepts/architecture/#model-view-presenter-mvp-with-soar","title":"Model-View-Presenter (MVP) with SOAR","text":"<p>SOAR fits naturally with the Model-View-Presenter (MVP) pattern, a common way to structure UI-heavy applications.</p> <ul> <li>Model: The raw data and business logic of your application. In a pure implementation, the Model should have no knowledge of Unity.</li> <li>View: The Unity components that display the data (e.g., <code>Text</code>, <code>Slider</code>, <code>Image</code>). The View is \"dumb\" and only knows how to display what it's told.</li> <li>Presenter: The mediator between the Model and the View. It listens for changes in the Model, formats the data, and tells the View how to display it. It also listens for input from the View (like button clicks) and updates the Model.</li> </ul> <p>SOAR assets act as the perfect layer between the Model and the Presenter:</p> <ul> <li>A <code>Variable</code> can wrap a piece of Model data.</li> <li>The Presenter subscribes to this <code>Variable</code>.</li> <li>When the Model changes, it updates the <code>Variable</code>.</li> <li>The Presenter is notified and updates the View components.</li> </ul> <p></p>"},{"location":"concepts/r3-integration/","title":"R3 Integration","text":"<p>SOAR is designed to be highly extensible with R3 (Reactive Extensions for C#), a modern and feature-rich reactive programming library. When R3 is present in the project, SOAR automatically integrates with it, unlocking a powerful set of features for asynchronous programming, event handling, and data stream manipulation.</p> <p>This integration enhances SOAR's core features by:</p> <ul> <li>Exposing <code>Observable</code> Streams: SOAR objects like <code>GameEvent</code>s, <code>Variable</code>s, <code>Collection</code>s, and <code>Transaction</code>s expose their events as R3 <code>Observable</code> streams, allowing for complex event processing with LINQ-style operators.</li> <li>Providing <code>async/await</code> Support: Awaiting events and transactions becomes seamless with <code>async/await</code>.</li> <li>Advanced Concurrency Control: For <code>Transaction</code>s, R3 provides fine-grained control over how concurrent requests are handled.</li> </ul>"},{"location":"concepts/r3-integration/#enabling-the-integration","title":"Enabling the Integration","text":"<p>To enable the R3 integration, simply install R3 into the Unity project. SOAR will automatically detect its presence via the <code>SOAR_R3</code> scripting define symbol, which is typically added by the R3 package installation.</p> <p>If the <code>SOAR_R3</code> symbol is not automatically defined, it can be added manually in <code>Project Settings &gt; Player &gt; Other Settings &gt; Scripting Define Symbols</code>.</p>"},{"location":"concepts/r3-integration/#core-concepts","title":"Core Concepts","text":""},{"location":"concepts/r3-integration/#observable-streams","title":"Observable Streams","text":"<p>With R3, most events in SOAR can be treated as <code>Observable</code> streams. This means that powerful R3 operators like <code>Where</code>, <code>Select</code>, <code>Merge</code>, <code>CombineLatest</code>, and <code>Throttle</code> can be used to create sophisticated event-driven logic in a declarative way.</p>"},{"location":"concepts/r3-integration/#asyncawait-support","title":"Async/Await Support","text":"<p>The integration provides <code>...Async()</code> methods for many operations, which return a <code>ValueTask</code> or <code>ValueTask&lt;T&gt;</code>. This allows for writing clean and efficient asynchronous code without manual callback management.</p>"},{"location":"concepts/r3-integration/#disposables-and-lifetime-management","title":"Disposables and Lifetime Management","text":"<p>All subscriptions to SOAR events (whether through <code>Subscribe()</code> or R3's <code>Observable</code>s) return an <code>IDisposable</code>. It is crucial to manage the lifetime of these subscriptions to prevent memory leaks. R3 provides convenient extension methods like <code>AddTo(Component)</code> to automatically dispose of subscriptions when a <code>GameObject</code> is destroyed.</p> <pre><code>using R3;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class MyComponent : MonoBehaviour\n{\n    [SerializeField] private GameEvent myGameEvent;\n\n    void Start()\n    {\n        myGameEvent.AsObservable()\n            .Subscribe(_ =&gt; Debug.Log(\"Event raised!\"))\n            .AddTo(this); // Automatically disposes when this GameObject is destroyed\n    }\n}\n</code></pre>"},{"location":"features/base-class/","title":"Base Classes","text":"<p>SOAR provides a set of pre-defined, concrete \"Base Classes\" for its core features, such as <code>Variable</code>, <code>GameEvent</code>, and <code>Collection</code>. These are ready-to-use <code>ScriptableObject</code> assets for common data types (e.g., <code>int</code>, <code>float</code>, <code>string</code>, <code>Vector3</code>), allowing developers to use SOAR's features immediately without writing boilerplate code. They are located in the separate <code>Soar.Base</code> assembly, which may require adding an assembly definition reference.</p>"},{"location":"features/base-class/#using-base-classes","title":"Using Base Classes","text":"<p>To use the pre-defined Base Classes, make sure that the project's assembly definition file (<code>.asmdef</code>) has a reference to <code>Soar.Base</code>.</p> <ol> <li> <p>Locate the Assembly Definition File: Find the <code>.asmdef</code> file in the project that governs the scripts where Base Classes would be used. If there's none, create one by right-clicking in the Project window and selecting <code>Create &gt; Assembly Definition</code>.</p> </li> <li> <p>Add the Reference: Select the <code>.asmdef</code> file to open it in the Inspector. In the \"Assembly Definition References\" section, click the <code>+</code> button and add <code>Soar.Base</code>.</p> <p> 4 3.  Apply Changes: Click \"Apply\" to save the changes.</p> </li> </ol> <p>Once the reference is added, create instances of these Base Classes directly from the Unity Editor's context menu.</p> <p>Default Assembly-CSharp</p> <p>If there are no specified asmdef file on the project, SOAR's Base Classes can be automatically referenced by scripts. This is pretty useful for prototyping, but not recommended for production.</p>"},{"location":"features/base-class/#available-base-classes","title":"Available Base Classes","text":"<p>The Base Classes are organized in the <code>Assets &gt; Create &gt; SOAR</code> menu, under their respective feature categories.</p>"},{"location":"features/base-class/#gameevents","title":"GameEvents","text":"<p>Parameterless and typed <code>GameEvent</code>s for common data types can be found under <code>Assets &gt; Create &gt; SOAR &gt; Game Events</code>.</p> <ul> <li>Parameterless:<ul> <li><code>GameEvent</code> (for simple signals)</li> </ul> </li> <li>Primitive Types:<ul> <li><code>BoolGameEvent</code></li> <li><code>ByteGameEvent</code></li> <li><code>DoubleGameEvent</code></li> <li><code>FloatGameEvent</code></li> <li><code>IntGameEvent</code></li> <li><code>LongGameEvent</code></li> <li><code>StringGameEvent</code></li> </ul> </li> <li>Unity Types:<ul> <li><code>AudioClipGameEvent</code></li> <li><code>GameObjectGameEvent</code></li> <li><code>PoseGameEvent</code></li> <li><code>QuaternionGameEvent</code></li> <li><code>Texture2DGameEvent</code></li> <li><code>Vector2GameEvent</code></li> <li><code>Vector3GameEvent</code></li> </ul> </li> </ul> <p>These are useful for broadcasting events like \"PlayerDied\" (<code>GameEvent</code>), \"ItemCollected\" (<code>StringGameEvent</code> with item name), or \"PlaySound\" (<code>AudioClipGameEvent</code>).</p>"},{"location":"features/base-class/#variables","title":"Variables","text":"<p>Commonly used variable types are available under <code>Assets &gt; Create &gt; SOAR &gt; Variables</code>.</p> <ul> <li>Primitive Types:<ul> <li><code>BoolVariable</code></li> <li><code>ByteVariable</code></li> <li><code>DoubleVariable</code></li> <li><code>FloatVariable</code></li> <li><code>IntVariable</code></li> <li><code>LongVariable</code></li> <li><code>StringVariable</code></li> </ul> </li> <li>Unity Types:<ul> <li><code>CameraVariable</code></li> <li><code>ColorVariable</code></li> <li><code>GameObjectVariable</code></li> <li><code>PoseVariable</code></li> <li><code>QuaternionVariable</code></li> <li><code>TransformVariable</code></li> <li><code>Vector2Variable</code></li> <li><code>Vector3Variable</code></li> </ul> </li> </ul> <p>These variables can be used to store and react to changes in shared data, such as player health (<code>FloatVariable</code>), score (<code>IntVariable</code>), or player name (<code>StringVariable</code>).</p>"},{"location":"features/base-class/#collections-lists","title":"Collections (Lists)","text":"<p>SOAR provides pre-defined list collections under <code>Assets &gt; Create &gt; SOAR &gt; Lists</code>.</p> <ul> <li>Primitive Types:<ul> <li><code>BoolList</code></li> <li><code>ByteList</code></li> <li><code>DoubleList</code></li> <li><code>FloatList</code></li> <li><code>IntList</code></li> <li><code>LongList</code></li> <li><code>StringList</code></li> </ul> </li> <li>Unity Types:<ul> <li><code>AudioClipList</code></li> <li><code>ColorList</code></li> <li><code>PoseList</code></li> <li><code>QuaternionList</code></li> <li><code>SpriteList</code></li> <li><code>Vector2List</code></li> <li><code>Vector3List</code></li> </ul> </li> </ul> <p>These lists are useful for managing dynamic collections of items, such as a list of active enemies (<code>GameObjectList</code>), a playlist of songs (<code>AudioClipList</code>), or a sequence of tutorial steps (<code>StringList</code>).</p> <p>Dictionary as Custom Class only</p> <p>Currently, only <code>List</code> collections are provided as Base Classes. For <code>Dictionary</code> collections, create custom class inheriting from <code>SoarDictionary&lt;TKey, TValue&gt;</code>.</p>"},{"location":"features/base-class/#transactions","title":"Transactions","text":"<p>Base <code>Transaction</code> types are available under <code>Assets &gt; Create &gt; SOAR &gt; Transactions</code>.</p> <ul> <li>Parameterless:<ul> <li><code>Transaction</code> (for simple request-response signals)</li> </ul> </li> <li>Symmetric Typed:<ul> <li><code>BoolTransaction</code></li> <li><code>ByteTransaction</code></li> <li><code>DoubleTransaction</code></li> <li><code>FloatTransaction</code></li> <li><code>IntTransaction</code></li> <li><code>LongTransaction</code></li> <li><code>PoseTransaction</code></li> <li><code>QuaternionTransaction</code></li> <li><code>StringTransaction</code></li> <li><code>Vector2Transaction</code></li> <li><code>Vector3Transaction</code></li> </ul> </li> </ul> <p>These transactions use the same type for both the request and the response (eg., <code>IntTransaction</code> is <code>Transaction&lt;int, int&gt;</code>). They are useful for operations that take a value, process it, and return a modified value of the same type. For asymmetric typed create custom class that inherits from <code>Transaction&lt;TRequest, TResponse&gt;</code> as necessary.</p>"},{"location":"features/base-class/#creating-custom-classes","title":"Creating Custom Classes","text":"<p>While SOAR provides a wide range of Base Classes, a custom data types specific to the project are often required. This process is straightforward and follows the same pattern for all SOAR features.</p> <p>For example, to create a <code>Variable</code> for a custom <code>PlayerData</code> struct:</p> <ol> <li> <p>Define the Data Type: Make sure custom data type is <code>[Serializable]</code>.</p> <pre><code>// File: PlayerData.cs\nusing System;\n\n[Serializable]\npublic struct PlayerData\n{\n    public string name;\n    public int level;\n    public float health;\n}\n</code></pre> </li> <li> <p>Create the Variable Class: Create a new class that inherits from <code>Variable&lt;T&gt;</code>.</p> <pre><code>// File: PlayerDataVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"PlayerDataVariable\", menuName = MenuHelper.DefaultVariableMenu + \"Player Data Variable\")]\npublic class PlayerDataVariable : Variable&lt;PlayerData&gt; { }\n</code></pre> </li> <li> <p>Create the Asset: Create <code>PlayerDataVariable</code> assets from the <code>Assets &gt; Create &gt; SOAR &gt; Variables &gt; Player Data Variable</code> menu.</p> </li> </ol> <p>This same process applies to creating custom <code>Command</code>s, <code>GameEvent</code>s, <code>Collection</code>s, and <code>Transaction</code>s.</p>"},{"location":"features/collection/","title":"Collection","text":"<p>The <code>Collection</code> feature in SOAR provides reactive, <code>ScriptableObject</code>-based collections like <code>SoarList&lt;T&gt;</code> and <code>SoarDictionary&lt;TKey, TValue&gt;</code>. These assets allow for the creation of shared, observable data structures that are easily managed and monitored. By implementing common interfaces like <code>IList</code> and <code>IDictionary</code>, they offer a familiar API and are fully compatible with LINQ, while additional events are triggered when items are added, removed, or updated.</p>"},{"location":"features/collection/#core-concepts","title":"Core Concepts","text":"<p><code>Collection&lt;T&gt;</code> is the abstract base class providing the core functionality for all SOAR collections.</p> <p></p> <ul> <li>Reactive Events: Collections notify subscribers when they are modified. Subscriptions can be made to events for adding, removing, clearing, or changing elements.</li> <li>Inspector Editing: The contents of a collection can be viewed and modified directly in the Unity Inspector, making the setup of initial data straightforward.</li> <li>Auto Reset Value: When enabled, the collection automatically reverts to its initial state when play mode ends. This is controlled by the <code>autoResetValue</code> field in the Inspector.</li> <li>Value Event Type: This setting determines when a value change event is raised:<ul> <li><code>ValueAssign</code>: The event is raised every time a value is set, even if it's the same as the current value.</li> <li><code>ValueChanged</code>: The event is raised only if the new value is different from the current value.</li> </ul> </li> </ul> <p>Serialized Types</p> <p>Due to Unity's serialization behavior, <code>autoResetValue</code> is most reliable with structs and primitive types. For class types, the initial state is a shallow copy. Modifying objects within the list will alter the initial state, which can lead to unexpected behavior upon reset.</p>"},{"location":"features/collection/#soarlistt","title":"<code>SoarList&lt;T&gt;</code>","text":"<p><code>SoarList&lt;T&gt;</code> is an ordered collection of elements, similar to a standard <code>List&lt;T&gt;</code>. It implements <code>IList&lt;T&gt;</code> and <code>IReadOnlyList&lt;T&gt;</code>, providing familiar list operations like indexed access, <code>Insert</code>, and <code>RemoveAt</code>. <code>SoarList&lt;T&gt;</code> is useful when a reactive list is needed to share data between different parts of a game, such as a list of active power-ups or a sequence of waypoints.</p>"},{"location":"features/collection/#soardictionarytkey-tvalue","title":"<code>SoarDictionary&lt;TKey, TValue&gt;</code>","text":"<p><code>SoarDictionary&lt;TKey, TValue&gt;</code> is a collection of key-value pairs, mirroring <code>Dictionary&lt;TKey, TValue&gt;</code>. It implements <code>IDictionary&lt;TKey, TValue&gt;</code> and <code>IReadOnlyDictionary&lt;TKey, TValue&gt;</code>, allowing for efficient key-based data retrieval and modification. It is ideal for scenarios like managing a player's inventory (where the key is an item ID and the value is the item object) or storing game settings.</p>"},{"location":"features/collection/#creating-a-collection","title":"Creating a Collection","text":"<p>SOAR includes pre-defined <code>List</code> types for common data types (e.g., <code>IntList</code>, <code>StringList</code>), which can be created from the <code>Assets &gt; Create &gt; SOAR &gt; Lists</code> menu.</p> <p>Assembly Definition Reference</p> <p>These common types are defined in the <code>Soar.Base.asmdef</code> assembly. To use them, a reference to <code>Soar.Base.asmdef</code> must be added in the project\u2019s assembly definition file.</p> <p>To create a collection for a custom data type, a new class must be defined that inherits from <code>SoarList&lt;T&gt;</code> or <code>SoarDictionary&lt;TKey, TValue&gt;</code>.</p>"},{"location":"features/collection/#custom-list-example","title":"Custom List Example","text":"<ol> <li> <p>The custom data type must be marked as <code>[Serializable]</code>.</p> <pre><code>// File: MyItem.cs\nusing System;\n\n[Serializable]\npublic struct MyItem\n{\n    public string itemName;\n    public int itemID;\n}\n</code></pre> </li> <li> <p>A new class inheriting from <code>SoarList&lt;T&gt;</code> should be created.</p> <pre><code>// File: MyItemList.cs\nusing Soar;\nusing Soar.Collections;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyItemList\", menuName = MenuHelper.DefaultListMenu + \"My Item List\")]\npublic class MyItemList : SoarList&lt;MyItem&gt; { }\n</code></pre> </li> <li> <p>Instances of <code>MyItemList</code> can now be created from the <code>Assets &gt; Create &gt; SOAR &gt; Lists &gt; My Item List</code> menu.</p> </li> </ol>"},{"location":"features/collection/#custom-dictionary-example","title":"Custom Dictionary Example","text":"<p>Creating a custom dictionary follows the same pattern.</p> <pre><code>// File: StringStringDictionary.cs\nusing Soar;\nusing Soar.Collections;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"StringStringDictionary\", menuName = MenuHelper.DefaultCollectionMenu + \"String-String Dictionary\")]\npublic class StringStringDictionary : SoarDictionary&lt;string, string&gt; { }\n</code></pre>"},{"location":"features/collection/#subscribing-to-changes","title":"Subscribing to Changes","text":"<p>Changes to a collection can be observed by subscribing to its events. Subscriptions should always be disposed of when no longer needed to prevent memory leaks.</p> <pre><code>// File: CollectionMonitor.cs\nusing System;\nusing Soar.Collections;\nusing UnityEngine;\n\n// Assuming an IntList asset has been created\npublic class CollectionMonitor : MonoBehaviour\n{\n    [SerializeField] private IntList targetList;\n    private IDisposable addSubscription;\n    private IDisposable removeSubscription;\n    private IDisposable countSubscription;\n    private IDisposable valueSubscription;\n\n    private void Start()\n    {\n        if (targetList == null) return;\n\n        // Subscribe to various events\n        addSubscription = targetList.SubscribeOnAdd(OnItemAdded);\n        removeSubscription = targetList.SubscribeOnRemove(OnItemRemoved);\n        countSubscription = targetList.SubscribeToCount(OnCountChanged);\n        valueSubscription = targetList.SubscribeToValues(OnValueChanged);\n\n        Debug.Log($\"Monitoring {targetList.name}. Initial count: {targetList.Count}\");\n    }\n\n    private void OnDestroy()\n    {\n        // Dispose all subscriptions\n        addSubscription?.Dispose();\n        removeSubscription?.Dispose();\n        countSubscription?.Dispose();\n        valueSubscription?.Dispose();\n    }\n\n    private void OnItemAdded(int newItem)\n    {\n        Debug.Log($\"Item added: {newItem}\");\n    }\n\n    private void OnItemRemoved(int removedItem)\n    {\n        Debug.Log($\"Item removed: {removedItem}\");\n    }\n\n    private void OnCountChanged(int newCount)\n    {\n        Debug.Log($\"Count changed to: {newCount}\");\n    }\n\n    private void OnValueChanged(int index, int newValue)\n    {\n        Debug.Log($\"Value at index {index} changed to: {newValue}\");\n    }\n}\n</code></pre>"},{"location":"features/collection/#r3-integration","title":"R3 Integration","text":"<p>If the <code>SOAR_R3</code> scripting define symbol is active, SOAR collections integrate with the R3 library, unlocking powerful reactive programming capabilities.</p>"},{"location":"features/collection/#observable-streams","title":"Observable Streams","text":"<p>Both <code>SoarList&lt;T&gt;</code> and <code>SoarDictionary&lt;TKey, TValue&gt;</code> expose a rich set of <code>Observe...()</code> methods:</p> <ul> <li><code>ObserveAdd()</code>: Emits the item that was added.</li> <li><code>ObserveRemove()</code>: Emits the item that was removed.</li> <li><code>ObserveClear()</code>: Emits a <code>Unit</code> notification when the collection's <code>Clear()</code> method is called.</li> <li><code>ObserveCount()</code>: Emits the new <code>Count</code> of the collection whenever it changes.</li> <li><code>ObserveValues()</code>: Emits a notification when an existing element's value is changed.<ul> <li>For <code>SoarList&lt;T&gt;</code>, this emits an <code>IndexValuePair&lt;T&gt;</code>.</li> <li>For <code>SoarDictionary&lt;TKey, TValue&gt;</code>, this emits a <code>KeyValuePair&lt;TKey, TValue&gt;</code>.</li> </ul> </li> </ul> <p><code>SoarList&lt;T&gt;</code> has additional streams for list-specific operations: -   <code>ObserveMove()</code>: Emits a <code>MovedValueDto&lt;T&gt;</code> containing the value, old index, and new index. -   <code>ObserveInsert()</code>: Emits an <code>IndexValuePair&lt;T&gt;</code> when an item is inserted at a specific index.</p>"},{"location":"features/collection/#asyncawait-support","title":"Async/Await Support","text":"<p>Every <code>Observe...()</code> method has a corresponding <code>On...Async()</code> or <code>...Async()</code> counterpart that returns a <code>ValueTask</code>. This allows you to <code>await</code> the next specific change in a collection.</p> <ul> <li><code>OnAddAsync()</code>: Awaits the next added item.</li> <li><code>OnRemoveAsync()</code>: Awaits the next removed item.</li> <li><code>OnClearAsync()</code>: Awaits the next <code>Clear()</code> operation.</li> <li><code>CountAsync()</code>: Awaits the next change in the collection's <code>Count</code>.</li> <li><code>ValuesAsync()</code>: Awaits the next change to an element's value.</li> </ul> <p>For <code>SoarList&lt;T&gt;</code>: -   <code>OnMoveAsync()</code>: Awaits the next move operation. -   <code>OnInsertAsync()</code>: Awaits the next insert operation.</p>"},{"location":"features/collection/#example","title":"Example","text":"<pre><code>// R3 Example\n#if SOAR_R3\nusing R3;\nusing Soar.Collections;\nusing UnityEngine;\n\n// Assuming an IntList asset has been created\npublic class R3CollectionMonitor : MonoBehaviour\n{\n    [SerializeField] private IntList targetList;\n\n    private void OnEnable()\n    {\n        if (targetList == null) return;\n\n        // Use R3 Observables for more expressive and manageable code\n        targetList.ObserveAdd()\n            .Subscribe(newItem =&gt; Debug.Log($\"Item added: {newItem}\"))\n            .AddTo(this); // R3 extension for auto-disposal\n\n        targetList.ObserveCount()\n            .Subscribe(newCount =&gt; Debug.Log($\"Count is now: {newCount}\"))\n            .AddTo(this);\n    }\n}\n#endif\n</code></pre>"},{"location":"features/collection/#editor-integration","title":"Editor Integration","text":"<p>The custom editor for <code>Collection&lt;T&gt;</code> and its derived classes provides a user-friendly interface in the Unity Inspector.</p> <ul> <li>Element List: The contents of the collection are displayed in a list format, allowing for direct editing of values.</li> <li>Instance Settings: A foldout section contains settings for the collection instance:</li> <li><code>Value Event Type</code>: A dropdown to select between <code>ValueAssign</code> and <code>ValueChanged</code>.</li> <li><code>Auto Reset Value</code>: A checkbox to enable or disable automatic reset of the collection's data when exiting Play Mode.</li> </ul>"},{"location":"features/collection/#lifecycle-and-disposal","title":"Lifecycle and Disposal","text":"<p>As derivatives of <code>SoarCore</code>, collections follow a managed lifecycle:</p> <ul> <li>Initialization: On game start or after a domain reload, the collection's current state is saved as its initial value.</li> <li>Resetting: If <code>autoResetValue</code> is <code>true</code>, the collection reverts to this initial state when play mode ends. The <code>ResetValues()</code> method can also be called manually at any time.</li> <li>Disposal: The <code>Dispose()</code> method is called automatically when the application quits, clearing all active subscriptions to prevent memory leaks.</li> </ul>"},{"location":"features/collection/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The Collection Sample demonstrates how to use a <code>SoarList&lt;int&gt;</code> to drive a dynamic UI. It shows how to subscribe to add, remove, and value-changed events to automatically update the view when the collection is modified from another script.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>CollectionSamples</code> folder after importing.</p>"},{"location":"features/collection/#value-objects","title":"Value Objects","text":""},{"location":"features/collection/#indexvaluepairt","title":"<code>IndexValuePair&lt;T&gt;</code>","text":"<p>A struct that holds the index and value of an element in a collection. This is used in the <code>SubscribeToValues</code> and <code>ObserveInsert</code> methods of a <code>SoarList&lt;T&gt;</code>.</p>"},{"location":"features/collection/#movedvaluedtot","title":"<code>MovedValueDto&lt;T&gt;</code>","text":"<p>A struct that holds the value, old index, and new index of an element that has been moved in a <code>SoarList&lt;T&gt;</code>. This is used in the <code>SubscribeOnMove</code> and <code>ObserveMove</code> methods of a <code>SoarList&lt;T&gt;</code>.</p>"},{"location":"features/command/","title":"Command","text":"<p>An implementation of the Command pattern, the <code>Command</code> class in SOAR provides a way to encapsulate an action or operation as a ScriptableObject. This allows for defining reusable operations that can be triggered from various parts of an application\u2014including editor scripts, UI events, or other game logic\u2014promoting a decoupled architecture. This pattern is useful for one-way executions, such as logging.</p> <p><code>Command</code> inherits from <code>SoarCore</code>, gaining its lifecycle management features, including editor integration and handling for domain reloads.</p>"},{"location":"features/command/#core-concepts","title":"Core Concepts","text":""},{"location":"features/command/#synchronous-execution","title":"Synchronous Execution","text":"<p>The primary way to trigger a command is by calling its <code>Execute()</code> method. This method should contain the logic for the action the command represents.</p> <pre><code>// Example of a simple Command\n// File: MySimpleCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MySimpleCommand\", menuName = MenuHelper.DefaultCommandMenu + \"My Simple Command\")]\npublic class MySimpleCommand : Command\n{\n    public override void Execute()\n    {\n        Debug.Log(\"MySimpleCommand Executed!\");\n    }\n}\n</code></pre> <p>To use this command:</p> <ol> <li>Create an instance of <code>MySimpleCommand</code> via the <code>Assets/Create/SOAR/Commands/My Simple Command</code> menu.</li> <li>Assign this instance to a script or UI event.</li> <li>Call <code>mySimpleCommandInstance.Execute()</code> to run the command.</li> </ol>"},{"location":"features/command/#asynchronous-execution","title":"Asynchronous Execution","text":"<p>Commands also support asynchronous execution via the <code>ExecuteAsync()</code> method. This is useful for operations that might take time and should not block the main thread.</p> <p>It returns a <code>ValueTask</code> for efficient asynchronous operations. It accepts an optional <code>CancellationToken</code> to allow for cancellation. It automatically links the provided <code>CancellationToken</code> with <code>Application.exitCancellationToken</code>, ensuring the async operation is cancelled if the application quits. By default, <code>ExecuteAsync()</code> simply calls the synchronous <code>Execute()</code> method and returns a completed <code>ValueTask</code>. To implement true asynchronous behavior, override <code>ExecuteAsync()</code> in derived classes.</p> <pre><code>// Example of an async Command\n// File: MyAsyncCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyAsyncCommand\", menuName = MenuHelper.DefaultCommandMenu + \"My Async Command\")]\npublic class MyAsyncCommand : Command\n{\n    public override void Execute()\n    {\n        // Fallback for synchronous execution if needed\n        Debug.Log(\"MyAsyncCommand Executed (synchronously).\");\n    }\n\n    public override async ValueTask ExecuteAsync(CancellationToken cancellationToken = default)\n    {\n        // Link with Application.exitCancellationToken is handled by the base class\n        Debug.Log(\"MyAsyncCommand Started (asynchronously)...\");\n        try\n        {\n            await Task.Delay(2000, cancellationToken); // Simulate async work\n            Debug.Log(\"MyAsyncCommand Finished (asynchronously).\");\n        }\n        catch (System.OperationCanceledException)\n        {\n            Debug.Log(\"MyAsyncCommand was cancelled.\");\n        }\n    }\n}\n</code></pre>"},{"location":"features/command/#commands-with-parameters","title":"Commands with Parameters","text":"<p>For commands that require input parameters, use the generic <code>Command&lt;T&gt;</code> class.</p> <pre><code>// Example of a Command with a parameter\n// File: LogMessageCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"LogMessageCommand\", menuName = MenuHelper.DefaultCommandMenu + \"Log Message Command\")]\npublic class LogMessageCommand : Command&lt;string&gt;\n{\n    public override void Execute(string message)\n    {\n        Debug.Log($\"Message: {message}\");\n    }\n\n    // Optionally override ExecuteAsync(T param, CancellationToken cancellationToken)\n    // if specific async behavior with parameter is needed.\n    // By default, it will call Execute(param).\n}\n</code></pre> <p>To use this:</p> <pre><code>// In some other script\npublic LogMessageCommand logCommand;\npublic string messageToLog = \"Hello from Command!\";\n\nvoid Start()\n{\n    if (logCommand != null)\n    {\n        logCommand.Execute(messageToLog);\n    }\n}\n</code></pre> <p>The non-generic <code>Execute()</code> method in <code>Command&lt;T&gt;</code> will call <code>Execute(default(T))</code>.</p>"},{"location":"features/command/#editor-integration","title":"Editor Integration","text":"<p>When a <code>Command</code> (or any class derived from it) is selected in the Unity Editor, the Inspector will display an \"Execute\" button. Clicking it will call the <code>Execute()</code> method of the selected <code>Command</code> instance.</p> <p> </p> <p>Editor Execution</p> <p>The \"Execute\" button in the Inspector allows you to run commands in both Play Mode and Edit Mode. Ensure that the code within your <code>Execute()</code> method is safe to run in Edit Mode, as it might affect your project files or scene state permanently.</p>"},{"location":"features/command/#lifecycle-and-disposal","title":"Lifecycle and Disposal","text":"<p>As <code>Command</code> inherits from <code>SoarCore</code>, it participates in the SOAR lifecycle. The <code>Dispose()</code> method is available to be overridden if your command needs to clean up any resources. By default, the <code>Dispose()</code> method in <code>Command</code> is empty.</p> <pre><code>// File: MyResourcefulCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyResourcefulCommand\", menuName = MenuHelper.DefaultCommandMenu + \"My Resourceful Command\")]\npublic class MyResourcefulCommand : Command\n{\n    private System.IO.StreamWriter _writer;\n\n    public override void Execute()\n    {\n        _writer = new System.IO.StreamWriter(\"my_command_log.txt\", append: true);\n        _writer.WriteLine($\"Command executed at {System.DateTime.Now}\");\n        Debug.Log(\"MyResourcefulCommand Executed and wrote to log.\");\n    }\n\n    public override void Dispose()\n    {\n        _writer?.Dispose();\n        _writer = null;\n        Debug.Log(\"MyResourcefulCommand Disposed.\");\n        base.Dispose(); // Call base if SoarCore's Dispose has logic\n    }\n}\n</code></pre>"},{"location":"features/command/#use-cases","title":"Use Cases","text":"<p>Commands are versatile and can be employed in numerous scenarios to enhance code organization and reusability. Here are some use cases in which you can utilize Commands:</p> <ul> <li> <p><code>SubmitFormCommand&lt;FormData&gt;</code>:   A command that takes form data as a parameter.   It could validate the input and then send it to a backend service or update local game data.</p> </li> <li> <p><code>SaveGameCommand</code>:   Provides a consistent way to trigger the save game process, regardless of whether it's initiated by an autosave timer, a player action, or a level transition.   The command itself would interact with your saving/loading system.</p> </li> <li> <p><code>AnalyticsEventCommand&lt;AnalyticsData&gt;</code>:   A generic command to send analytics events.   Different parts of your game can raise this command with specific <code>AnalyticsData</code> (e.g., level completion, item purchase) without needing to know the specifics of the analytics SDK implementation.</p> </li> <li> <p>Debugging and Testing Specific Functionalities from the Editor:   As shown in the \"Editor Integration\" section, any <code>Command</code> can be executed directly from the Inspector.   This is invaluable for testing isolated pieces of logic without needing to play through entire game sequences.</p> </li> </ul> <p>By using Commands, you create a clear separation of concerns. The invoker of a command doesn't need to know how the action is performed, only what action to trigger. This makes your codebase more modular, easier to understand, and simpler to maintain and extend.</p>"},{"location":"features/command/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The sample demonstrates how to create both parameterless and typed <code>Command</code> assets to log messages to the console. It shows how they can be triggered directly from a <code>UnityEvent</code> in the Inspector.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>CommandSamples</code> folder after importing.</p>"},{"location":"features/game-event/","title":"GameEvent","text":"<p><code>GameEvent</code> is a core feature in SOAR that implements the publish-subscribe pattern using <code>ScriptableObject</code> assets. An event represents an occurrence within the program execution that requires a specific response. This allows for decoupled communication between different parts of an application, where an event can be published (raised) by one system and listened to by multiple other systems without them needing direct references to each other.</p>"},{"location":"features/game-event/#gameevent-parameterless","title":"<code>GameEvent</code> (Parameterless)","text":"<p>The base <code>GameEvent</code> represents an event that does not carry any data.</p>"},{"location":"features/game-event/#creating-a-gameevent","title":"Creating a GameEvent","text":"<p>Create a <code>GameEvent</code> asset from the <code>Assets &gt; Create &gt; SOAR &gt; Game Events &gt; GameEvent</code> menu.</p> <p></p>"},{"location":"features/game-event/#raising-a-gameevent-from-a-script","title":"Raising a GameEvent from a Script","text":"<p>To raise an event from a script, call the <code>Raise()</code> method on the <code>GameEvent</code> instance. All active subscribers will be notified.</p> <pre><code>// File: GameEventPublisherExample.cs\nusing Soar.Events;\nusing UnityEngine;\n\npublic class GameEventPublisherExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            gameEvent.Raise();\n            Debug.Log($\"Game Event {gameEvent.name} Raised.\");\n        }\n    }\n}\n</code></pre>"},{"location":"features/game-event/#subscribing-to-a-gameevent-from-a-script","title":"Subscribing to a GameEvent from a Script","text":"<p>To listen for an event, call the <code>Subscribe()</code> method with an <code>Action</code> to be executed when the event is raised. The <code>Subscribe</code> method returns an <code>IDisposable</code> which should be stored and disposed of when the listener no longer needs to receive events (e.g., in <code>OnDestroy</code> or <code>OnDisable</code>).</p> <pre><code>// File: GameEventSubscriberExample.cs\nusing System;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class GameEventSubscriberExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private IDisposable subscription;\n\n    private void Start()\n    {\n        subscription = gameEvent.Subscribe(OnGameEventRaised);\n    }\n\n    private void OnGameEventRaised()\n    {\n        Debug.Log($\"Game Event {gameEvent.name} Received.\");\n    }\n\n    private void OnDestroy()\n    {\n        subscription?.Dispose();\n    }\n}\n</code></pre>"},{"location":"features/game-event/#gameeventt-with-data","title":"<code>GameEvent&lt;T&gt;</code> (With Data)","text":"<p>The generic <code>GameEvent&lt;T&gt;</code> class allows creating events that carry a data payload of a specific type <code>T</code>.</p>"},{"location":"features/game-event/#creating-a-typed-gameevent","title":"Creating a Typed GameEvent","text":"<p>SOAR provides some common typed <code>GameEvent</code>s (e.g., <code>IntGameEvent</code>, <code>StringGameEvent</code>) that can be created from the menu. Custom typed <code>GameEvent</code>s can be created by inheriting from <code>GameEvent&lt;T&gt;</code>:</p> <pre><code>// File: MyCustomDataGameEvent.cs\nusing System;\nusing Soar;\nusing Soar.Events;\nusing UnityEngine;\n\n// Define custom data structure\n[Serializable]\npublic struct MyCustomData\n{\n    public int id;\n    public string message;\n}\n\n// Create a new GameEvent asset type for MyCustomData\n[CreateAssetMenu(fileName = \"MyCustomDataGameEvent\", menuName = MenuHelper.DefaultGameEventMenu + \"My Custom Data GameEvent\")]\npublic class MyCustomDataGameEvent : GameEvent&lt;MyCustomData&gt; { }\n</code></pre> <p>Then, an asset of this type can be created from <code>Create &gt; SOAR &gt; Game Events &gt; My Custom Data GameEvent</code>.</p>"},{"location":"features/game-event/#raising-a-typed-event","title":"Raising a Typed Event","text":"<p>Call <code>Raise(T value)</code> with the data payload.</p> <pre><code>// File: MyCustomDataGameEvent.cs\nusing UnityEngine;\n\npublic class MyTypedPublisher : MonoBehaviour\n{\n    [SerializeField] private MyCustomDataGameEvent onDataPublished;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            var data = new MyCustomData { id = 1, message = \"Hello World\" };\n            onDataPublished.Raise(data);\n        }\n    }\n}\n</code></pre>"},{"location":"features/game-event/#subscribing-to-a-typed-event","title":"Subscribing to a Typed Event","text":"<p>Subscribe with an <code>Action&lt;T&gt;</code> to receive the data.</p> <pre><code>// File: MyTypedSubscriber.cs\nusing System;\nusing UnityEngine;\n\npublic class MyTypedSubscriber : MonoBehaviour\n{\n    [SerializeField] private MyCustomDataGameEvent gameEvent;\n\n    private IDisposable subscription;\n\n    private void Start()\n    {\n        subscription = gameEvent.Subscribe(HandlePublishedData);\n    }\n\n    private void HandlePublishedData(MyCustomData data)\n    {\n        Debug.Log($\"Data received: ID={data.id}, Message='{data.message}'\");\n    }\n\n    private void OnDestroy()\n    {\n        subscription?.Dispose();\n    }\n}\n</code></pre> <p>The <code>GameEvent&lt;T&gt;</code> also has a <code>value</code> field that stores the last raised value. This value is reset to <code>default(T)</code> when the application quits or when domain reload is disabled and play mode is exited.</p>"},{"location":"features/game-event/#r3-integration","title":"R3 Integration","text":"<p>When the R3 library is present, <code>GameEvent</code>s are enhanced with powerful reactive and asynchronous capabilities.</p> <ul> <li><code>AsObservable()</code>: Returns the event as an R3 <code>Observable</code> stream.<ul> <li>For a parameterless <code>GameEvent</code>, this returns an <code>Observable&lt;Unit&gt;</code>.</li> <li>For a <code>GameEvent&lt;T&gt;</code>, it returns an <code>Observable&lt;T&gt;</code>.</li> </ul> </li> <li><code>AsUnitObservable()</code>: Specific to <code>GameEvent&lt;T&gt;</code>, this returns an <code>Observable&lt;Unit&gt;</code>, useful for when you only need to know that an event was raised, but not its value.</li> <li><code>EventAsync()</code>: Returns a <code>ValueTask</code> (or <code>ValueTask&lt;T&gt;</code>) that completes the next time the event is raised.</li> <li><code>ToAsyncEnumerable()</code>: Converts the event stream into an <code>IAsyncEnumerable&lt;T&gt;</code>, allowing it to be consumed in an <code>await foreach</code> loop.</li> </ul>"},{"location":"features/game-event/#examples","title":"Examples","text":"<p>Using <code>AsObservable</code> with <code>GameEvent&lt;T&gt;</code>: <pre><code>using R3;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class EventLogger : MonoBehaviour\n{\n    [SerializeField] private StringGameEvent onImportantEvent;\n\n    void Start()\n    {\n        onImportantEvent.AsObservable()\n            .Subscribe(message =&gt; Debug.Log($\"Event received: {message}\"))\n            .AddTo(this);\n    }\n}\n</code></pre></p> <p>Awaiting a GameEvent: <pre><code>using Soar.Events;\nusing UnityEngine;\n\npublic class LevelManager : MonoBehaviour\n{\n    [SerializeField] private GameEvent onPlayerReady;\n\n    private async void Start()\n    {\n        Debug.Log(\"Waiting for player to be ready...\");\n        await onPlayerReady.EventAsync();\n        Debug.Log(\"Player is ready! Starting level.\");\n    }\n}\n</code></pre></p>"},{"location":"features/game-event/#editor-integration","title":"Editor Integration","text":"<p><code>GameEvent</code> assets have a custom editor inspector.</p> <ul> <li> <p>Raise Button: A \"Raise\" button is available in the Inspector for all <code>GameEvent</code>s. Clicking this button will call the <code>Raise()</code> method on the event, which is useful for debugging and testing event responses in both Edit Mode and Play Mode.</p> </li> <li> <p>Value Display (for <code>GameEvent&lt;T&gt;</code>): For typed <code>GameEvent&lt;T&gt;</code>, the current <code>value</code> (or the properties of the value if it's a complex type) is displayed in the Inspector, which allows for viewing and sometimes modifying the data that will be raised if the \"Raise\" button is pressed without providing a new value.</p> </li> </ul>"},{"location":"features/game-event/#lifecycle-and-disposal","title":"Lifecycle and Disposal","text":"<p><code>GameEvent</code>s are <code>ScriptableObject</code>s and implement <code>IDisposable</code>.</p> <ul> <li>Subscriptions are managed internally. When a <code>GameEvent</code> is disposed (which happens as part of the <code>SoarCore</code> lifecycle, typically on application quit), its subscriptions are cleared.</li> <li>For the independent implementation (when <code>SOAR_R3</code> is not defined), subscriptions are stored in a list and disposed of.</li> <li>When <code>SOAR_R3</code> is defined, <code>GameEvent</code>s use R3 <code>Subject</code>s internally, and disposal is handled by disposing of the <code>Subject</code>.</li> <li>The <code>SoarCore</code> base class handles initialization and cleanup, including calling <code>Dispose()</code> during <code>OnQuit</code>. It also manages behavior related to Unity's \"Enter Play Mode Options\" (like Disable Domain Reload).</li> </ul> <p>This ensures that resources are cleaned up correctly and event listeners do not attempt to operate on disposed objects.</p>"},{"location":"features/game-event/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The GameEvent Sample demonstrates how a UI Button can raise a <code>GameEvent</code> to communicate with a listener component without a direct reference. The listener then updates a UI Text element in response.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>GameEventSamples</code> folder after importing.</p>"},{"location":"features/game-event/#special-gameevents","title":"Special GameEvents","text":""},{"location":"features/game-event/#boolgameevent","title":"<code>BoolGameEvent</code>","text":"<p>The <code>BoolGameEvent</code> has a <code>RaiseToggled()</code> method that raises the event with the opposite of the current value.</p>"},{"location":"features/jsonable-extension/","title":"Jsonable Extension","text":"<p>SOAR includes a powerful \"Jsonable Extension\" feature that allows for the serialization and deserialization of <code>Variable</code> assets to and from JSON format. This is particularly useful for saving and loading game data or initial configurations. The functionality is exposed through the <code>JsonableVariable&lt;T&gt;</code> base class and a custom Inspector window, which provides tools for converting a variable's data to a JSON string or a local file.</p>"},{"location":"features/jsonable-extension/#core-concepts","title":"Core Concepts","text":""},{"location":"features/jsonable-extension/#ijsonable-interface","title":"<code>IJsonable</code> Interface","text":"<p>The <code>IJsonable</code> interface defines the contract for objects that can be converted to and from a JSON string. It contains two methods:</p> <ul> <li><code>ToJsonString()</code>: Converts the object's data into a JSON formatted string.</li> <li><code>FromJsonString(string jsonString)</code>: Populates the object's data from a JSON formatted string.</li> </ul>"},{"location":"features/jsonable-extension/#jsonablevariablet","title":"<code>JsonableVariable&lt;T&gt;</code>","text":"<p><code>JsonableVariable&lt;T&gt;</code> is an abstract class that inherits from <code>Variable&lt;T&gt;</code> and implements the <code>IJsonable</code> interface. Any <code>Variable</code> that needs to be saved to or loaded from JSON should inherit from this class.</p> <p>When serializing, <code>JsonableVariable&lt;T&gt;</code> handles primitive types (like <code>int</code>, <code>float</code>, <code>string</code>) by wrapping them in a <code>JsonableWrapper&lt;T&gt;</code> to ensure they are correctly formatted as a JSON object (e.g., <code>{\"value\": 10}</code>). Complex <code>[Serializable]</code> types are serialized directly.</p>"},{"location":"features/jsonable-extension/#creating-a-jsonablevariable","title":"Creating a <code>JsonableVariable</code>","text":"<p>To make a custom <code>Variable</code> jsonable, simply inherit from <code>JsonableVariable&lt;T&gt;</code> instead of <code>Variable&lt;T&gt;</code>.</p> <ol> <li> <p>Define the Data Type: Ensure the data type is <code>[Serializable]</code>.</p> <pre><code>// File: PlayerSettings.cs\nusing System;\n\n[Serializable]\npublic struct PlayerSettings\n{\n    public float musicVolume;\n    public float sfxVolume;\n    public bool showTutorials;\n}\n</code></pre> </li> <li> <p>Create the JsonableVariable Class: Inherit from <code>JsonableVariable&lt;T&gt;</code>.</p> <pre><code>// File: PlayerSettingsVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"PlayerSettingsVariable\", menuName = MenuHelper.DefaultVariableMenu + \"Player Settings Variable\")]\npublic class PlayerSettingsVariable : JsonableVariable&lt;PlayerSettings&gt; { }\n</code></pre> </li> </ol> <p>Now, <code>PlayerSettingsVariable</code> assets can be created, and they will have the JSON serialization features available in their Inspector.</p>"},{"location":"features/jsonable-extension/#editor-integration","title":"Editor Integration","text":"<p>The <code>JsonableVariableEditor</code> provides a custom Inspector for any asset inheriting from <code>JsonableVariable&lt;T&gt;</code>. In addition to the standard <code>Variable</code> features, it includes a \"Json File Management\" section.</p> <p></p> <p>This UI allows for:</p> <ul> <li>Choosing a Save Path: Select between Unity's <code>Application.dataPath</code>, <code>Application.persistentDataPath</code>, or a custom file path.</li> <li>Specifying a Filename: A filename for the JSON file can be set. By default, it uses the name of the <code>ScriptableObject</code> asset (e.g., <code>PlayerSettingsVariable.json</code>).</li> <li>Saving to JSON: The \"Save to Json\" button serializes the current <code>Value</code> of the variable and writes it to the specified file.</li> <li>Loading from JSON: The \"Load from Json\" button reads the specified JSON file and deserializes its content into the variable's <code>Value</code>.</li> </ul>"},{"location":"features/jsonable-extension/#jsonableextensions","title":"<code>JsonableExtensions</code>","text":"<p>SOAR also provides a set of extension methods in the <code>Soar.JsonableExtensions</code> class to make working with <code>IJsonable</code> objects from code more convenient.</p> <p>These methods allow for saving and loading <code>IJsonable</code> objects with various path and filename configurations.</p>"},{"location":"features/jsonable-extension/#saving-to-a-file","title":"Saving to a File","text":"<p>An <code>IJsonable</code> object can be saved to a JSON file directly from code.</p> <pre><code>// File: SaveManager.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class SaveManager : MonoBehaviour\n{\n    [SerializeField] private PlayerSettingsVariable playerSettings;\n\n    public void SaveSettings()\n    {\n        // Save to Application.persistentDataPath with the filename \"PlayerSettings.json\"\n        playerSettings.SaveToJson(Application.persistentDataPath, \"PlayerSettings\");\n        Debug.Log(\"Player settings saved!\");\n    }\n}\n</code></pre>"},{"location":"features/jsonable-extension/#loading-from-a-file","title":"Loading from a File","text":"<p>Similarly, data can be loaded from a JSON file into an <code>IJsonable</code> object.</p> <pre><code>// File: LoadManager.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class LoadManager : MonoBehaviour\n{\n    [SerializeField] private PlayerSettingsVariable playerSettings;\n\n    void Start()\n    {\n        // Load from Application.persistentDataPath\n        if (playerSettings.IsJsonFileExist(Application.persistentDataPath, \"PlayerSettings\"))\n        {\n            playerSettings.LoadFromJson(Application.persistentDataPath, \"PlayerSettings\");\n            Debug.Log(\"Player settings loaded!\");\n        }\n        else\n        {\n            Debug.Log(\"No saved settings found. Using default values.\");\n        }\n    }\n}\n</code></pre> <p>The <code>JsonableExtensions</code> class also includes methods to check for the existence of a JSON file (<code>IsJsonFileExist</code>), providing a complete toolkit for managing data persistence with SOAR variables.</p>"},{"location":"features/jsonable-extension/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The Jsonable Sample demonstrates how to create a custom <code>JsonableVariable</code> to hold settings data. It includes a UI to edit the data at runtime and buttons that use the <code>JsonableExtensions</code> to save the variable to a file and load it back.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>JsonableSamples</code> folder after importing.</p>"},{"location":"features/transaction/","title":"Transaction","text":"<p>A <code>Transaction</code> is a two-way event that facilitates a request-response communication pattern using <code>ScriptableObject</code> assets. When a request is sent, a registered response handler processes it and returns a result to the requester. This is ideal for operations that require confirmation or a result, such as fetching data from a service or validating a user action. Only one response handler can be registered at a time.</p>"},{"location":"features/transaction/#core-concepts","title":"Core Concepts","text":"<p>A <code>Transaction</code>'s workflow involves three main parts: a Request, a Response, and optional Subscriptions.</p> <ul> <li>Request: A system initiates a transaction by making a request. This can optionally include input data and a callback for the response. If no responder is currently registered, requests are queued until one becomes available.</li> <li>Response: The logic that handles a request and produces a result, which can be synchronous or asynchronous. Only one responder can be registered at a time; registering a new one replaces the previous. When a responder is registered, it immediately processes all queued requests in order.</li> <li>Subscription: Observers can subscribe to requests or responses to trigger reactive logic without participating directly in the transaction.</li> </ul> <p>This pattern ensures that the requester and responder are decoupled. They only need a shared reference to the <code>Transaction</code> asset to communicate.</p>"},{"location":"features/transaction/#transaction-parameterless","title":"<code>Transaction</code> (Parameterless)","text":"<p>The base <code>Transaction</code> class manages interactions that do not involve data exchange. It's useful for simple signaling where the requester needs to know that an action has been completed.</p>"},{"location":"features/transaction/#creating-a-parameterless-transaction","title":"Creating a Parameterless Transaction","text":"<p>An instance of the base <code>Transaction</code> can be created directly from the <code>Assets &gt; Create &gt; SOAR &gt; Transactions &gt; Transaction</code> menu.</p> <p>If a more specific, namespace or named transaction is preferred, a custom class can be created by inheriting from the base <code>Transaction</code> class:</p> <pre><code>// File: MySimpleTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MySimpleTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"My Simple Transaction\")]\npublic class MySimpleTransaction : Transaction {}\n</code></pre>"},{"location":"features/transaction/#registering-response","title":"Registering Response","text":"<p>A Transaction needs a registered response to process requests. A response can be registered in two ways: internally within the Transaction's class definition, or externally from another script.</p> <ul> <li>Internal Registration: The <code>RegisterResponseInternal()</code> method can be overridden in a class inheriting from Transaction to define its default behavior. This response is automatically registered when the asset is initialized.</li> </ul> <pre><code>// File: MyInternallyHandledTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyInternallyHandledTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"My Internally Handled Transaction\")]\npublic class MyInternallyHandledTransaction : Transaction\n{\n    protected override void RegisterResponseInternal()\n    {\n        RegisterResponse(() =&gt; Debug.Log(\"Internal response executed!\"));\n    }\n}\n</code></pre> <ul> <li>External Registration: The <code>RegisterResponse()</code> method can be called from any script to set or override the transaction's behavior at runtime. This is useful for dynamic scenarios where the response logic might change. Both synchronous (<code>Action</code>) and asynchronous (<code>Func&lt;ValueTask&gt;</code>) responses are supported.</li> </ul> <pre><code>// File: TransactionResponder.cs\nusing Soar.Transactions;\nusing UnityEngine;\nusing System.Threading.Tasks;\n\npublic class TransactionResponder : MonoBehaviour\n{\n    [SerializeField] private Transaction myTransaction;\n\n    private void Start()\n    {\n        // Register a synchronous response\n        myTransaction.RegisterResponse(HandleSyncResponse);\n\n        // Or, register an asynchronous response\n        // myTransaction.RegisterResponse(HandleAsyncResponse);\n    }\n\n    private void OnDestroy()\n    {\n        myTransaction.UnregisterResponse();\n    }\n\n    private void HandleSyncResponse()\n    {\n        Debug.Log(\"External synchronous response executed!\");\n    }\n\n    private async ValueTask HandleAsyncResponse()\n    {\n        Debug.Log(\"Async response started...\");\n        await Task.Delay(1000); // Simulate work\n        Debug.Log(\"Async response finished.\");\n    }\n}\n</code></pre>"},{"location":"features/transaction/#requesting","title":"Requesting","text":"<p>A transaction is requested by calling <code>Request(Action onResponse)</code> for callback-based requests. The registered response logic is invoked when a request is made.</p> <pre><code>// File: TransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private Transaction myTransaction;\n\n    private void Start()\n    {\n        myTransaction.Request(() =&gt; Debug.Log(\"Transaction completed!\"));\n    }\n}\n</code></pre> <p>For asynchronous requests, use <code>RequestAsync()</code> which returns a <code>ValueTask</code> that can be awaited.</p> <pre><code>// File: AsyncTransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class AsyncTransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private Transaction myTransaction;\n\n    private async void Start()\n    {\n        await myTransaction.RequestAsync();\n        Debug.Log(\"Async transaction completed!\");\n    }\n}\n</code></pre>"},{"location":"features/transaction/#transactiontrequest-tresponse-typed","title":"<code>Transaction&lt;TRequest, TResponse&gt;</code> (Typed)","text":"<p>The generic <code>Transaction&lt;TRequest, TResponse&gt;</code> class allows for transactions with input and output values.</p>"},{"location":"features/transaction/#transactiont-symmetric-typed","title":"<code>Transaction&lt;T&gt;</code> (Symmetric Typed)","text":"<p>For convenience, SOAR provides the <code>Transaction&lt;T&gt;</code> base class, which is a shorthand for <code>Transaction&lt;T, T&gt;</code>. This is useful for scenarios where the request and response data share the same type, such as an operation that takes a value, modifies it, and returns it.</p> <pre><code>// File: ModifyNumberTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"ModifyNumberTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"Modify Number Transaction\")]\npublic class ModifyNumberTransaction : Transaction&lt;int&gt; // Inherits from Transaction&lt;int, int&gt;\n{\n    protected override void RegisterResponseInternal()\n    {\n        RegisterResponse(request =&gt; request * 2);\n    }\n}\n</code></pre>"},{"location":"features/transaction/#creating-a-typed-transaction","title":"Creating a Typed Transaction","text":"<p>A custom transaction can be created by inheriting from <code>Transaction&lt;TRequest, TResponse&gt;</code> and implementing the response logic.</p> <pre><code>// File: IntToStringTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"IntToStringTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"Int To String Transaction\")]\npublic class IntToStringTransaction : Transaction&lt;int, string&gt;\n{\n    protected override void RegisterResponseInternal()\n    {\n        RegisterResponse(request =&gt; $\"Value is {request}\");\n    }\n}\n</code></pre>"},{"location":"features/transaction/#requesting-with-values","title":"Requesting with Values","text":"<p>A typed transaction is requested by calling <code>Request(TRequest, Action&lt;TResponse&gt;)</code> for callback-based requests.</p> <pre><code>// File: TypedTransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TypedTransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private IntToStringTransaction intToStringTransaction;\n\n    private void Start()\n    {\n        intToStringTransaction.Request(42, response =&gt; Debug.Log(response));\n    }\n}\n</code></pre> <p>For asynchronous requests, use <code>RequestAsync(TRequest)</code>, which returns a <code>ValueTask&lt;TResponse&gt;</code> that can be awaited.</p> <pre><code>// File: AsyncTypedTransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class AsyncTypedTransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private IntToStringTransaction intToStringTransaction;\n\n    private async void Start()\n    {\n        var result = await intToStringTransaction.RequestAsync(99);\n        Debug.Log($\"Async result: {result}\");\n    }\n}\n</code></pre>"},{"location":"features/transaction/#subscribing-to-requests-and-responses","title":"Subscribing to Requests and Responses","text":"<p>Transactions provide subscription methods to observe when requests or responses occur. Subscriptions should be disposed of when no longer needed.</p> <pre><code>// File: TransactionMonitor.cs\nusing System;\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TransactionMonitor : MonoBehaviour\n{\n    [SerializeField] private Transaction transaction;\n\n    private IDisposable requestSubscription;\n    private IDisposable responseSubscription;\n\n    private void Start()\n    {\n        requestSubscription = transaction.SubscribeToRequest(() =&gt; Debug.Log(\"Request made\"));\n        responseSubscription = transaction.SubscribeToResponse(() =&gt; Debug.Log(\"Response made\"));\n    }\n\n    private void OnDestroy()\n    {\n        requestSubscription?.Dispose();\n        responseSubscription?.Dispose();\n    }\n}\n</code></pre> <p>For typed transactions:</p> <pre><code>// File: TypedTransactionMonitor.cs\nusing System;\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TypedTransactionMonitor : MonoBehaviour\n{\n    [SerializeField] private IntToStringTransaction transaction;\n\n    private IDisposable requestSubscription;\n    private IDisposable responseSubscription;\n\n    private void Start()\n    {\n        requestSubscription = transaction.SubscribeToRequest(request =&gt; Debug.Log($\"Requested: {request}\"));\n        responseSubscription = transaction.SubscribeToResponse(response =&gt; Debug.Log($\"Responded: {response}\"));\n    }\n\n    private void OnDestroy()\n    {\n        requestSubscription?.Dispose();\n        responseSubscription?.Dispose();\n    }\n}\n</code></pre>"},{"location":"features/transaction/#r3-integration","title":"R3 Integration","text":"<p>When the R3 library is present, <code>Transaction</code>s are supercharged with robust tools for handling asynchronous request-response cycles and managing concurrency.</p> <ul> <li><code>AsRequestObservable()</code> / <code>AsResponseObservable()</code>: These methods return <code>Observable</code> streams that allow you to reactively listen for when requests are made or when responses are returned.</li> <li><code>RequestAsync()</code>: This is the primary method for making asynchronous requests. It returns a <code>ValueTask</code> (or <code>ValueTask&lt;TResponse&gt;</code>) that completes when the registered response handler finishes its work.</li> <li>Asynchronous <code>RegisterResponse</code>: The most powerful feature is the ability to register <code>async</code> methods as response handlers. You can use <code>Func&lt;ValueTask&gt;</code>, <code>Func&lt;TRequest, ValueTask&lt;TResponse&gt;&gt;</code>, and other async delegates.</li> </ul>"},{"location":"features/transaction/#concurrency-with-awaitoperation","title":"Concurrency with <code>AwaitOperation</code>","text":"<p>When registering an asynchronous response, you can specify an <code>AwaitOperation</code> to control how the <code>Transaction</code> behaves if multiple requests arrive while a response is still being processed.</p> <ul> <li><code>Parallel</code>: (Default) Processes all incoming requests concurrently.</li> <li><code>Sequential</code>: Queues incoming requests and processes them one at a time.</li> <li><code>Drop</code>: If a request is already in progress, new requests are ignored.</li> <li><code>Switch</code>: If a new request arrives, the previous, unfinished request is cancelled.</li> <li><code>ThrottleFirst</code>: Throttles requests, allowing only the first one in a given time window.</li> </ul>"},{"location":"features/transaction/#example","title":"Example","text":"<pre><code>// File: MyAsyncService.cs\nusing Soar.Transactions;\nusing System.Threading.Tasks;\nusing UnityEngine;\n\npublic class MyAsyncService : MonoBehaviour\n{\n    [SerializeField] private StringTransaction fetchDataTransaction;\n\n    void Start()\n    {\n        // Register an async response handler that simulates a web request\n        fetchDataTransaction.RegisterResponse(async (request) =&gt;\n        {\n            Debug.Log($\"Fetching data for: {request}...\");\n            await Task.Delay(1000); // Simulate network latency\n            return $\"Data for {request}\";\n        }, R3.AwaitOperation.Sequential); // Process requests one by one\n    }\n}\n</code></pre>"},{"location":"features/transaction/#editor-integration","title":"Editor Integration","text":"<p>Transactions have custom inspectors in the Unity Editor.</p> <ul> <li> <p>Request Button: A \"Request\" button is available in the Inspector for all <code>Transaction</code> assets. Clicking this button will trigger a request, useful for testing and debugging.</p> </li> <li> <p>Dummy Response Handler: Upon requests, when there are no response handler registered in the Transaction, a dummy response handler will temporarily registered. This ensures that requests made on the editor be responded properly.</p> </li> </ul> <p></p> <ul> <li> <p>Value Display: For typed transactions, the current request and response values are displayed in the Inspector.</p> </li> <li> <p>Value Request Button: For typed transactions, you can also request with current request value displayed in the inspector.</p> </li> </ul> <p></p>"},{"location":"features/transaction/#lifecycle-and-disposal","title":"Lifecycle and Disposal","text":"<p>Transactions are <code>ScriptableObject</code>s and implement <code>IDisposable</code>.</p> <ul> <li>Initialization: On enable, transactions register their internal response handler (if any), and clear pending requests.</li> <li>Disposal: On application quit or domain reload (when enabled), transactions dispose of subscriptions and clear requests to prevent memory leaks.</li> <li>Reset: The <code>ResetResponseInternal()</code> method can be called to reset the registered response to its default implementation.</li> </ul>"},{"location":"features/transaction/#use-cases","title":"Use Cases","text":"<p>Transactions are suitable for scenarios requiring decoupled request-response flows, such as:</p> <ul> <li>Service Calls: Encapsulating backend or service requests with asynchronous responses.</li> <li>Game Logic: Handling operations like purchasing, saving, or loading with confirmation callbacks.</li> <li>Editor Tools: Triggering and observing operations from the Unity Editor for debugging or automation.</li> </ul> <p>By using transactions, systems can communicate in a modular, testable, and reactive manner, supporting both synchronous and asynchronous workflows.</p>"},{"location":"features/transaction/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The Transaction Sample demonstrates the full request-response-subscribe lifecycle. It includes a requester that simulates a long-running process, a responder that handles the request, and observer components that log when the request and response occur.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>TransactionSamples</code> folder after importing.</p>"},{"location":"features/unity-event-binder/","title":"Unity Event Binder","text":"<p>The <code>UnityEventBinder</code> is a crucial <code>MonoBehaviour</code> component that bridges the gap between SOAR's <code>GameEvent</code>s and Unity's built-in <code>UnityEvent</code> system. Often called an \"Event Listener,\" it listens for a <code>GameEvent</code> asset and, in response, invokes a <code>UnityEvent</code>, allowing for game logic to be wired up directly in the Inspector without code.</p>"},{"location":"features/unity-event-binder/#core-concept","title":"Core Concept","text":"<p>The <code>UnityEventBinder</code> is a <code>MonoBehaviour</code> that is attached to a <code>GameObject</code> in a scene. It has two main purposes:</p> <ol> <li>Listen to a <code>GameEvent</code>: A specific <code>GameEvent</code> asset is assigned to the binder.</li> <li>Trigger a <code>UnityEvent</code>: When the specified <code>GameEvent</code> is raised, the binder invokes a <code>UnityEvent</code> that can be configured in the Inspector.</li> </ol> <p>This creates a powerful and decoupled workflow. The object raising the <code>GameEvent</code> doesn't need to know anything about the objects that will react to it, and vice-versa.</p>"},{"location":"features/unity-event-binder/#unityeventbinder-for-parameterless-gameevents","title":"<code>UnityEventBinder</code> (for parameterless GameEvents)","text":"<p>The non-generic <code>UnityEventBinder</code> is used for <code>GameEvent</code>s that do not carry any data.</p>"},{"location":"features/unity-event-binder/#how-to-use","title":"How to Use","text":"<ol> <li> <p>Add the Component: A <code>GameObject</code> in a scene is selected and the <code>UnityEventBinder</code> component is added to it (<code>Add Component &gt; SOAR &gt; Unity Event Binder</code>).</p> </li> <li> <p>Assign the GameEvent: In the Inspector, a parameterless <code>GameEvent</code> asset is dragged and dropped into the <code>Game Event To Listen</code> field.</p> <p></p> </li> <li> <p>Configure the UnityEvent: The <code>On Game Event Raised</code> <code>UnityEvent</code> is configured. <code>GameObject</code>s or components can be dragged into the event slot and a public method can be selected to be called when the event is raised.</p> <p></p> </li> </ol> <p>Now, whenever the assigned <code>GameEvent</code> is raised (from a script, another <code>UnityEvent</code>, or the Inspector), the <code>UnityEventBinder</code> will invoke the configured methods.</p>"},{"location":"features/unity-event-binder/#unityeventbindert-for-gameevents-with-data","title":"<code>UnityEventBinder&lt;T&gt;</code> (for GameEvents with data)","text":"<p>The generic <code>UnityEventBinder&lt;T&gt;</code> is used for <code>GameEvent&lt;T&gt;</code>s that carry a data payload. SOAR provides a set of pre-built binders for common types.</p>"},{"location":"features/unity-event-binder/#pre-built-binders","title":"Pre-built Binders","text":"<p>Pre-built binders for various types can be found under <code>Add Component &gt; SOAR &gt; Unity Event Binders</code>:</p> <ul> <li><code>BoolUnityEventBinder</code></li> <li><code>ByteUnityEventBinder</code></li> <li><code>DoubleUnityEventBinder</code></li> <li><code>FloatUnityEventBinder</code></li> <li><code>IntUnityEventBinder</code></li> <li><code>LongUnityEventBinder</code></li> <li><code>StringUnityEventBinder</code></li> <li><code>PoseUnityEventBinder</code></li> <li><code>QuaternionUnityEventBinder</code></li> <li><code>Vector2UnityEventBinder</code></li> <li><code>Vector3UnityEventBinder</code></li> </ul>"},{"location":"features/unity-event-binder/#how-to-use-typed-binders","title":"How to Use Typed Binders","text":"<p>The process is similar to the parameterless binder, but with a typed <code>UnityEvent</code>:</p> <ol> <li> <p>Add a Typed Binder: A specific typed binder is added to a <code>GameObject</code> (e.g., <code>Vector3UnityEventBinder</code>).</p> </li> <li> <p>Assign the Typed GameEvent: A corresponding typed <code>GameEvent&lt;T&gt;</code> asset is assigned (e.g., a <code>Vector3Variable</code>, as <code>Variable&lt;T&gt;</code> derived from <code>GameEvent&lt;T&gt;</code>).</p> </li> <li> <p>Configure the Typed UnityEvent: The Inspector will show a <code>On Typed Game Event Raised (T)</code> event (e.g., <code>On Typed Game Event Raised (Vector3)</code>). This is a <code>UnityEvent&lt;T&gt;</code> that can pass the event's data payload directly to the listening methods. Methods that accept a parameter of the corresponding type can be selected.</p> <p>For example, a Transform's <code>localPosition</code> can be linked directly to a <code>Vector3UnityEventBinder</code>'s <code>UnityEvent</code>.</p> <p></p> </li> </ol>"},{"location":"features/unity-event-binder/#special-binders","title":"Special Binders","text":"<ul> <li> <p><code>BoolUnityEventBinder</code>: In addition to the standard <code>UnityEvent&lt;bool&gt;</code>, this binder also provides an <code>On Negated Bool Event Raised</code> event that is invoked with the opposite boolean value.</p> <p></p> </li> <li> <p><code>StringUnityEventBinder</code>: This binder has a special behavior where it can also be used with a parameterless <code>GameEvent</code>. In this case, it will invoke the <code>UnityEvent&lt;string&gt;</code> with the <code>ToString()</code> representation of the <code>GameEvent</code> object itself.</p> <p></p> </li> <li> <p><code>UnityEventBatchBinder</code>: This component allows you to listen to multiple <code>GameEvent</code>s and invoke a single <code>UnityEvent</code> in response. This is useful when you have multiple events that should trigger the same response.</p> </li> </ul>"},{"location":"features/unity-event-binder/#creating-custom-unityeventbindert","title":"Creating Custom <code>UnityEventBinder&lt;T&gt;</code>","text":"<p>A custom typed <code>UnityEventBinder</code> can be created as necessary:</p> <ol> <li> <p>Define the Custom Data Type and <code>GameEvent&lt;T&gt;</code>: A <code>[Serializable]</code> data type and a corresponding <code>GameEvent&lt;T&gt;</code> class for it must be defined.</p> <pre><code>// File: PlayerData.cs\nusing System;\n\n[Serializable]\npublic struct PlayerData\n{\n    public string name;\n    public int level;\n}\n\n// File: PlayerDataGameEvent.cs\nusing Soar.Events;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"PlayerDataGameEvent\", menuName = \"SOAR/Game Events/Player Data GameEvent\")]\npublic class PlayerDataGameEvent : GameEvent&lt;PlayerData&gt; { }\n</code></pre> </li> <li> <p>Create the Custom Binder Class: A new class that inherits from <code>UnityEventBinder&lt;T&gt;</code> is created, specifying the custom type.</p> <pre><code>// File: PlayerDataUnityEventBinder.cs\nusing Soar.Events;\n\npublic class PlayerDataUnityEventBinder : UnityEventBinder&lt;PlayerData&gt; { }\n</code></pre> </li> </ol> <p>The <code>UnityEventBinder&lt;T&gt;</code> base class handles all the logic. The <code>PlayerDataUnityEventBinder</code> component can now be added to a <code>GameObject</code> and used to listen for <code>PlayerDataGameEvent</code>s.</p>"},{"location":"features/unity-event-binder/#lifecycle","title":"Lifecycle","text":"<p>The <code>UnityEventBinder</code> automatically handles subscribing to the <code>GameEvent</code> in its <code>Start()</code> method and unsubscribing in its <code>OnDestroy()</code> method. This ensures that there are no memory leaks from lingering subscriptions when the <code>GameObject</code> is destroyed.</p>"},{"location":"features/unity-event-binder/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The UnityEventBinder Sample demonstrates how a <code>UnityEventBinder</code> can listen for a <code>GameEvent</code> and trigger a <code>UnityEvent</code> in response, all configured in the Inspector. This allows for codeless wiring of events to component methods.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>UnityEventBinderSamples</code> folder after importing.</p>"},{"location":"features/variable/","title":"Variable","text":"<p>The <code>Variable&lt;T&gt;</code> class in SOAR represents a data container stored in a <code>ScriptableObject</code>. It extends the <code>GameEvent&lt;T&gt;</code> system, meaning that whenever the <code>Value</code> of a <code>Variable&lt;T&gt;</code> changes, it also raises an event, notifying all subscribers of the new value. This makes <code>Variable&lt;T&gt;</code> a powerful tool for creating reactive data that can be easily shared and observed throughout application.</p> <p><code>Variable&lt;T&gt;</code> inherits from <code>GameEvent&lt;T&gt;</code> with Raise and Subscribe event features, and thus from <code>SoarCore</code>, gaining lifecycle management features.</p>"},{"location":"features/variable/#variablet","title":"<code>Variable&lt;T&gt;</code>","text":"<p>The generic <code>Variable&lt;T&gt;</code> class is the base for all variable types. It holds a value of type <code>T</code> and provides mechanisms to access, modify, and observe this value.</p> <p></p> <ul> <li> <p>Value Property: The primary way to interact with a <code>Variable&lt;T&gt;</code> is through its <code>Value</code> property. Assigning a new value to the <code>Value</code> property will trigger the <code>Raise(T)</code> method, which in turn notifies subscribers.</p> </li> <li> <p>Value Event Type: The <code>valueEventType</code> field (configurable in the Inspector) determines when the value change event is raised:</p> <ul> <li><code>OnAssign</code>: The event is raised every time the <code>Value</code> property is set, even if the new value is the same as the old one.</li> <li><code>OnChange</code>: The event is raised only if the new value is different from the current value. This is checked by the <code>IsValueEquals(T)</code> method.</li> </ul> </li> <li> <p>Subscribing to Changes: Since <code>Variable&lt;T&gt;</code> inherits from <code>GameEvent&lt;T&gt;</code>, subscription to value changes can be done by using the same <code>Subscribe</code> methods:</p> <ul> <li><code>Subscribe(Action&lt;T&gt; action)</code>: Receives the new value.</li> <li><code>Subscribe(Action&lt;T, T&gt; action)</code>: Receives both the old and new value. This is specific to <code>Variable&lt;T&gt;</code>.</li> <li><code>Subscribe(Action&lt;PairwiseValue&lt;T&gt;&gt; action)</code>: Receives a <code>PairwiseValue&lt;T&gt;</code> struct containing both old and new values. This is also specific to <code>Variable&lt;T&gt;</code>.</li> </ul> </li> <li> <p>Initial Value and Reset:</p> <ul> <li>The <code>InitialValue</code> property stores the value of the variable at initialization time (e.g., when the game starts or the editor compiles).</li> <li>The <code>ResetValue()</code> method allows reverting the variable's <code>Value</code> back to its <code>InitialValue</code>.</li> </ul> </li> <li> <p>Auto Reset Value: The <code>autoResetValue</code> boolean field (configurable in the Inspector) determines if the <code>Variable&lt;T&gt;</code> should automatically call <code>ResetValue()</code> when play mode ends. This is useful for ensuring variables return to a known state after testing.</p> </li> </ul> <p>Serialization and Deep Copy</p> <p>For <code>autoResetValue</code> to work with complex class types, SOAR performs a \"deep copy\" by serializing the initial value to a JSON string. This has two important implications: 1.  Performance: This serialization can create garbage and CPU overhead, especially at startup. For performance-critical variables, it's better to use structs or primitive types, which are copied by value and avoid this process. 2.  Compatibility: This method does not work for all types, especially Unity engine types like <code>Transform</code> or <code>GameObject</code>. Resetting these types requires manual handling.</p>"},{"location":"features/variable/#creating-a-variable","title":"Creating a Variable","text":"<p>SOAR provides several pre-defined <code>Variable</code> types for common Unity and C# types (e.g., <code>IntVariable</code>, <code>FloatVariable</code>, <code>StringVariable</code>, <code>Vector3Variable</code>). These can be created from the <code>Assets &gt; Create &gt; SOAR &gt; Variables</code> menu.</p> <p>Assembly Definition Reference</p> <p>These common types are defined within <code>Soar.Base.asmdef</code> assembly definition files, which different from SOAR's core classes <code>Soar.asmdef</code> assembly definition files. Make sure <code>Soar.Base.asmdef</code> reference was added to the asmdef that requires it.</p> <p>To create a variable for a custom data type:</p> <ol> <li> <p>Define a custom data structure. In order to make the data viewable and modifiable in the Inspector, it is a necessity to set it as <code>[Serializable]</code>.</p> <pre><code>// File: MyCustomData.cs\nusing System;\n\n[Serializable]\npublic struct MyCustomData\n{\n    public int score;\n    public string playerName;\n}\n</code></pre> </li> <li> <p>Create a new class that inherits from <code>Variable&lt;T&gt;</code>, specifying the custom type.</p> <pre><code>// File: MyCustomDataVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyCustomDataVariable\", menuName = MenuHelper.DefaultVariableMenu + \"My Custom Data Variable\")]\npublic class MyCustomDataVariable : Variable&lt;MyCustomData&gt; { }\n</code></pre> </li> <li> <p>Instances of <code>MyCustomDataVariable</code> can now be created from the <code>Assets &gt; Create &gt; SOAR &gt; Variables &gt; My Custom Data Variable</code> menu.</p> </li> </ol>"},{"location":"features/variable/#accessing-and-modifying-value","title":"Accessing and Modifying Value","text":"<p>The Value of a variable can be accessed from <code>Value</code> getter (property). Using the same property, a value of a variable can be set from <code>Value</code> setter (property). Modifying the value will Raise value-changed event.</p> <pre><code>// File: VariableUserExample.cs\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class VariableUserExample : MonoBehaviour\n{\n    [SerializeField] private IntVariable scoreVariable;\n\n    void Start()\n    {\n        Debug.Log($\"Initial Score: {scoreVariable.Value}\");\n    }\n\n    public void AddScore(int amount)\n    {\n        scoreVariable.Value += amount;\n    }\n}\n</code></pre>"},{"location":"features/variable/#subscribing-to-value-changes","title":"Subscribing to Value Changes","text":"<p>Changes in a <code>Variable&lt;T&gt;</code> can be observed by establishing a subscription to it. This mechanism is analogous to subscribing to a <code>GameEvent&lt;T&gt;</code>. Upon a change in the <code>Value</code> of the <code>Variable&lt;T&gt;</code>, all subscribed actions are invoked. To prevent memory leaks and unintended behavior, the subscription should be disposed of when it is no longer required, commonly within <code>OnDisable</code> or <code>OnDestroy</code>.</p> <pre><code>// File: ScoreDisplay.cs\nusing System;\nusing Soar.Variables;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class ScoreDisplay : MonoBehaviour\n{\n    [SerializeField] private IntVariable scoreVariable;\n    [SerializeField] private Text scoreText;\n    private IDisposable scoreSubscription;\n\n    private void Start()\n    {\n        // Subscribe to receive the new value\n        scoreSubscription = scoreVariable.Subscribe(UpdateScoreText);\n\n        // Optionally, subscribe to receive old and new values\n        // scoreSubscription = scoreVariable.Subscribe(HandleScoreChangeDetailed);\n\n        UpdateScoreText(scoreVariable.Value); // Update text with initial value\n    }\n\n    private void OnDestroy()\n    {\n        scoreSubscription?.Dispose();\n    }\n\n    private void UpdateScoreText(int newScore)\n    {\n        if (scoreText != null)\n        {\n            scoreText.text = $\"Score: {newScore}\";\n        }\n    }\n\n    // Example for old/new value subscription\n    private void HandleScoreChangeDetailed(int oldValue, int newValue)\n    {\n        Debug.Log($\"Score changed from {oldValue} to {newValue}\");\n        UpdateScoreText(newValue);\n    }\n}\n</code></pre>"},{"location":"features/variable/#jsonablevariablet","title":"<code>JsonableVariable&lt;T&gt;</code>","text":"<p>For variables that need to be serialized to or deserialized from JSON, SOAR provides the <code>JsonableVariable&lt;T&gt;</code> base class. This class implements the <code>IJsonable</code> interface.</p> <ul> <li> <p><code>ToJsonString()</code>: Converts the variable's current <code>Value</code> into a JSON string.</p> </li> <li> <p>Primitive types are wrapped in a <code>JsonableWrapper&lt;T&gt;</code> (e.g., <code>{\"value\": 10}</code>) for robust serialization.</p> </li> <li>Complex types are serialized directly.</li> <li> <p>Uses <code>JsonUtility.ToJson</code>, with pretty print enabled in the Unity Editor.</p> </li> <li> <p><code>FromJsonString(string jsonString)</code>: Parses a JSON string and updates the variable's <code>Value</code>.</p> </li> <li> <p>Handles unwrapping for both primitive and complex types.</p> </li> </ul> <p>custom jsonable variables can be created similarly to regular variables, but by inheriting from <code>JsonableVariable&lt;T&gt;</code>:</p> <pre><code>// File: MyJsonableDataVariable.cs\nusing Soar.Variables;\nusing UnityEngine;\n\n// Assuming MyCustomData is [Serializable]\n[CreateAssetMenu(fileName = \"MyJsonableDataVariable\", menuName = \"SOAR/Jsonable Variables/My Jsonable Data Variable\")]\npublic class MyJsonableDataVariable : JsonableVariable&lt;MyCustomData&gt; { }\n</code></pre> <p>The <code>JsonableExtensions</code> class provides helper methods like <code>SaveToJson</code> and <code>LoadFromJson</code> to easily save/load <code>IJsonable</code> objects to/from files.</p>"},{"location":"features/variable/#editor-integration","title":"Editor Integration","text":"<p><code>Variable&lt;T&gt;</code> and <code>JsonableVariable&lt;T&gt;</code> assets have custom editor inspectors to enhance usability.</p>"},{"location":"features/variable/#variablet-inspector-variableeditor","title":"<code>Variable&lt;T&gt;</code> Inspector (<code>VariableEditor</code>)","text":"<ul> <li>Value Display: The current <code>Value</code> of the variable is displayed. If <code>T</code> is a complex serializable type, its fields are shown.</li> <li>Raise Button: Inherited from <code>GameEventEditor</code>, this button calls <code>Raise(Value)</code> on the variable, useful for testing listeners.</li> <li>Instance Settings:</li> <li><code>Value Event Type</code>: Dropdown to select <code>ValueAssign</code> or <code>ValueChanged</code>.</li> <li><code>Auto Reset Value</code>: Checkbox to enable/disable automatic value reset on exiting play mode.</li> </ul>"},{"location":"features/variable/#jsonablevariablet-inspector-jsonablevariableeditor","title":"<code>JsonableVariable&lt;T&gt;</code> Inspector (<code>JsonableVariableEditor</code>)","text":"<p>Inherits all features from the <code>Variable&lt;T&gt;</code> inspector and adds:</p> <ul> <li>Json File Management: A foldout section for saving and loading the variable's data to/from a JSON file.</li> <li>Json Path Type: Choose between <code>Application.dataPath</code>, <code>Application.persistentDataPath</code>, or a custom path.</li> <li>File Name: Specify the JSON file name. Can default to <code>[VariableName].json</code>.</li> <li>Save to Json Button: Saves the current variable <code>Value</code> to the specified JSON file.</li> <li>Load from Json Button: Loads the <code>Value</code> from the specified JSON file into the variable.</li> </ul>"},{"location":"features/variable/#lifecycle-and-disposal","title":"Lifecycle and Disposal","text":"<p>Being derived from <code>GameEvent&lt;T&gt;</code> and <code>SoarCore</code>, <code>Variable&lt;T&gt;</code> instances:</p> <ul> <li>Are <code>ScriptableObject</code>s and implement <code>IDisposable</code>.</li> <li>Participate in SOAR's initialization and cleanup lifecycle, including handling for editor play mode state changes and domain reloads.</li> <li>The <code>value</code> field of a <code>GameEvent&lt;T&gt;</code> (and thus <code>Variable&lt;T&gt;</code>) is reset to <code>default(T)</code> when the application quits or when domain reload is disabled and play mode is exited, as part of <code>GameEvent&lt;T&gt;.ResetInternal()</code>. The <code>autoResetValue</code> feature in <code>Variable&lt;T&gt;</code> controls whether <code>InitialValue</code> is restored.</li> </ul>"},{"location":"features/variable/#sample-usage","title":"Sample Usage","text":"<p>To test this feature, the relevant sample package can be imported from the Package Manager window.</p> <p></p> <p>The Variable Sample demonstrates how multiple components can react to changes in shared <code>FloatVariable</code> assets that represent a character's health. It includes components for damaging, healing, and upgrading health, all of which interact with the same data assets without being directly aware of each other.</p> <p>For detailed setup and usage instructions, please refer to the <code>README.md</code> file inside the <code>VariableSamples</code> folder after importing.</p>"},{"location":"features/variable/#special-variables","title":"Special Variables","text":""},{"location":"features/variable/#cameravariable","title":"<code>CameraVariable</code>","text":"<p>The <code>CameraVariable</code> has a <code>fallbackType</code> field that allows it to fallback to <code>Camera.main</code> or <code>Camera.current</code> if the value is null. This is useful for ensuring that you always have a valid camera reference.</p>"},{"location":"features/variable/#boolvariable","title":"<code>BoolVariable</code>","text":"<p>The <code>BoolVariable</code> has a <code>ToggleValue()</code> method that sets the value to the opposite of the current value.</p>"},{"location":"features/variable/#value-objects","title":"Value Objects","text":""},{"location":"features/variable/#pairwisevaluet","title":"<code>PairwiseValue&lt;T&gt;</code>","text":"<p>A struct that holds both the old and new value of a variable. This is used in the <code>Subscribe</code> method of a <code>Variable&lt;T&gt;</code>.</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#before-you-begin","title":"Before You Begin","text":"<p>SOAR is a Unity Package that can be installed using one of the methods below. It requires Unity 6.0 or later.</p> <p>While SOAR can function independently, it is designed to be extended with the R3 library. It is highly recommended to install R3 to unlock SOAR's full potential.</p>"},{"location":"getting-started/installation/#openupm","title":"OpenUPM","text":"<p>Import via scoped registry. Update from Package Manager.</p> <p>To add OpenUPM to your project:</p> <ul> <li>open <code>Edit/Project Settings/Package Manager</code></li> <li>add a new Scoped Registry: <pre><code>Name: OpenUPM\nURL:  https://package.openupm.com/\nScope(s):\n  - com.ripandy\n  - com.cysharp.r3 (Recommended)\n</code></pre></li> <li>click Save</li> <li>Open <code>Window/Package Manager</code></li> <li>Select <code>My Registries</code> in top left dropdown</li> <li>Select <code>SOAR</code> and click <code>Install</code></li> <li>Select <code>R3</code> and click <code>Install</code> (Recommended) (see: Note)</li> </ul> <p>Note</p> <p>Installation for R3 requires dependency imports from NuGet. See R3 Unity Installation for further detail.</p>"},{"location":"getting-started/installation/#github-url","title":"GitHub URL","text":"<p>Use the GitHub link for importing. Update using the Package Manager in Unity 2021.2 or later.</p> <p>SOAR can be added directly from GitHub. From Unity 2021.2, Package Manager can be used to update to latest version on the main branch. Otherwise, you need to update manually by removing and then adding back the package.</p> <ul> <li>Open the Package Manager</li> <li>Click the <code>+</code> icon</li> <li>Select the <code>Add from Git URL</code> option</li> <li>Paste the following URL: <code>https://github.com/ripandy/SOAR.git</code></li> <li>Click <code>Add</code></li> </ul> <p>To install specific version, refer to SOAR's release tags. For example: <code>https://github.com/ripandy/SOAR.git#1.0.0</code></p>"},{"location":"getting-started/installation/#clone-to-local-folder","title":"Clone to Local Folder","text":"<p>Clone SOAR to local folder as independent project.</p> <p>SOAR can be cloned to local folder and can be treated as independent project. However, SOAR requires separate Unity Project in order to test its functionality.</p> <ul> <li>Clone SOAR's repository to your local directory.</li> <li>Open containing Unity project to import SOAR.</li> <li>Open <code>Window/Package Manager</code></li> <li>Click the <code>+</code> icon</li> <li>Select the <code>Install package from disk</code> option</li> <li>Select the <code>package.json</code> file from the cloned directory.</li> <li>Click <code>Add</code></li> </ul> <p>The package will be added to manifest.json as a local package (<code>file://</code>). Source codes can then be modified from containing Unity Project. Changes can be managed with git as usual. Package path can be changed to relative path as an alternative to the default absolute path.</p> <pre><code>{\n  \"dependencies\": {\n    \"com.ripandy.soar\": \"file:../path/to/your/local/SOAR\"\n  }\n}\n</code></pre>"},{"location":"getting-started/installation/#clone-to-packages-folder","title":"Clone to Packages Folder","text":"<p>Clone this repository to Unity Project's Packages directory: <code>YourUnityProject/Packages/</code>.</p> <p>Unity will treat the project as a custom package. Source codes can then be modified from containing Unity Project. Changes can be managed with git as usual. SOAR can also be cloned as Submodule of your main git repository.</p>"},{"location":"getting-started/quick-start/","title":"Quick Start","text":""},{"location":"getting-started/quick-start/#creating-soars-scriptableobject-instance","title":"Creating SOAR's ScriptableObject Instance","text":"<p>SOAR's instances can be created from <code>Create</code> context menu or from <code>Assets/Create</code> on the menu bar. Right-click on the Project window and select instance to create.</p>"},{"location":"getting-started/quick-start/#create-a-gameevent-instance","title":"Create a <code>GameEvent</code> Instance","text":"<p>For <code>GameEvent</code> instances, select any of event types from <code>Create/SOAR/Game Events/</code> menu.</p> <p></p>"},{"location":"getting-started/quick-start/#raise-gameevent-from-unityevents","title":"Raise GameEvent from UnityEvents","text":"<p>To raise an event from Unity UI's Button, assign created GameEvent instance to the Button's OnClick event. Every time the button is clicked, the event will be published and all subscribers will be notified.</p> <p></p>"},{"location":"getting-started/quick-start/#usage-of-unityeventbinder","title":"Usage of UnityEventBinder","text":"<p>Unity Event Binder is a custom implemented Unity Component that forwards events raised by a <code>GameEvent</code> into <code>UnityEvent</code>. This is also known as an <code>EventListener</code> in Scriptable Object Architecture terminology.</p> <p>To use them, add the component to any GameObject and assign the GameEvent instance to the <code>GameEventToListen</code> field.</p> <p></p> <p>Upon raising the event, the assigned UnityEvent will be invoked.</p> <p></p>"},{"location":"getting-started/quick-start/#raise-gameevent-from-script","title":"Raise GameEvent from Script","text":"<p>To raise an event from script, use the <code>GameEvent</code> instance's <code>Raise()</code> method. Upon raising the event, all subscribers will be notified.</p> <pre><code>using Soar.Events;\nusing UnityEngine;\n\npublic class GameEventPublisherExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            gameEvent.Raise();\n            Debug.Log($\"Game Event {gameEvent.name} Raised.\");\n        }\n    }\n}\n</code></pre>"},{"location":"getting-started/quick-start/#subscribe-to-gameevent-from-script","title":"Subscribe to GameEvent from Script","text":"<p>To subscribe to an event from script, use the <code>GameEvent</code> instance's <code>Subscribe()</code> method. Upon subscribing, the provided callback will be invoked when the event is raised.</p> <pre><code>using System;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class GameEventSubscriberExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private IDisposable subscription;\n\n    private void Start()\n    {\n        subscription = gameEvent.Subscribe(OnGameEventRaised);\n    }\n\n    private void OnGameEventRaised()\n    {\n        Debug.Log($\"Game Event {gameEvent.name} Received.\");\n    }\n\n    private void OnDestroy()\n    {\n        subscription?.Dispose();\n    }\n}\n</code></pre>"},{"location":"guides/creating-custom-assets/","title":"Creating Custom SOAR Assets","text":"<p>While SOAR comes with a rich set of \"Base\" assets for primitive types (like <code>IntVariable</code>, <code>StringList</code>, etc.), the framework's true potential is unlocked by creating assets tailored to a project's specific data structures. This guide demonstrates the process of creating a complete set of custom SOAR assets for a common use case: managing player data.</p> <p>The process is simple, consistent, and requires very little boilerplate code. Once created, the custom assets are seamlessly integrated into Unity's <code>Assets &gt; Create</code> menu, just like the built-in types.</p>"},{"location":"guides/creating-custom-assets/#the-example-playerdata","title":"The Example: <code>PlayerData</code>","text":"<p>For this guide, a set of SOAR assets will be created to work with the following <code>PlayerData</code> struct. This struct holds all the essential information about a player.</p>"},{"location":"guides/creating-custom-assets/#step-1-define-the-data-structure","title":"Step 1: Define the Data Structure","text":"<p>First, a new C# script for the data must be created. The most important step is to mark the <code>struct</code> or <code>class</code> with the <code>[System.Serializable]</code> attribute. This allows Unity to serialize it and display it in the Inspector.</p> <pre><code>// File: PlayerData.cs\nusing System;\n\n[Serializable]\npublic struct PlayerData\n{\n    public string playerName;\n    public int level;\n    public float health;\n}\n</code></pre> <p>With this <code>PlayerData</code> struct, a <code>Variable</code>, <code>GameEvent</code>, <code>Collection</code>, and <code>Transaction</code> can now be created for it.</p>"},{"location":"guides/creating-custom-assets/#step-2-create-a-custom-variable","title":"Step 2: Create a Custom <code>Variable</code>","text":"<p>A <code>Variable</code> holds the state of a single piece of data. A <code>PlayerDataVariable</code> can be created to store the current player's information.</p> <p>A new script named <code>PlayerDataVariable.cs</code> should be created:</p> <pre><code>// File: PlayerDataVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewPlayerDataVariable\", menuName = MenuHelper.DefaultVariableMenu + \"Player Data\")]\npublic class PlayerDataVariable : Variable&lt;PlayerData&gt; { }\n</code></pre> <p>The <code>[CreateAssetMenu]</code> attribute makes it available in the editor. <code>MenuHelper.DefaultVariableMenu</code> is used to ensure it appears in the same sub-menu as all other variables (<code>SOAR &gt; Variables</code>).</p> <p>Result: A new <code>PlayerDataVariable</code> asset can now be created from <code>Assets &gt; Create &gt; SOAR &gt; Variables &gt; Player Data</code>.</p>"},{"location":"guides/creating-custom-assets/#step-3-create-a-custom-gameevent","title":"Step 3: Create a Custom <code>GameEvent</code>","text":"<p>A <code>GameEvent</code> is used to broadcast that something has happened. A <code>PlayerDataGameEvent</code> could be used to announce when a player has connected or their data has been updated.</p> <p>A new script named <code>PlayerDataGameEvent.cs</code> should be created:</p> <pre><code>// File: PlayerDataGameEvent.cs\nusing Soar;\nusing Soar.Events;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewPlayerDataEvent\", menuName = MenuHelper.DefaultGameEventMenu + \"Player Data\")]\npublic class PlayerDataGameEvent : GameEvent&lt;PlayerData&gt; { }\n</code></pre> <p>Result: This event can now be created from <code>Assets &gt; Create &gt; SOAR &gt; Game Events &gt; Player Data</code>.</p>"},{"location":"guides/creating-custom-assets/#step-4-create-a-custom-collection-list","title":"Step 4: Create a Custom <code>Collection</code> (List)","text":"<p>A <code>Collection</code> manages a list or dictionary of items. A <code>PlayerDataList</code> can be created to store a list of all players in a multiplayer lobby.</p> <p>A new script named <code>PlayerDataList.cs</code> should be created:</p> <pre><code>// File: PlayerDataList.cs\nusing Soar;\nusing Soar.Collections;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewPlayerDataList\", menuName = MenuHelper.DefaultListMenu + \"Player Data\")]\npublic class PlayerDataList : SoarList&lt;PlayerData&gt; { }\n</code></pre> <p>Result: This list can now be created from <code>Assets &gt; Create &gt; SOAR &gt; Lists &gt; Player Data</code>.</p>"},{"location":"guides/creating-custom-assets/#step-5-create-a-custom-transaction","title":"Step 5: Create a Custom <code>Transaction</code>","text":"<p>A <code>Transaction</code> handles a request-response cycle. A <code>FetchPlayerDataTransaction</code> can be created that takes a <code>string</code> (the player's ID) as a request and returns the corresponding <code>PlayerData</code> as a response.</p> <p>A new script named <code>FetchPlayerDataTransaction.cs</code> should be created:</p> <pre><code>// File: FetchPlayerDataTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewFetchPlayerDataTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"Fetch Player Data\")]\npublic class FetchPlayerDataTransaction : Transaction&lt;string, PlayerData&gt; { }\n</code></pre> <p>Result: This transaction can now be created from <code>Assets &gt; Create &gt; SOAR &gt; Transactions &gt; Fetch Player Data</code>.</p>"},{"location":"guides/creating-custom-assets/#step-6-create-a-custom-unityeventbinder","title":"Step 6: Create a Custom <code>UnityEventBinder</code>","text":"<p>To easily wire up the new <code>PlayerDataGameEvent</code> in the editor, a custom <code>UnityEventBinder</code> can be created.</p> <p>A new script named <code>PlayerDataUnityEventBinder.cs</code> should be created:</p> <pre><code>// File: PlayerDataUnityEventBinder.cs\nusing Soar.Events;\n\npublic class PlayerDataUnityEventBinder : UnityEventBinder&lt;PlayerData&gt; { }\n</code></pre> <p>Result: The <code>PlayerDataUnityEventBinder</code> component can now be added to any <code>GameObject</code>. It allows for listening to a <code>PlayerDataGameEvent</code> and invoking a <code>UnityEvent&lt;PlayerData&gt;</code>, passing the event data directly to other components in the Inspector.</p>"},{"location":"guides/creating-custom-assets/#conclusion","title":"Conclusion","text":"<p>By following this simple, consistent pattern, a robust, type-safe, and editor-friendly architecture can be created for any data type in a project. This makes the codebase more modular, easier to test, and empowers the entire team to wire up complex logic directly in the Unity Editor without writing additional code.</p>"},{"location":"guides/performance-best-practices/","title":"Performance Best Practices","text":""},{"location":"guides/performance-best-practices/#a-balanced-perspective","title":"A Balanced Perspective","text":"<p>SOAR is designed for clean, decoupled, and maintainable architecture. For the vast majority of game development scenarios\u2014like UI interactions, inventory management, quest updates, and game state changes\u2014the performance overhead of SOAR is negligible and the architectural benefits are immense.</p> <p>This guide is not meant to discourage the use of SOAR's features. Instead, it aims to provide a transparent look at what is happening under the hood, so the framework can be used intelligently and potential performance-critical situations can be identified. The golden rule of optimization always applies: profile first, then optimize.</p>"},{"location":"guides/performance-best-practices/#the-single-most-important-rule-avoid-high-frequency-events","title":"The Single Most Important Rule: Avoid High-Frequency Events","text":"<p>As a rule of thumb, events or reactive variables should not be used for logic that runs hundreds or thousands of times per frame.</p> <p>The pub/sub pattern has a small, fixed overhead for each <code>Raise()</code> call. While this is insignificant for a button click, it can become noticeable if used improperly.</p> <p>Bad Use Case: Real-time Character Position</p> <pre><code>// In a PlayerController.cs, inside Update()\n// ANTI-PATTERN: This should be avoided!\nvoid Update()\n{\n    // This raises an event and notifies all subscribers EVERY frame.\n    playerPositionVariable.Value = transform.position; \n}\n</code></pre> <p>For high-frequency data like this, it is better for other components to pull the data when needed by holding a direct reference to the <code>PlayerController</code> or a relevant data provider. SOAR should be used for state changes, not continuous state updates.</p>"},{"location":"guides/performance-best-practices/#feature-by-feature-performance-breakdown","title":"Feature-by-Feature Performance Breakdown","text":""},{"location":"guides/performance-best-practices/#1-gameevent-and-variable","title":"1. <code>GameEvent</code> and <code>Variable</code>","text":"<ul> <li>What Happens: When <code>Raise()</code> is called, the <code>GameEvent</code> iterates through its internal list of subscribers and invokes each one. For a <code>Variable</code>, setting the <code>.Value</code> property does the same thing.</li> <li>Performance Cost:<ul> <li>The cost is proportional to the number of active subscribers. More listeners mean more method calls.</li> <li>There is a minor overhead compared to a direct C# method call, but it is extremely fast for most use cases.</li> </ul> </li> <li>Best Practices:<ul> <li><code>ValueChanged</code> vs. <code>ValueAssign</code>: When a <code>Variable</code> is created, the <code>valueEventType</code> defaults to <code>ValueChanged</code>. This is generally the desired behavior. An equality check (<code>.Equals()</code>) is performed before the event is raised, preventing notifications if the value has not actually changed. It should be noted that for complex <code>struct</code> types, a custom <code>.Equals()</code> implementation might be needed for this to be efficient. Using <code>ValueAssign</code> is slightly faster as it skips the check, but it can lead to unnecessary logic being executed by subscribers.</li> <li>Unsubscribing: Subscriptions should always be cleaned up. While SOAR's <code>CompositeDisposable</code> and R3's <code>AddTo(this)</code> make this easy, forgetting to do so can leave \"zombie\" listeners that continue to be invoked, needlessly consuming resources.</li> </ul> </li> </ul>"},{"location":"guides/performance-best-practices/#2-collection-lists-and-dictionaries","title":"2. <code>Collection</code> (Lists and Dictionaries)","text":"<ul> <li>What Happens: Modifying a <code>SoarList</code> or <code>SoarDictionary</code> can trigger multiple events. For example, <code>Add()</code> triggers <code>OnAdd</code>, <code>OnValueChanged</code>, and <code>OnCountChanged</code>.</li> <li>Performance Cost: The cost is higher than modifying a standard C# <code>List&lt;T&gt;</code> or <code>Dictionary&lt;&gt;</code>.</li> <li>Best Practices:<ul> <li>Batch Operations: If many items need to be added or removed at once, doing so in a loop of individual <code>Add()</code> calls should be avoided. While SOAR does not have a true \"batch\" mode that raises a single event, grouping the logic makes the code cleaner and easier to profile.</li> <li>Choosing Wisely: If a list of data does not need to be reactive and is only used by a single system, a standard <code>List&lt;T&gt;</code> inside a <code>MonoBehaviour</code> is more performant. A <code>SoarList</code> should be used when multiple, decoupled systems need to be explicitly notified that the collection has changed.</li> </ul> </li> </ul>"},{"location":"guides/performance-best-practices/#3-jsonablevariable-and-autoresetvalue","title":"3. <code>JsonableVariable</code> and <code>autoResetValue</code>","text":"<p>This is the area with the most significant and non-obvious performance cost.</p> <ul> <li>What Happens: To support the <code>autoResetValue</code> feature for complex class types, <code>Variable&lt;T&gt;</code> performs a \"deep copy\" by serializing the initial value to a JSON string and storing it. When <code>ResetValue()</code> is called, it deserializes this string back into an object.</li> <li>Performance Cost:<ul> <li>GC Allocation: <code>JsonUtility.ToJson()</code> allocates a string on the managed heap. This creates garbage that the Garbage Collector (GC) must later clean up, which can cause frame rate stutters.</li> <li>CPU Overhead: Serialization and deserialization are computationally more expensive than a simple value assignment.</li> <li>This cost is paid at initialization time (e.g., when the game starts or the editor recompiles) for every <code>Variable</code> that uses a class type.</li> </ul> </li> <li>Best Practices:<ul> <li>STRONGLY PREFER STRUCTS AND PRIMITIVES: For any <code>Variable</code> that needs <code>autoResetValue</code>, primitive types (<code>int</code>, <code>float</code>, <code>bool</code>) or <code>struct</code>s should be used whenever possible. These are copied by value, avoiding the JSON serialization path entirely.</li> <li>Disable <code>autoResetValue</code> for Classes: If a class type must be used in a <code>Variable</code> (e.g., <code>MyDataClassVariable</code>), <code>autoResetValue</code> should be disabled if the reset behavior is not needed, or the reset should be handled manually.</li> <li>Be Aware of Startup Cost: If hundreds of these variables are used, a small hitch may be noticeable during application startup. This is why.</li> </ul> </li> </ul>"},{"location":"guides/performance-best-practices/#4-r3-integration","title":"4. R3 Integration","text":"<ul> <li>What Happens: Using R3's LINQ-style operators (<code>Where</code>, <code>Select</code>, <code>CombineLatest</code>, etc.) creates a chain of small observer objects.</li> <li>Performance Cost: R3 is highly optimized, but every operator in a chain adds a small layer of allocation and indirection. A very long, complex chain will have more overhead than a simple <code>Subscribe()</code>.</li> <li>Best Practices:<ul> <li>Use with Confidence: This overhead is tiny and the expressive power of R3 is immense. This is not a reason to avoid using it.</li> <li>Profile, Don't Guess: If an extremely complex reactive stream is suspected of being a bottleneck, the Unity Profiler should be used to inspect it. In 99% of cases, it will not be the source of performance problems.</li> </ul> </li> </ul>"},{"location":"guides/performance-best-practices/#summary-key-takeaways","title":"Summary &amp; Key Takeaways","text":"<ul> <li>\u2705 SOAR should be used for UI, game state, and logic that responds to discrete events.</li> <li>\u274c SOAR should not be used for high-frequency updates that happen every frame.</li> <li>\ud83e\udde0 The <code>autoResetValue</code> feature with class types should be used with care; it uses JSON serialization and creates garbage. Structs are preferred.</li> <li>\u2696\ufe0f Subscribing to a <code>Collection</code> is more expensive than modifying a standard C# <code>List</code>. It should be used when reactivity is needed.</li> <li>\ud83d\uddd1\ufe0f Subscriptions should always be cleaned up to prevent memory leaks and unnecessary work.</li> </ul>"},{"location":"guides/soar-lifecycle/","title":"SOAR's Lifecycle (SoarCore)","text":"<p>Every asset in SOAR, from <code>GameEvent</code> to <code>Variable</code> to <code>Collection</code>, inherits from a single, crucial base class: <code>SoarCore</code>. This class is the heart of the framework, providing a managed lifecycle that ensures all SOAR assets behave predictably and reliably within the Unity editor and in builds. An understanding of this lifecycle is key to mastering SOAR.</p> <p>The primary purpose of <code>SoarCore</code> is to bridge the gap between <code>ScriptableObject</code> assets, which live outside of any scene, and the runtime events of an application, like entering and exiting Play Mode.</p>"},{"location":"guides/soar-lifecycle/#the-core-lifecycle-methods","title":"The Core Lifecycle Methods","text":"<p>The lifecycle is managed by <code>SoarCore</code> through three main methods: <code>OnEnable</code>, <code>Initialize</code>, and <code>OnQuit</code>.</p> <ol> <li> <p><code>OnEnable()</code></p> <ul> <li>When it's called: This is a standard Unity message called when the <code>ScriptableObject</code> is loaded. This happens on application start, after a script re-compilation, or when the asset is first inspected.</li> <li>What it does: The primary job of <code>SoarCore</code> in <code>OnEnable</code> is to set up its internal state and subscribe to critical editor and application events. <code>Initialize()</code> is called immediately after.</li> </ul> </li> <li> <p><code>Initialize()</code></p> <ul> <li>When it's called: Called automatically by <code>OnEnable</code>.</li> <li>What it does: This is where the \"setup\" logic for each SOAR asset happens. For example, a <code>Variable</code> will store its current value as its <code>InitialValue</code> during this step. A <code>Transaction</code> will register its internal response handler. A callback is also registered to the <code>Application.exitCancellationToken</code>, ensuring that the <code>OnQuit</code> method is called when the application closes.</li> </ul> </li> <li> <p><code>OnQuit()</code></p> <ul> <li>When it's called: Called automatically when the application is closing (in a build) or when Play Mode is exited in the editor.</li> <li>What it does: This is the \"cleanup\" phase. It is responsible for resetting the state of SOAR assets to prevent data from one Play Mode session from \"leaking\" into the next. For example, a <code>Variable</code> with <code>autoResetValue</code> enabled will revert to its <code>InitialValue</code>. All active subscriptions within a <code>GameEvent</code> are disposed of to prevent memory leaks.</li> </ul> </li> </ol>"},{"location":"guides/soar-lifecycle/#the-disable-domain-reload-edge-case","title":"The \"Disable Domain Reload\" Edge Case","text":"<p>Unity's \"Enter Play Mode Options\" allow for Domain Reloading to be disabled for faster iteration. SOAR is built to handle this scenario correctly, but its behavior is slightly different.</p> <ul> <li>With Domain Reload (Default): When Play Mode is exited, all script states are wiped and reset by Unity. Upon re-entering Play Mode, <code>OnEnable</code> and <code>Initialize</code> are called on fresh objects.</li> <li>Without Domain Reload: Script states are not wiped. Objects persist between Play Mode sessions. This requires <code>SoarCore</code> to manually manage the \"setup\" and \"cleanup\" process.</li> </ul> <p>Here is the flow when Domain Reload is disabled:</p> <ol> <li>Exiting Edit Mode (Entering Play Mode): <code>SoarCore</code> calls <code>Initialize()</code> to ensure all assets are in a fresh state for the new session.</li> <li>Exiting Play Mode (Re-entering Edit Mode): <code>SoarCore</code> calls <code>OnQuit()</code> to clean up, reset variables, and dispose of subscriptions, just as it would if the application were closing.</li> </ol> <p>This careful management ensures that SOAR behaves consistently and reliably, regardless of the project's settings.</p>"},{"location":"guides/soar-lifecycle/#why-this-matters","title":"Why This Matters","text":"<p>An understanding of this lifecycle helps in diagnosing issues and building more robust systems.</p> <ul> <li>Initialization Order: It can be assumed that a <code>Variable</code>'s <code>InitialValue</code> is set at the very start of the game, before any <code>MonoBehaviour</code> <code>Start()</code> methods are called.</li> <li>Clean State: It is assured that when the game is stopped and started in the editor, the SOAR assets will be in a clean, predictable state, preventing frustrating bugs caused by stale data.</li> <li>Resource Management: It can be trusted that all event subscriptions created by SOAR are automatically disposed of, preventing memory leaks.</li> </ul>"},{"location":"guides/testing-with-soar/","title":"Testing with SOAR","text":"<p>One of the primary advantages of a Scriptable Object Architecture is that it makes code significantly easier to test. By decoupling components, logic can be tested in isolation without needing to build complex scenes or have other systems present.</p> <p>This guide demonstrates how to write unit tests for components that use SOAR assets using Unity's built-in Test Framework.</p>"},{"location":"guides/testing-with-soar/#the-component-under-test","title":"The Component Under Test","text":"<p>Consider a simple <code>Player</code> component that listens to a <code>GameEvent</code> to take damage. The goal is to test this component's logic without needing a full game environment.</p> <p>Here is the component that will be tested:</p> <pre><code>// File: Player.cs\nusing Soar.Events;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class Player : MonoBehaviour\n{\n    [SerializeField] private FloatVariable playerHealth;\n    [SerializeField] private FloatGameEvent onPlayerDamaged;\n\n    private void Start()\n    {\n        // Ensure health is full on start\n        playerHealth.Value = 100f;\n\n        // Subscribe to the damage event\n        onPlayerDamaged.Subscribe(TakeDamage);\n    }\n\n    private void TakeDamage(float amount)\n    {\n        playerHealth.Value -= amount;\n    }\n}\n</code></pre>"},{"location":"guides/testing-with-soar/#writing-the-unit-test","title":"Writing the Unit Test","text":"<p>To test the <code>Player</code> component, a test script can be created inside an \"Editor\" folder (or an assembly configured for testing).</p> <p>The key steps in the test are: 1.  Arrange: Create instances of the required SOAR assets (<code>FloatVariable</code>, <code>FloatGameEvent</code>) and the <code>Player</code> component itself. 2.  Act: Simulate the event that should be tested (raising the <code>onPlayerDamaged</code> event). 3.  Assert: Verify that the component behaved as expected (the <code>playerHealth</code> <code>Variable</code> was reduced).</p> <p>Here is the corresponding test script:</p> <pre><code>// File: PlayerTests.cs\nusing NUnit.Framework;\nusing Soar.Events;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class PlayerTests\n{\n    [Test]\n    public void Player_TakesDamage_When_OnPlayerDamagedEventIsRaised()\n    {\n        // 1. Arrange\n        // Create a GameObject to host the component\n        var playerGameObject = new GameObject();\n        var player = playerGameObject.AddComponent&lt;Player&gt;();\n\n        // Create instances of the required SOAR assets in memory\n        var healthVariable = ScriptableObject.CreateInstance&lt;FloatVariable&gt;();\n        var damageEvent = ScriptableObject.CreateInstance&lt;FloatGameEvent&gt;();\n\n        // Use reflection or a public setter to assign these assets to the Player component\n        // (This avoids needing to serialize them into a prefab for the test)\n        SetPrivateField(player, \"playerHealth\", healthVariable);\n        SetPrivateField(player, \"onPlayerDamaged\", damageEvent);\n\n        // Manually call Start() to trigger subscriptions and set initial health\n        player.SendMessage(\"Start\");\n\n        // 2. Act\n        // Simulate the damage event being raised\n        damageEvent.Raise(25f);\n\n        // 3. Assert\n        // Check if the health variable was correctly updated\n        Assert.AreEqual(75f, healthVariable.Value);\n\n        // Cleanup the GameObject\n        Object.DestroyImmediate(playerGameObject);\n    }\n\n    // Helper method to set private fields for testing purposes\n    private void SetPrivateField(object obj, string fieldName, object value)\n    {\n        var field = obj.GetType().GetField(fieldName, System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);\n        field?.SetValue(obj, value);\n    }\n}\n</code></pre>"},{"location":"guides/testing-with-soar/#key-concepts-in-testing","title":"Key Concepts in Testing","text":"<ul> <li>In-Memory Assets: <code>ScriptableObject.CreateInstance&lt;T&gt;()</code> is used to create temporary, in-memory versions of the SOAR assets needed for the test. These are not saved to the project and are garbage collected after the test runs.</li> <li>Manual Initialization: Because the <code>Player</code> component is not in a scene, its <code>Start()</code> method must be called manually via <code>SendMessage(\"Start\")</code> to ensure its logic (like setting initial health and subscribing to events) is executed.</li> <li>Simulating Events: The test directly controls the SOAR assets. By calling <code>damageEvent.Raise(25f)</code>, the test plays the role of the \"publisher,\" triggering the logic in the <code>Player</code> component.</li> <li>Decoupling in Action: Notice that the test does not need to know how the player takes damage, only that listening to the <code>onPlayerDamaged</code> event should result in a change to the <code>playerHealth</code> variable. This demonstrates the power of testing decoupled components.</li> </ul> <p>By following this pattern, any component that relies on SOAR for its inputs and outputs can be tested thoroughly and efficiently, leading to a more stable and maintainable codebase.</p>"},{"location":"guides/utilities-and-editor-tooling/","title":"Utilities &amp; Editor Tooling","text":"<p>Beyond its core architectural features, SOAR includes a collection of utilities and custom editor enhancements designed to improve workflow, reduce boilerplate code, and make debugging easier.</p>"},{"location":"guides/utilities-and-editor-tooling/#editor-tooling","title":"Editor Tooling","text":"<p>SOAR's editor scripts provide significant quality-of-life improvements directly within the Unity Inspector.</p>"},{"location":"guides/utilities-and-editor-tooling/#in-inspector-action-buttons","title":"In-Inspector Action Buttons","text":"<p>Most SOAR assets have custom inspectors that feature action buttons for debugging and testing.</p> <ul> <li><code>GameEvent</code>: A \"Raise\" button is provided to trigger the event directly from the Inspector. This is invaluable for testing <code>UnityEventBinder</code> setups or other listeners without needing to run the game or write test code.</li> <li><code>Command</code>: An \"Execute\" button allows the command's logic to be run at any time.</li> <li><code>Transaction</code>: A \"Request\" button triggers the transaction. If no response handler is registered, a temporary, empty handler is created to ensure the request can complete without errors. For typed transactions, the request can be sent with the value currently entered in the Inspector.</li> </ul> <p>These buttons allow for rapid testing of isolated logic in both Edit Mode and Play Mode.</p>"},{"location":"guides/utilities-and-editor-tooling/#json-file-management","title":"Json File Management","text":"<p>Any variable that inherits from <code>JsonableVariable&lt;T&gt;</code> gains a \"Json File Management\" section in its Inspector. This tooling provides a no-code way to manage data persistence.</p> <ul> <li>Save to Json: The variable's current value is serialized and saved to a specified file path.</li> <li>Load from Json: The variable's value is overwritten with the data from the specified JSON file.</li> <li>Path and Filename: The save location (<code>Application.dataPath</code>, <code>persistentDataPath</code>, or a custom path) and filename can be configured directly in the Inspector.</li> </ul>"},{"location":"guides/utilities-and-editor-tooling/#extended-scriptableobject-drawer","title":"Extended ScriptableObject Drawer","text":"<p>To reduce the need to click between assets, any field that references a SOAR asset (e.g., a <code>GameEvent</code> field on a <code>MonoBehaviour</code>) will automatically draw the properties of that asset directly inline.</p> <p></p> <p>This feature makes it easy to see and modify the values of variables or the contents of collections without ever leaving the component that uses them.</p> <p>Additionally, if an asset field is empty (<code>null</code>), a \"Create\" button will be displayed, allowing for the creation and saving of a new asset instance on the fly.</p>"},{"location":"guides/utilities-and-editor-tooling/#runtime-utilities","title":"Runtime Utilities","text":"<p>These helper classes are available to be used in runtime scripts.</p>"},{"location":"guides/utilities-and-editor-tooling/#menuhelper","title":"<code>MenuHelper</code>","text":"<p>This static class contains the default menu paths used by SOAR's built-in assets (e.g., <code>MenuHelper.DefaultVariableMenu</code> resolves to <code>\"SOAR/Variables/\"</code>).</p> <p>When creating custom assets, this class should be used in the <code>[CreateAssetMenu]</code> attribute to ensure custom assets appear in the same organized sub-menus as the default ones.</p> <pre><code>[CreateAssetMenu(fileName = \"NewPlayerDataVariable\", \n                 menuName = MenuHelper.DefaultVariableMenu + \"Player Data\")]\npublic class PlayerDataVariable : Variable&lt;PlayerData&gt; { }\n</code></pre>"},{"location":"guides/utilities-and-editor-tooling/#jsonableextensions","title":"<code>JsonableExtensions</code>","text":"<p>For <code>IJsonable</code> objects (like <code>JsonableVariable&lt;T&gt;</code>), this class provides the programmatic counterparts to the Inspector tooling.</p> <ul> <li><code>SaveToJson(path, filename)</code>: Saves the object's data to a file.</li> <li><code>LoadFromJson(path, filename)</code>: Loads the object's data from a file.</li> <li><code>IsJsonFileExist(path, filename)</code>: Checks if a saved file already exists.</li> </ul> <p>These extension methods are useful for creating dedicated <code>SaveManager</code> or <code>LoadManager</code> systems.</p>"},{"location":"guides/utilities-and-editor-tooling/#compositedisposable","title":"<code>CompositeDisposable</code>","text":"<p>This utility class manages a collection of <code>IDisposable</code> objects. It is used internally by SOAR's non-R3 implementation to track all active subscriptions. When the <code>CompositeDisposable</code> is disposed, all the subscriptions it holds are disposed of as well. It can be useful in user scripts for managing multiple subscriptions in a single <code>MonoBehaviour</code>.</p>"},{"location":"guides/utilities-and-editor-tooling/#dictionaryextensions","title":"<code>DictionaryExtensions</code>","text":"<p>This class provides extension methods for dictionaries. The <code>TryChangeKey()</code> method allows you to change the key of a dictionary entry.</p>"},{"location":"ja/","title":"SOAR","text":"<p>Scriptable Object Architecture Reactive-extensible (SOAR) \u306f\u3001\u30af\u30ea\u30fc\u30f3\u3067\u758e\u7d50\u5408\u306a\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u578b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306b ScriptableObject \u3092\u6d3b\u7528\u3059\u308b\u3001Unity \u5411\u3051\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u5f0f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\u3053\u308c\u306f\u3001Ryan Hipple \u6c0f\u306e Unite Austin 2017 \u3067\u306e\u8b1b\u6f14\u306b\u57fa\u3065\u3044\u3066\u3044\u307e\u3059\u3002</p> <p>SOAR \u306f\u3001<code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u304c\u30c1\u30e3\u30cd\u30eb\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3001\u51fa\u7248/\u8cfc\u8aad\u30d1\u30bf\u30fc\u30f3\u3092\u63a8\u5968\u3057\u307e\u3059\u3002\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u3068\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306f\u3001\u3053\u308c\u3089\u306e\u5171\u6709\u30a2\u30bb\u30c3\u30c8\u3092\u4ecb\u3057\u3066\u76f8\u4e92\u4f5c\u7528\u3057\u3001\u76f4\u63a5\u7684\u306a\u4f9d\u5b58\u95a2\u4fc2\u3092\u6392\u9664\u3057\u307e\u3059\u3002</p> <p>SOAR \u306f\u72ec\u7acb\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001C# \u5411\u3051\u306e\u30e2\u30c0\u30f3\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b R3 \u3067\u62e1\u5f35\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002SOAR \u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u6700\u5927\u9650\u306b\u5f15\u304d\u51fa\u3059\u305f\u3081\u306b\u3001R3 \u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002</p>"},{"location":"ja/#_1","title":"\u4e3b\u8981\u30ea\u30f3\u30af","text":"<ul> <li>SOAR - GitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3002</li> <li>R3 - Cysharp, Inc. \u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u305f\u3001dotnet/reactive \u3068 UniRx \u306e\u65b0\u3057\u3044\u672a\u6765\u3002</li> <li>Kassets - SOAR \u306e\u524d\u8eab\u3067\u3042\u308a\u3001Kadinche Corp. \u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u3002UniRx \u3068 UniTask \u3067\u62e1\u5f35\u53ef\u80fd\u306a Scriptable Object Architecture \u306e\u5b9f\u88c5\u3002</li> <li>Unite 2017 \u3067 Ryan Hipple \u6c0f\u306b\u3088\u308b\u8b1b\u6f14 - \u5143\u3005\u306e\u30a4\u30f3\u30b9\u30d4\u30ec\u30fc\u30b7\u30e7\u30f3\u3002</li> </ul>"},{"location":"ja/troubleshooting/","title":"\u30c8\u30e9\u30d6\u30eb\u30b7\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3068 FAQ","text":"<p>\u3053\u306e\u30da\u30fc\u30b8\u306b\u306f\u3001\u4e00\u822c\u7684\u306a\u554f\u984c\u306e\u89e3\u6c7a\u7b56\u3068\u3088\u304f\u3042\u308b\u8cea\u554f\u3078\u306e\u56de\u7b54\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/troubleshooting/#_1","title":"\u4e00\u822c\u7684\u306a\u554f\u984c","text":""},{"location":"ja/troubleshooting/#unityeventbinder","title":"<code>UnityEventBinder</code> \u304c\u8d77\u52d5\u3057\u306a\u3044","text":"<ol> <li><code>GameEvent</code> \u306e\u53c2\u7167\u3092\u78ba\u8a8d\u3059\u308b\uff1a <code>UnityEventBinder</code> \u306e\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306e <code>Game Event To Listen</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u6b63\u3057\u3044 <code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u3092\u30c9\u30e9\u30c3\u30b0\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</li> <li>\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u3092\u78ba\u8a8d\u3059\u308b\uff1a \u5225\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u307e\u3063\u305f\u304f\u540c\u3058 <code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u3067 <code>Raise()</code> \u3092\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u304b\uff1f \u3053\u308c\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30a6\u30a3\u30f3\u30c9\u30a6\u3067 <code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u3092\u9078\u629e\u3057\u3001\u518d\u751f\u30e2\u30fc\u30c9\u4e2d\u306b\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306e\u300cRaise\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\u30d0\u30a4\u30f3\u30c0\u30fc\u304c\u8d77\u52d5\u3059\u308b\u5834\u5408\u3001\u554f\u984c\u306f\u30d1\u30d6\u30ea\u30c3\u30b7\u30f3\u30b0\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3042\u308a\u307e\u3059\u3002\u8d77\u52d5\u3057\u306a\u3044\u5834\u5408\u3001\u554f\u984c\u306f\u30d0\u30a4\u30f3\u30c0\u30fc\u306e\u8a2d\u5b9a\u306b\u3042\u308a\u307e\u3059\u3002</li> <li><code>[ExecuteInEditMode]</code> \u3092\u78ba\u8a8d\u3059\u308b\uff1a \u7de8\u96c6\u30e2\u30fc\u30c9\u3067\u30d0\u30a4\u30f3\u30c0\u30fc\u3092\u52d5\u4f5c\u3055\u305b\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u30ea\u30b9\u30cb\u30f3\u30b0\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b <code>[ExecuteAlways]</code> \u307e\u305f\u306f <code>[ExecuteInEditMode]</code> \u5c5e\u6027\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</li> </ol>"},{"location":"ja/troubleshooting/#_2","title":"\u3088\u304f\u3042\u308b\u8cea\u554f","text":""},{"location":"ja/troubleshooting/#soar","title":"SOAR \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3078\u306e\u5f71\u97ff\u306f\u4f55\u3067\u3059\u304b\uff1f","text":"<p>\u307b\u3068\u3093\u3069\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3067\u306f\u3001SOAR \u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3054\u304f\u308f\u305a\u304b\u3067\u3059\u3002<code>GameEvent</code> \u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u306f\u3001\u672c\u8cea\u7684\u306b\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306e\u30ea\u30b9\u30c8\u3092\u30eb\u30fc\u30d7\u51e6\u7406\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306f\u76f4\u63a5\u306e\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3088\u308a\u3082\u308f\u305a\u304b\u306b\u9045\u3044\u3067\u3059\u304c\u3001\u758e\u7d50\u5408\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4e0a\u306e\u5229\u70b9\u306f\u3001\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3001\u76f4\u63a5\u53c2\u7167\u306e\u30de\u30a4\u30af\u30ed\u6700\u9069\u5316\u3092\u4e0a\u56de\u308a\u307e\u3059\u3002</p> <p>\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u6570\u767e\u56de\u307e\u305f\u306f\u6570\u5343\u56de\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u3066\u3044\u308b\u5834\u5408\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u8003\u616e\u4e8b\u9805\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u9ad8\u983b\u5ea6\u306e\u30b7\u30ca\u30ea\u30aa\u3067\u306f\u3001\u305d\u306e\u7279\u5b9a\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u3088\u308a\u76f4\u63a5\u7684\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u691c\u8a0e\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u3089\u306e\u30b1\u30fc\u30b9\u306f\u307e\u308c\u3067\u3059\u3002</p>"},{"location":"ja/troubleshooting/#r3-reactive-extensions-soar","title":"R3 (Reactive Extensions) \u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3057\u3067 SOAR \u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u304b\uff1f","text":"<p>\u306f\u3044\u3002SOAR \u306f\u72ec\u7acb\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30b3\u30a2\u6a5f\u80fd\uff08<code>GameEvent</code>\u3001<code>Variable</code>\u3001<code>Collection</code> \u306a\u3069\uff09\u306b\u306f\u3001\u6a19\u6e96\u306e C# \u30a4\u30d9\u30f3\u30c8\uff08<code>Action</code>\uff09\u3092\u4f7f\u7528\u3059\u308b\u57fa\u672c\u5b9f\u88c5\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u305f\u3060\u3057\u3001R3 \u3068\u306e\u9023\u643a\u306f\u3001\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3084\u8907\u96d1\u306a\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\uff08\u30a4\u30d9\u30f3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3001\u30de\u30fc\u30b8\u3001\u30b9\u30ed\u30c3\u30c8\u30ea\u30f3\u30b0\u306a\u3069\uff09\u306b\u5927\u304d\u306a\u5229\u70b9\u3092\u3082\u305f\u3089\u3057\u307e\u3059\u3002\u5358\u7d14\u306a\u30a4\u30d9\u30f3\u30c8\u3092\u8d85\u3048\u308b\u3082\u306e\u306b\u306f\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002</p>"},{"location":"ja/troubleshooting/#gameevent","title":"<code>GameEvent</code> \u3067\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3059\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u304b\uff1f","text":"<p><code>GameEvent&lt;T&gt;</code> \u306f1\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff08<code>T</code>\uff09\u3057\u304b\u904b\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002 \u8907\u6570\u306e\u5024\u3092\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u30ab\u30b9\u30bf\u30e0\u306e <code>struct</code> \u307e\u305f\u306f <code>class</code> \u306b\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u306e\u30ab\u30d7\u30bb\u30eb\u5316\u306e\u6982\u5ff5\u306f\u3001\u30c7\u30fc\u30bf\u8ee2\u9001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 (DTO) \u3068\u3057\u3066\u3082\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u4f8b\uff1a <pre><code>// \u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\u3092\u5b9a\u7fa9\u3059\u308b\n[System.Serializable]\npublic struct PlayerDamagedData\n{\n    public float DamageAmount;\n    public DamageType Type;\n    public GameObject Instigator;\n}\n\n// \u305d\u306e\u69cb\u9020\u4f53\u306e GameEvent \u3092\u4f5c\u6210\u3059\u308b\n[CreateAssetMenu(menuName = \"SOAR/Game Events/Player Damaged Event\")]\npublic class PlayerDamagedEvent : GameEvent&lt;PlayerDamagedData&gt; { }\n</code></pre></p>"},{"location":"ja/concepts/architecture/","title":"\u8a2d\u8a08\u539f\u5247","text":"<p>SOAR (Scriptable Object Architecture Reactive-extensible) \u306f\u3001\u5358\u306a\u308b\u30c4\u30fc\u30eb\u306e\u96c6\u307e\u308a\u3067\u306f\u306a\u304f\u3001Unity \u3067\u30af\u30ea\u30fc\u30f3\u3067\u758e\u7d50\u5408\u3001\u304b\u3064\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u54f2\u5b66\u3067\u3059\u3002SOAR \u306e\u80cc\u5f8c\u306b\u3042\u308b\u4e2d\u5fc3\u7684\u306a\u8a2d\u8a08\u539f\u5247\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u4fdd\u5b88\u3057\u3084\u3059\u304f\u5805\u7262\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/concepts/architecture/#_2","title":"\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u30d1\u30bf\u30fc\u30f3","text":"<p>SOAR \u306b\u304a\u3051\u308b\u6700\u3082\u57fa\u672c\u7684\u306a\u539f\u5247\u306f\u3001\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc (Pub/Sub) \u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30d1\u30bf\u30fc\u30f3\u3067\u3059\uff1a</p> <ul> <li>\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\uff08\u307e\u305f\u306f\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30bf\u30fc\uff09\u306f\u3001\u3069\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3059\u308b\u304b\u3092\u76f4\u63a5\u77e5\u308b\u3053\u3068\u306a\u304f\u3001\u305d\u308c\u3089\u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li>\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\uff08\u307e\u305f\u306f\u30ea\u30b9\u30ca\u30fc\uff09\u306f\u3001\u3069\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\u3059\u308b\u304b\u3092\u77e5\u308b\u3053\u3068\u306a\u304f\u3001\u7279\u5b9a\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u95a2\u5fc3\u3092\u767b\u9332\u3057\u307e\u3059\u3002</li> <li>\u30e1\u30c3\u30bb\u30fc\u30b8\u30d6\u30ed\u30fc\u30ab\u30fc\u307e\u305f\u306f\u30a4\u30d9\u30f3\u30c8\u30c1\u30e3\u30cd\u30eb\u304c\u4e21\u8005\u306e\u9593\u3092\u4ef2\u4ecb\u3057\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u758e\u7d50\u5408\u306b\u3057\u307e\u3059\u3002</li> </ul> <p>SOAR \u306e\u5b9f\u88c5\u3067\u306f\uff1a</p> <ul> <li><code>GameEvent</code> \u304a\u3088\u3073 <code>Variable</code> \u30a2\u30bb\u30c3\u30c8\u304c\u30a4\u30d9\u30f3\u30c8\u30c1\u30e3\u30cd\u30eb\u307e\u305f\u306f\u30c8\u30d4\u30c3\u30af\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\u3002</li> <li>\u4efb\u610f\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3001<code>GameEvent</code> \u306e <code>Raise()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u304b\u3001<code>Variable</code> \u306e <code>Value</code> \u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u3068\u3057\u3066\u6a5f\u80fd\u3067\u304d\u307e\u3059\u3002</li> <li>\u4efb\u610f\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u3001\u30a4\u30d9\u30f3\u30c8\u306e <code>Subscribe()</code> \u3092\u547c\u3073\u51fa\u3059\u304b\u3001<code>UnityEventBinder</code> \u3092\u4f7f\u7528\u3057\u3066\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u3053\u3068\u3067\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u3068\u3057\u3066\u6a5f\u80fd\u3067\u304d\u307e\u3059\u3002</li> </ul> <p>\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u758e\u7d50\u5408\u306e\u9375\u3067\u3059\u3002\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b UI \u30dc\u30bf\u30f3\u306f\u3001\u305d\u306e\u30af\u30ea\u30c3\u30af\u306b\u53cd\u5fdc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u30aa\u30fc\u30c7\u30a3\u30aa\u30b7\u30b9\u30c6\u30e0\u3001\u5206\u6790\u30b7\u30b9\u30c6\u30e0\u3001\u307e\u305f\u306f\u30b2\u30fc\u30e0\u30ed\u30b8\u30c3\u30af\u3078\u306e\u53c2\u7167\u3092\u5fc5\u8981\u3068\u3057\u307e\u305b\u3093\u3002\u305d\u308c\u3089\u306f\u3059\u3079\u3066\u3001\u540c\u3058\u5171\u6709\u30a4\u30d9\u30f3\u30c8\u30a2\u30bb\u30c3\u30c8\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u3060\u3051\u3067\u3059\u3002</p>"},{"location":"ja/concepts/architecture/#_3","title":"\u4f9d\u5b58\u95a2\u4fc2\u9006\u8ee2","text":"<p><code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u3092\u901a\u4fe1\u30c1\u30e3\u30cd\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001SOAR \u306f\u4f9d\u5b58\u95a2\u4fc2\u9006\u8ee2\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\u9ad8\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u4f4e\u30ec\u30d9\u30eb\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3078\u306e\u76f4\u63a5\u53c2\u7167\u3092\u6301\u3064\uff08\u4f8b\uff1a<code>GameManager</code> \u304c\u7279\u5b9a\u306e <code>PlayerHealth</code> \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u77e5\u3063\u3066\u3044\u308b\uff09\u4ee3\u308f\u308a\u306b\u3001\u4e21\u65b9\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u540c\u3058\u5171\u6709 <code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002</p> <p>\u5f93\u6765\uff08\u5bc6\u7d50\u5408\uff09\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\uff1a <pre><code>GameManager ---&gt; PlayerHealth\n</code></pre></p> <p>SOAR\uff08\u758e\u7d50\u5408\uff09\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\uff1a <pre><code>GameManager --+\n              |\n              v\n          PlayerHealthVariable\n              ^\n              |\nPlayerHealth --+\n</code></pre></p> <p>\u3053\u306e\u9006\u8ee2\u306f\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5206\u96e2\u3057\u3066\u958b\u767a\u3001\u30c6\u30b9\u30c8\u3001\u304a\u3088\u3073\u5909\u66f4\u3067\u304d\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002<code>GameManager</code> \u3092\u307e\u3063\u305f\u304f\u5fc5\u8981\u3068\u305b\u305a\u306b\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067 <code>PlayerHealthVariable</code> \u3092\u5909\u66f4\u3059\u308b\u3060\u3051\u3067 <code>PlayerHealth</code> \u306e\u30ed\u30b8\u30c3\u30af\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/concepts/architecture/#_4","title":"\u30b7\u30fc\u30f3\u9593\u306e\u901a\u4fe1","text":"<p><code>ScriptableObject</code> \u306f\u7279\u5b9a\u306e\u30b7\u30fc\u30f3\u306e\u5916\u90e8\u306b\u5b58\u5728\u3059\u308b\u30a2\u30bb\u30c3\u30c8\u3067\u3042\u308b\u305f\u3081\u3001\u30b7\u30fc\u30f3\u9593\u306e\u901a\u4fe1\u306b\u6700\u9069\u306a\u30c4\u30fc\u30eb\u3067\u3059\u3002\u300cMainMenu\u300d\u30b7\u30fc\u30f3\u3067\u767a\u751f\u3057\u305f <code>GameEvent</code> \u306f\u3001\u4e21\u65b9\u304c\u540c\u3058\u30a4\u30d9\u30f3\u30c8\u30a2\u30bb\u30c3\u30c8\u3078\u306e\u53c2\u7167\u3092\u6301\u3063\u3066\u3044\u308b\u9650\u308a\u3001\u300cLevel01\u300d\u30b7\u30fc\u30f3\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u7c21\u5358\u306b\u30ea\u30c3\u30b9\u30f3\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u8907\u96d1\u306a <code>DontDestroyOnLoad</code> \u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3084\u9759\u7684\u306a\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306b\u983c\u308b\u3053\u3068\u306a\u304f\u3001\u4e00\u822c\u7684\u306a Unity \u306e\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/concepts/architecture/#soar-mvp","title":"SOAR \u3092\u4f7f\u7528\u3057\u305f\u30e2\u30c7\u30eb\u30d3\u30e5\u30fc\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc (MVP)","text":"<p>SOAR \u306f\u3001UI \u3092\u591a\u7528\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u9020\u5316\u3059\u308b\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u3067\u3042\u308b\u30e2\u30c7\u30eb\u30d3\u30e5\u30fc\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc (MVP) \u30d1\u30bf\u30fc\u30f3\u306b\u81ea\u7136\u306b\u9069\u5408\u3057\u307e\u3059\u3002</p> <ul> <li>\u30e2\u30c7\u30eb\uff1a \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u751f\u30c7\u30fc\u30bf\u3068\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3002\u7d14\u7c8b\u306a\u5b9f\u88c5\u3067\u306f\u3001\u30e2\u30c7\u30eb\u306f Unity \u3092\u8a8d\u8b58\u3059\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</li> <li>\u30d3\u30e5\u30fc\uff1a \u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b Unity \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08\u4f8b\uff1a<code>Text</code>\u3001<code>Slider</code>\u3001<code>Image</code>\uff09\u3002\u30d3\u30e5\u30fc\u306f\u300c\u30c0\u30e0\u300d\u3067\u3042\u308a\u3001\u6307\u793a\u3055\u308c\u305f\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b\u65b9\u6cd5\u3057\u304b\u77e5\u308a\u307e\u305b\u3093\u3002</li> <li>\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc\uff1a \u30e2\u30c7\u30eb\u3068\u30d3\u30e5\u30fc\u306e\u9593\u306e\u30e1\u30c7\u30a3\u30a8\u30fc\u30bf\u30fc\u3002\u30e2\u30c7\u30eb\u306e\u5909\u66f4\u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3001\u30c7\u30fc\u30bf\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3001\u30d3\u30e5\u30fc\u306b\u8868\u793a\u65b9\u6cd5\u3092\u6307\u793a\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u30d3\u30e5\u30fc\u304b\u3089\u306e\u5165\u529b\uff08\u30dc\u30bf\u30f3\u306e\u30af\u30ea\u30c3\u30af\u306a\u3069\uff09\u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3001\u30e2\u30c7\u30eb\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002</li> </ul> <p>SOAR \u30a2\u30bb\u30c3\u30c8\u306f\u3001\u30e2\u30c7\u30eb\u3068\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc\u306e\u9593\u306e\u5b8c\u74a7\u306a\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\uff1a</p> <ul> <li><code>Variable</code> \u306f\u3001\u30e2\u30c7\u30eb\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u3092\u30e9\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002</li> <li>\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc\u306f\u3001\u3053\u306e <code>Variable</code> \u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u307e\u3059\u3002</li> <li>\u30e2\u30c7\u30eb\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001<code>Variable</code> \u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002</li> <li>\u30d7\u30ec\u30bc\u30f3\u30bf\u30fc\u306b\u901a\u77e5\u3055\u308c\u3001\u30d3\u30e5\u30fc\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002</li> </ul> <p></p>"},{"location":"ja/concepts/r3-integration/","title":"R3 \u3068\u306e\u9023\u643a","text":"<p>SOAR \u306f\u3001\u30e2\u30c0\u30f3\u3067\u6a5f\u80fd\u8c4a\u5bcc\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b R3 (Reactive Extensions for C#) \u3068\u9ad8\u5ea6\u306b\u62e1\u5f35\u53ef\u80fd\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002R3 \u304c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5b58\u5728\u3059\u308b\u5834\u5408\u3001SOAR \u306f\u81ea\u52d5\u7684\u306b\u305d\u308c\u3068\u9023\u643a\u3057\u3001\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3001\u304a\u3088\u3073\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30e0\u64cd\u4f5c\u306e\u305f\u3081\u306e\u5f37\u529b\u306a\u6a5f\u80fd\u30bb\u30c3\u30c8\u3092\u89e3\u653e\u3057\u307e\u3059\u3002</p> <p>\u3053\u306e\u9023\u643a\u306b\u3088\u308a\u3001SOAR \u306e\u30b3\u30a2\u6a5f\u80fd\u304c\u6b21\u306e\u3088\u3046\u306b\u5f37\u5316\u3055\u308c\u307e\u3059\uff1a</p> <ul> <li><code>Observable</code> \u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u516c\u958b: <code>GameEvent</code>\u3001<code>Variable</code>\u3001<code>Collection</code>\u3001<code>Transaction</code> \u306a\u3069\u306e SOAR \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u3092 R3 <code>Observable</code> \u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3057\u3066\u516c\u958b\u3057\u3001LINQ \u30b9\u30bf\u30a4\u30eb\u306e\u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3057\u305f\u8907\u96d1\u306a\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002</li> <li><code>async/await</code> \u30b5\u30dd\u30fc\u30c8\u306e\u63d0\u4f9b: <code>async/await</code> \u3092\u4f7f\u7528\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u3084\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5f85\u6a5f\u304c\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u306a\u308a\u307e\u3059\u3002</li> <li>\u9ad8\u5ea6\u306a\u540c\u6642\u5b9f\u884c\u5236\u5fa1: <code>Transaction</code> \u306e\u5834\u5408\u3001R3 \u306f\u540c\u6642\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u65b9\u6cd5\u3092\u304d\u3081\u7d30\u304b\u304f\u5236\u5fa1\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/concepts/r3-integration/#_1","title":"\u9023\u643a\u306e\u6709\u52b9\u5316","text":"<p>R3 \u3068\u306e\u9023\u643a\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001R3 \u3092 Unity \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3060\u3051\u3067\u3059\u3002SOAR \u306f\u3001\u901a\u5e38 R3 \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3055\u308c\u308b <code>SOAR_R3</code> \u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u5b9a\u7fa9\u30b7\u30f3\u30dc\u30eb\u3092\u4ecb\u3057\u3066\u3001\u305d\u306e\u5b58\u5728\u3092\u81ea\u52d5\u7684\u306b\u691c\u51fa\u3057\u307e\u3059\u3002</p> <p><code>SOAR_R3</code> \u30b7\u30f3\u30dc\u30eb\u304c\u81ea\u52d5\u7684\u306b\u5b9a\u7fa9\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001<code>Project Settings &gt; Player &gt; Other Settings &gt; Scripting Define Symbols</code> \u3067\u624b\u52d5\u3067\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/concepts/r3-integration/#_2","title":"\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8","text":""},{"location":"ja/concepts/r3-integration/#observable","title":"Observable \u30b9\u30c8\u30ea\u30fc\u30e0","text":"<p>R3 \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001SOAR \u306e\u307b\u3068\u3093\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u3092 <code>Observable</code> \u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3064\u307e\u308a\u3001<code>Where</code>\u3001<code>Select</code>\u3001<code>Merge</code>\u3001<code>CombineLatest</code>\u3001<code>Throttle</code> \u306a\u3069\u306e\u5f37\u529b\u306a R3 \u6f14\u7b97\u5b50\u3092\u4f7f\u7528\u3057\u3066\u3001\u5ba3\u8a00\u7684\u306a\u65b9\u6cd5\u3067\u6d17\u7df4\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u578b\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/concepts/r3-integration/#asyncawait","title":"Async/Await \u30b5\u30dd\u30fc\u30c8","text":"<p>\u3053\u306e\u9023\u643a\u306b\u3088\u308a\u3001\u591a\u304f\u306e\u64cd\u4f5c\u306b\u5bfe\u3057\u3066 <code>...Async()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u63d0\u4f9b\u3055\u308c\u3001<code>ValueTask</code> \u307e\u305f\u306f <code>ValueTask&lt;T&gt;</code> \u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u624b\u52d5\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u7ba1\u7406\u306a\u3057\u3067\u3001\u30af\u30ea\u30fc\u30f3\u3067\u52b9\u7387\u7684\u306a\u975e\u540c\u671f\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/concepts/r3-integration/#disposables","title":"Disposables \u3068\u30e9\u30a4\u30d5\u30bf\u30a4\u30e0\u7ba1\u7406","text":"<p>SOAR \u30a4\u30d9\u30f3\u30c8\u3078\u306e\u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\uff08<code>Subscribe()</code> \u307e\u305f\u306f R3 \u306e <code>Observable</code> \u3092\u4ecb\u3057\u3066\uff09\u306f <code>IDisposable</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u3053\u308c\u3089\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e\u30e9\u30a4\u30d5\u30bf\u30a4\u30e0\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002R3 \u306f\u3001<code>GameObject</code> \u304c\u7834\u68c4\u3055\u308c\u305f\u3068\u304d\u306b\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u81ea\u52d5\u7684\u306b\u7834\u68c4\u3059\u308b\u305f\u3081\u306e <code>AddTo(Component)</code> \u306e\u3088\u3046\u306a\u4fbf\u5229\u306a\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <pre><code>using R3;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class MyComponent : MonoBehaviour\n{\n    [SerializeField] private GameEvent myGameEvent;\n\n    void Start()\n    {\n        myGameEvent.AsObservable()\n            .Subscribe(_ =&gt; Debug.Log(\"Event raised!\"))\n            .AddTo(this); // \u3053\u306e GameObject \u304c\u7834\u68c4\u3055\u308c\u308b\u3068\u304d\u306b\u81ea\u52d5\u7684\u306b\u7834\u68c4\u3055\u308c\u307e\u3059\n    }\n}\n</code></pre>"},{"location":"ja/features/base-class/","title":"\u57fa\u672c\u30af\u30e9\u30b9","text":"<p>SOAR \u306f\u3001<code>Variable</code>\u3001<code>GameEvent</code>\u3001<code>Collection</code> \u306a\u3069\u306e\u30b3\u30a2\u6a5f\u80fd\u306b\u5bfe\u3057\u3066\u3001\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f\u5177\u4f53\u7684\u306a\u300c\u57fa\u672c\u30af\u30e9\u30b9\u300d\u306e\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u3053\u308c\u3089\u306f\u3001\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u578b\uff08\u4f8b\uff1a<code>int</code>\u3001<code>float</code>\u3001<code>string</code>\u3001<code>Vector3</code>\uff09\u306b\u5bfe\u5fdc\u3057\u305f\u3001\u3059\u3050\u306b\u4f7f\u3048\u308b <code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u3067\u3042\u308a\u3001\u958b\u767a\u8005\u306f\u5b9a\u578b\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306a\u304f SOAR \u306e\u6a5f\u80fd\u3092\u3059\u3050\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u3089\u306f\u5225\u306e <code>Soar.Base</code> \u30a2\u30bb\u30f3\u30d6\u30ea\u306b\u914d\u7f6e\u3055\u308c\u3066\u304a\u308a\u3001\u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u53c2\u7167\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/base-class/#_2","title":"\u57fa\u672c\u30af\u30e9\u30b9\u306e\u4f7f\u7528","text":"<p>\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f\u57fa\u672c\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\uff08<code>.asmdef</code>\uff09\u306b <code>Soar.Base</code> \u3078\u306e\u53c2\u7167\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <ol> <li> <p>\u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u7279\u5b9a: \u57fa\u672c\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7ba1\u7406\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306e <code>.asmdef</code> \u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u307e\u3059\u3002\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001<code>Create &gt; Assembly Definition</code> \u3092\u9078\u629e\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u53c2\u7167\u306e\u8ffd\u52a0: <code>.asmdef</code> \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u3066\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u958b\u304d\u307e\u3059\u3002\u300cAssembly Definition References\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u3067 <code>+</code> \u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001<code>Soar.Base</code> \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002</p> <p> 4 3.  \u5909\u66f4\u306e\u9069\u7528: \u300cApply\u300d\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u5909\u66f4\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002</p> </li> </ol> <p>\u53c2\u7167\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3068\u3001Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u3053\u308c\u3089\u306e\u57fa\u672c\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u76f4\u63a5\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Assembly-CSharp</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u6307\u5b9a\u3055\u308c\u305f asmdef \u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u3001SOAR \u306e\u57fa\u672c\u30af\u30e9\u30b9\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u81ea\u52d5\u7684\u306b\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d4\u30f3\u30b0\u306b\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u304c\u3001\u672c\u756a\u74b0\u5883\u3067\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093\u3002</p>"},{"location":"ja/features/base-class/#_3","title":"\u5229\u7528\u53ef\u80fd\u306a\u57fa\u672c\u30af\u30e9\u30b9","text":"<p>\u57fa\u672c\u30af\u30e9\u30b9\u306f\u3001<code>Assets &gt; Create &gt; SOAR</code> \u30e1\u30cb\u30e5\u30fc\u306e\u5404\u6a5f\u80fd\u30ab\u30c6\u30b4\u30ea\u306e\u4e0b\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/features/base-class/#gameevents","title":"GameEvents","text":"<p>\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u578b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u304a\u3088\u3073\u578b\u4ed8\u304d\u306e <code>GameEvent</code> \u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Game Events</code> \u306b\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057:<ul> <li><code>GameEvent</code> (\u5358\u7d14\u306a\u30b7\u30b0\u30ca\u30eb\u7528)</li> </ul> </li> <li>\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b:<ul> <li><code>BoolGameEvent</code></li> <li><code>ByteGameEvent</code></li> <li><code>DoubleGameEvent</code></li> <li><code>FloatGameEvent</code></li> <li><code>IntGameEvent</code></li> <li><code>LongGameEvent</code></li> <li><code>StringGameEvent</code></li> </ul> </li> <li>Unity \u578b:<ul> <li><code>AudioClipGameEvent</code></li> <li><code>GameObjectGameEvent</code></li> <li><code>PoseGameEvent</code></li> <li><code>QuaternionGameEvent</code></li> <li><code>Texture2DGameEvent</code></li> <li><code>Vector2GameEvent</code></li> <li><code>Vector3GameEvent</code></li> </ul> </li> </ul> <p>\u3053\u308c\u3089\u306f\u3001\u300cPlayerDied\u300d\uff08<code>GameEvent</code>\uff09\u3001\u300cItemCollected\u300d\uff08\u30a2\u30a4\u30c6\u30e0\u540d\u4ed8\u304d\u306e <code>StringGameEvent</code>\uff09\u3001\u300cPlaySound\u300d\uff08<code>AudioClipGameEvent</code>\uff09\u306a\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p>"},{"location":"ja/features/base-class/#variables","title":"Variables","text":"<p>\u4e00\u822c\u7684\u306b\u4f7f\u7528\u3055\u308c\u308b\u5909\u6570\u578b\u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Variables</code> \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b:<ul> <li><code>BoolVariable</code></li> <li><code>ByteVariable</code></li> <li><code>DoubleVariable</code></li> <li><code>FloatVariable</code></li> <li><code>IntVariable</code></li> <li><code>LongVariable</code></li> <li><code>StringVariable</code></li> </ul> </li> <li>Unity \u578b:<ul> <li><code>CameraVariable</code></li> <li><code>ColorVariable</code></li> <li><code>GameObjectVariable</code></li> <li><code>PoseVariable</code></li> <li><code>QuaternionVariable</code></li> <li><code>TransformVariable</code></li> <li><code>Vector2Variable</code></li> <li><code>Vector3Variable</code></li> </ul> </li> </ul> <p>\u3053\u308c\u3089\u306e\u5909\u6570\u306f\u3001\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u4f53\u529b\uff08<code>FloatVariable</code>\uff09\u3001\u30b9\u30b3\u30a2\uff08<code>IntVariable</code>\uff09\u3001\u30d7\u30ec\u30a4\u30e4\u30fc\u540d\uff08<code>StringVariable</code>\uff09\u306a\u3069\u306e\u5171\u6709\u30c7\u30fc\u30bf\u306e\u5909\u66f4\u3092\u4fdd\u5b58\u304a\u3088\u3073\u53cd\u5fdc\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/features/base-class/#collections-lists","title":"Collections (Lists)","text":"<p>SOAR \u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Lists</code> \u3067\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f\u30ea\u30b9\u30c8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <ul> <li>\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b:<ul> <li><code>BoolList</code></li> <li><code>ByteList</code></li> <li><code>DoubleList</code></li> <li><code>FloatList</code></li> <li><code>IntList</code></li> <li><code>LongList</code></li> <li><code>StringList</code></li> </ul> </li> <li>Unity \u578b:<ul> <li><code>AudioClipList</code></li> <li><code>ColorList</code></li> <li><code>PoseList</code></li> <li><code>QuaternionList</code></li> <li><code>SpriteList</code></li> <li><code>Vector2List</code></li> <li><code>Vector3List</code></li> </ul> </li> </ul> <p>\u3053\u308c\u3089\u306e\u30ea\u30b9\u30c8\u306f\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u6575\u306e\u30ea\u30b9\u30c8\uff08<code>GameObjectList</code>\uff09\u3001\u66f2\u306e\u30d7\u30ec\u30a4\u30ea\u30b9\u30c8\uff08<code>AudioClipList</code>\uff09\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u624b\u9806\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\uff08<code>StringList</code>\uff09\u306a\u3069\u3001\u52d5\u7684\u306a\u30a2\u30a4\u30c6\u30e0\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> <p>\u8f9e\u66f8\u306f\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u306e\u307f</p> <p>\u73fe\u5728\u3001\u57fa\u672c\u30af\u30e9\u30b9\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u306f <code>List</code> \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u307f\u3067\u3059\u3002<code>Dictionary</code> \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5834\u5408\u306f\u3001<code>SoarDictionary&lt;TKey, TValue&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/base-class/#transactions","title":"Transactions","text":"<p>\u57fa\u672c\u306e <code>Transaction</code> \u578b\u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Transactions</code> \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057:<ul> <li><code>Transaction</code> (\u5358\u7d14\u306a\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u30b7\u30b0\u30ca\u30eb\u7528)</li> </ul> </li> <li>\u5bfe\u79f0\u578b:<ul> <li><code>BoolTransaction</code></li> <li><code>ByteTransaction</code></li> <li><code>DoubleTransaction</code></li> <li><code>FloatTransaction</code></li> <li><code>IntTransaction</code></li> <li><code>LongTransaction</code></li> <li><code>PoseTransaction</code></li> <li><code>QuaternionTransaction</code></li> <li><code>StringTransaction</code></li> <li><code>Vector2Transaction</code></li> <li><code>Vector3Transaction</code></li> </ul> </li> </ul> <p>\u3053\u308c\u3089\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4e21\u65b9\u306b\u540c\u3058\u578b\u3092\u4f7f\u7528\u3057\u307e\u3059\uff08\u4f8b\uff1a<code>IntTransaction</code> \u306f <code>Transaction&lt;int, int&gt;</code> \u3067\u3059\uff09\u3002\u3053\u308c\u3089\u306f\u3001\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u51e6\u7406\u3057\u3001\u540c\u3058\u578b\u306e\u5909\u66f4\u3055\u308c\u305f\u5024\u3092\u8fd4\u3059\u64cd\u4f5c\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u975e\u5bfe\u79f0\u578b\u306e\u5834\u5408\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066 <code>Transaction&lt;TRequest, TResponse&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/base-class/#_4","title":"\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u306e\u4f5c\u6210","text":"<p>SOAR \u306f\u5e45\u5e83\u3044\u57fa\u672c\u30af\u30e9\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u578b\u304c\u3057\u3070\u3057\u3070\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u7c21\u5358\u3067\u3001\u3059\u3079\u3066\u306e SOAR \u6a5f\u80fd\u3067\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3044\u307e\u3059\u3002</p> <p>\u305f\u3068\u3048\u3070\u3001\u30ab\u30b9\u30bf\u30e0\u306e <code>PlayerData</code> \u69cb\u9020\u4f53\u306e <code>Variable</code> \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\uff1a</p> <ol> <li> <p>\u30c7\u30fc\u30bf\u578b\u306e\u5b9a\u7fa9: \u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u578b\u304c <code>[Serializable]</code> \u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> <pre><code>// File: PlayerData.cs\nusing System;\n\n[Serializable]\npublic struct PlayerData\n{\n    public string name;\n    public int level;\n    public float health;\n}\n</code></pre> </li> <li> <p>Variable \u30af\u30e9\u30b9\u306e\u4f5c\u6210: <code>Variable&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <pre><code>// File: PlayerDataVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"PlayerDataVariable\", menuName = MenuHelper.DefaultVariableMenu + \"Player Data Variable\")]\npublic class PlayerDataVariable : Variable&lt;PlayerData&gt; { }\n</code></pre> </li> <li> <p>\u30a2\u30bb\u30c3\u30c8\u306e\u4f5c\u6210: <code>Assets &gt; Create &gt; SOAR &gt; Variables &gt; Player Data Variable</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089 <code>PlayerDataVariable</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> </li> </ol> <p>\u3053\u306e\u540c\u3058\u30d7\u30ed\u30bb\u30b9\u306f\u3001\u30ab\u30b9\u30bf\u30e0\u306e <code>Command</code>\u3001<code>GameEvent</code>\u3001<code>Collection</code>\u3001\u304a\u3088\u3073 <code>Transaction</code> \u306e\u4f5c\u6210\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/","title":"Collection","text":"<p>SOAR \u306e <code>Collection</code> \u6a5f\u80fd\u306f\u3001<code>SoarList&lt;T&gt;</code> \u3084 <code>SoarDictionary&lt;TKey, TValue&gt;</code> \u306e\u3088\u3046\u306a\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a <code>ScriptableObject</code> \u30d9\u30fc\u30b9\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u30a2\u30bb\u30c3\u30c8\u306b\u3088\u308a\u3001\u5171\u6709\u3055\u308c\u3001\u76e3\u8996\u53ef\u80fd\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3057\u3001\u7ba1\u7406\u30fb\u76e3\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <code>IList</code> \u3084 <code>IDictionary</code> \u306e\u3088\u3046\u306a\u4e00\u822c\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001\u4f7f\u3044\u6163\u308c\u305f API \u3092\u63d0\u4f9b\u3057\u3001LINQ \u3068\u5b8c\u5168\u306b\u4e92\u63db\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30a2\u30a4\u30c6\u30e0\u304c\u8ffd\u52a0\u3001\u524a\u9664\u3001\u307e\u305f\u306f\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306b\u8ffd\u52a0\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#_1","title":"\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8","text":"<p><code>Collection&lt;T&gt;</code> \u306f\u3001\u3059\u3079\u3066\u306e SOAR \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b3\u30a2\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u62bd\u8c61\u57fa\u672c\u30af\u30e9\u30b9\u3067\u3059\u3002</p> <p></p> <ul> <li>\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30a4\u30d9\u30f3\u30c8: \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u901a\u77e5\u3057\u307e\u3059\u3002\u8981\u7d20\u306e\u8ffd\u52a0\u3001\u524a\u9664\u3001\u30af\u30ea\u30a2\u3001\u307e\u305f\u306f\u5909\u66f4\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u307e\u3059\u3002</li> <li>\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u306e\u7de8\u96c6: \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u306f Unity \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u76f4\u63a5\u8868\u793a\u304a\u3088\u3073\u5909\u66f4\u3067\u304d\u308b\u305f\u3081\u3001\u521d\u671f\u30c7\u30fc\u30bf\u306e\u8a2d\u5b9a\u304c\u7c21\u5358\u3067\u3059\u3002</li> <li>\u5024\u306e\u81ea\u52d5\u30ea\u30bb\u30c3\u30c8: \u6709\u52b9\u306b\u3059\u308b\u3068\u3001\u518d\u751f\u30e2\u30fc\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u81ea\u52d5\u7684\u306b\u521d\u671f\u72b6\u614b\u306b\u623b\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306e <code>autoResetValue</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u5236\u5fa1\u3055\u308c\u307e\u3059\u3002</li> <li>\u5024\u30a4\u30d9\u30f3\u30c8\u30bf\u30a4\u30d7: \u3053\u306e\u8a2d\u5b9a\u306f\u3001\u5024\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u304c\u3044\u3064\u767a\u751f\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\uff1a<ul> <li><code>ValueAssign</code>: \u73fe\u5728\u306e\u5024\u3068\u540c\u3058\u3067\u3042\u3063\u3066\u3082\u3001\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u305f\u3073\u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u3002</li> <li><code>ValueChanged</code>: \u65b0\u3057\u3044\u5024\u304c\u73fe\u5728\u306e\u5024\u3068\u7570\u306a\u308b\u5834\u5408\u306b\u306e\u307f\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u3002</li> </ul> </li> </ul> <p>\u30b7\u30ea\u30a2\u30eb\u5316\u3055\u308c\u305f\u578b</p> <p>Unity \u306e\u30b7\u30ea\u30a2\u30eb\u5316\u306e\u52d5\u4f5c\u306b\u3088\u308a\u3001<code>autoResetValue</code> \u306f\u69cb\u9020\u4f53\u304a\u3088\u3073\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3067\u6700\u3082\u4fe1\u983c\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30af\u30e9\u30b9\u578b\u306e\u5834\u5408\u3001\u521d\u671f\u72b6\u614b\u306f\u30b7\u30e3\u30ed\u30fc\u30b3\u30d4\u30fc\u3067\u3059\u3002\u30ea\u30b9\u30c8\u5185\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5909\u66f4\u3059\u308b\u3068\u521d\u671f\u72b6\u614b\u304c\u5909\u66f4\u3055\u308c\u3001\u30ea\u30bb\u30c3\u30c8\u6642\u306b\u4e88\u671f\u3057\u306a\u3044\u52d5\u4f5c\u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#soarlistt","title":"<code>SoarList&lt;T&gt;</code>","text":"<p><code>SoarList&lt;T&gt;</code> \u306f\u3001\u6a19\u6e96\u306e <code>List&lt;T&gt;</code> \u306b\u4f3c\u305f\u3001\u9806\u5e8f\u4ed8\u3051\u3089\u308c\u305f\u8981\u7d20\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002 <code>IList&lt;T&gt;</code> \u304a\u3088\u3073 <code>IReadOnlyList&lt;T&gt;</code> \u3092\u5b9f\u88c5\u3057\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\u3001<code>Insert</code>\u3001<code>RemoveAt</code> \u306a\u3069\u306e\u4f7f\u3044\u6163\u308c\u305f\u30ea\u30b9\u30c8\u64cd\u4f5c\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 <code>SoarList&lt;T&gt;</code> \u306f\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u306e\u30ea\u30b9\u30c8\u3084\u30a6\u30a7\u30a4\u30dd\u30a4\u30f3\u30c8\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306a\u3069\u3001\u30b2\u30fc\u30e0\u306e\u7570\u306a\u308b\u90e8\u5206\u9593\u3067\u30c7\u30fc\u30bf\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30ea\u30b9\u30c8\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002</p>"},{"location":"ja/features/collection/#soardictionarytkey-tvalue","title":"<code>SoarDictionary&lt;TKey, TValue&gt;</code>","text":"<p><code>SoarDictionary&lt;TKey, TValue&gt;</code> \u306f\u3001<code>Dictionary&lt;TKey, TValue&gt;</code> \u3092\u53cd\u6620\u3057\u305f\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002 <code>IDictionary&lt;TKey, TValue&gt;</code> \u304a\u3088\u3073 <code>IReadOnlyDictionary&lt;TKey, TValue&gt;</code> \u3092\u5b9f\u88c5\u3057\u3001\u52b9\u7387\u7684\u306a\u30ad\u30fc\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3068\u5909\u66f4\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002 \u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30a4\u30f3\u30d9\u30f3\u30c8\u30ea\uff08\u30ad\u30fc\u304c\u30a2\u30a4\u30c6\u30e0 ID \u3067\u5024\u304c\u30a2\u30a4\u30c6\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u306e\u7ba1\u7406\u3084\u30b2\u30fc\u30e0\u8a2d\u5b9a\u306e\u4fdd\u5b58\u306a\u3069\u306e\u30b7\u30ca\u30ea\u30aa\u306b\u6700\u9069\u3067\u3059\u3002</p>"},{"location":"ja/features/collection/#_2","title":"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210","text":"<p>SOAR \u306b\u306f\u3001\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u578b\uff08\u4f8b\uff1a<code>IntList</code>\u3001<code>StringList</code>\uff09\u7528\u306e\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f <code>List</code> \u578b\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001<code>Assets &gt; Create &gt; SOAR &gt; Lists</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u53c2\u7167</p> <p>\u3053\u308c\u3089\u306e\u4e00\u822c\u7684\u306a\u578b\u306f <code>Soar.Base.asmdef</code> \u30a2\u30bb\u30f3\u30d6\u30ea\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306b <code>Soar.Base.asmdef</code> \u3078\u306e\u53c2\u7167\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u578b\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>SoarList&lt;T&gt;</code> \u307e\u305f\u306f <code>SoarDictionary&lt;TKey, TValue&gt;</code> \u304b\u3089\u7d99\u627f\u3059\u308b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#_3","title":"\u30ab\u30b9\u30bf\u30e0\u30ea\u30b9\u30c8\u306e\u4f8b","text":"<ol> <li> <p>\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u578b\u306f <code>[Serializable]</code> \u3068\u3057\u3066\u30de\u30fc\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: MyItem.cs\nusing System;\n\n[Serializable]\npublic struct MyItem\n{\n    public string itemName;\n    public int itemID;\n}\n</code></pre> </li> <li> <p><code>SoarList&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: MyItemList.cs\nusing Soar;\nusing Soar.Collections;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyItemList\", menuName = MenuHelper.DefaultListMenu + \"My Item List\")]\npublic class MyItemList : SoarList&lt;MyItem&gt; { }\n</code></pre> </li> <li> <p><code>MyItemList</code> \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Lists &gt; My Item List</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> </li> </ol>"},{"location":"ja/features/collection/#_4","title":"\u30ab\u30b9\u30bf\u30e0\u8f9e\u66f8\u306e\u4f8b","text":"<p>\u30ab\u30b9\u30bf\u30e0\u8f9e\u66f8\u306e\u4f5c\u6210\u3082\u540c\u3058\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3044\u307e\u3059\u3002</p> <pre><code>// File: StringStringDictionary.cs\nusing Soar;\nusing Soar.Collections;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"StringStringDictionary\", menuName = MenuHelper.DefaultCollectionMenu + \"String-String Dictionary\")]\npublic class StringStringDictionary : SoarDictionary&lt;string, string&gt; { }\n</code></pre>"},{"location":"ja/features/collection/#_5","title":"\u5909\u66f4\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6","text":"<p>\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5909\u66f4\u306f\u3001\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u3053\u3068\u3067\u76e3\u8996\u3067\u304d\u307e\u3059\u3002\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u4e0d\u8981\u306b\u306a\u3063\u305f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u5e38\u306b\u7834\u68c4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: CollectionMonitor.cs\nusing System;\nusing Soar.Collections;\nusing UnityEngine;\n\n// IntList \u30a2\u30bb\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u3068\u4eee\u5b9a\npublic class CollectionMonitor : MonoBehaviour\n{\n    [SerializeField] private IntList targetList;\n    private IDisposable addSubscription;\n    private IDisposable removeSubscription;\n    private IDisposable countSubscription;\n    private IDisposable valueSubscription;\n\n    private void Start()\n    {\n        if (targetList == null) return;\n\n        // \u3055\u307e\u3056\u307e\u306a\u30a4\u30d9\u30f3\u30c8\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\n        addSubscription = targetList.SubscribeOnAdd(OnItemAdded);\n        removeSubscription = targetList.SubscribeOnRemove(OnItemRemoved);\n        countSubscription = targetList.SubscribeToCount(OnCountChanged);\n        valueSubscription = targetList.SubscribeToValues(OnValueChanged);\n\n        Debug.Log($\"Monitoring {targetList.name}. Initial count: {targetList.Count}\");\n    }\n\n    private void OnDestroy()\n    {\n        // \u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u7834\u68c4\n        addSubscription?.Dispose();\n        removeSubscription?.Dispose();\n        countSubscription?.Dispose();\n        valueSubscription?.Dispose();\n    }\n\n    private void OnItemAdded(int newItem)\n    {\n        Debug.Log($\"Item added: {newItem}\");\n    }\n\n    private void OnItemRemoved(int removedItem)\n    {\n        Debug.Log($\"Item removed: {removedItem}\");\n    }\n\n    private void OnCountChanged(int newCount)\n    {\n        Debug.Log($\"Count changed to: {newCount}\");\n    }\n\n    private void OnValueChanged(int index, int newValue)\n    {\n        Debug.Log($\"Value at index {index} changed to: {newValue}\");\n    }\n}\n</code></pre>"},{"location":"ja/features/collection/#r3","title":"R3 \u3068\u306e\u9023\u643a","text":"<p><code>SOAR_R3</code> \u30b9\u30af\u30ea\u30d7\u30c6\u30a3\u30f3\u30b0\u5b9a\u7fa9\u30b7\u30f3\u30dc\u30eb\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u5834\u5408\u3001SOAR \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f R3 \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u7d71\u5408\u3055\u308c\u3001\u5f37\u529b\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u6a5f\u80fd\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#observable","title":"Observable \u30b9\u30c8\u30ea\u30fc\u30e0","text":"<p><code>SoarList&lt;T&gt;</code> \u3068 <code>SoarDictionary&lt;TKey, TValue&gt;</code> \u306e\u4e21\u65b9\u304c\u3001\u8c4a\u5bcc\u306a <code>Observe...()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li><code>ObserveAdd()</code>: \u8ffd\u52a0\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li><code>ObserveRemove()</code>: \u524a\u9664\u3055\u308c\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li><code>ObserveClear()</code>: \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e <code>Clear()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u3068\u304d\u306b <code>Unit</code> \u901a\u77e5\u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li><code>ObserveCount()</code>: \u5909\u66f4\u3055\u308c\u308b\u305f\u3073\u306b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u65b0\u3057\u3044 <code>Count</code> \u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li><code>ObserveValues()</code>: \u65e2\u5b58\u306e\u8981\u7d20\u306e\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u901a\u77e5\u3092\u767a\u884c\u3057\u307e\u3059\u3002<ul> <li><code>SoarList&lt;T&gt;</code> \u306e\u5834\u5408\u3001<code>IndexValuePair&lt;T&gt;</code> \u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> <li><code>SoarDictionary&lt;TKey, TValue&gt;</code> \u306e\u5834\u5408\u3001<code>KeyValuePair&lt;TKey, TValue&gt;</code> \u3092\u767a\u884c\u3057\u307e\u3059\u3002</li> </ul> </li> </ul> <p><code>SoarList&lt;T&gt;</code> \u306b\u306f\u3001\u30ea\u30b9\u30c8\u56fa\u6709\u306e\u64cd\u4f5c\u306e\u305f\u3081\u306e\u8ffd\u52a0\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3042\u308a\u307e\u3059\uff1a -   <code>ObserveMove()</code>: \u5024\u3001\u53e4\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3001\u65b0\u3057\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u542b\u3080 <code>MovedValueDto&lt;T&gt;</code> \u3092\u767a\u884c\u3057\u307e\u3059\u3002 -   <code>ObserveInsert()</code>: \u7279\u5b9a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u30a2\u30a4\u30c6\u30e0\u304c\u633f\u5165\u3055\u308c\u305f\u3068\u304d\u306b <code>IndexValuePair&lt;T&gt;</code> \u3092\u767a\u884c\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#asyncawait","title":"Async/Await \u30b5\u30dd\u30fc\u30c8","text":"<p>\u3059\u3079\u3066\u306e <code>Observe...()</code> \u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001<code>ValueTask</code> \u3092\u8fd4\u3059\u5bfe\u5fdc\u3059\u308b <code>On...Async()</code> \u307e\u305f\u306f <code>...Async()</code> \u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u6b21\u306e\u7279\u5b9a\u306e\u5909\u66f4\u3092 <code>await</code> \u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <ul> <li><code>OnAddAsync()</code>: \u6b21\u306b\u8ffd\u52a0\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002</li> <li><code>OnRemoveAsync()</code>: \u6b21\u306b\u524a\u9664\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002</li> <li><code>OnClearAsync()</code>: \u6b21\u306e <code>Clear()</code> \u64cd\u4f5c\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002</li> <li><code>CountAsync()</code>: \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e <code>Count</code> \u306e\u6b21\u306e\u5909\u66f4\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002</li> <li><code>ValuesAsync()</code>: \u8981\u7d20\u306e\u5024\u306e\u6b21\u306e\u5909\u66f4\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002</li> </ul> <p><code>SoarList&lt;T&gt;</code> \u306e\u5834\u5408\uff1a -   <code>OnMoveAsync()</code>: \u6b21\u306e\u79fb\u52d5\u64cd\u4f5c\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002 -   <code>OnInsertAsync()</code>: \u6b21\u306e\u633f\u5165\u64cd\u4f5c\u3092\u5f85\u6a5f\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#_6","title":"\u4f8b","text":"<pre><code>// R3 \u306e\u4f8b\n#if SOAR_R3\nusing R3;\nusing Soar.Collections;\nusing UnityEngine;\n\n// IntList \u30a2\u30bb\u30c3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u3068\u4eee\u5b9a\npublic class R3CollectionMonitor : MonoBehaviour\n{\n    [SerializeField] private IntList targetList;\n\n    private void OnEnable()\n    {\n        if (targetList == null) return;\n\n        // \u3088\u308a\u8868\u73fe\u529b\u8c4a\u304b\u3067\u7ba1\u7406\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306e\u305f\u3081\u306b R3 Observable \u3092\u4f7f\u7528\n        targetList.ObserveAdd()\n            .Subscribe(newItem =&gt; Debug.Log($\"Item added: {newItem}\"))\n            .AddTo(this); // \u81ea\u52d5\u7834\u68c4\u306e\u305f\u3081\u306e R3 \u62e1\u5f35\n\n        targetList.ObserveCount()\n            .Subscribe(newCount =&gt; Debug.Log($\"Count is now: {newCount}\"))\n            .AddTo(this);\n    }\n}\n#endif\n</code></pre>"},{"location":"ja/features/collection/#_7","title":"\u30a8\u30c7\u30a3\u30bf\u7d71\u5408","text":"<p><code>Collection&lt;T&gt;</code> \u304a\u3088\u3073\u305d\u306e\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u30ab\u30b9\u30bf\u30e0\u30a8\u30c7\u30a3\u30bf\u306f\u3001Unity \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u4f7f\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <ul> <li>\u8981\u7d20\u30ea\u30b9\u30c8: \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u304c\u30ea\u30b9\u30c8\u5f62\u5f0f\u3067\u8868\u793a\u3055\u308c\u3001\u5024\u3092\u76f4\u63a5\u7de8\u96c6\u3067\u304d\u307e\u3059\u3002</li> <li>\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8a2d\u5b9a: \u6298\u308a\u305f\u305f\u307f\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8a2d\u5b9a\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff1a</li> <li><code>Value Event Type</code>: <code>ValueAssign</code> \u3068 <code>ValueChanged</code> \u3092\u9078\u629e\u3059\u308b\u305f\u3081\u306e\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u3002</li> <li><code>Auto Reset Value</code>: \u518d\u751f\u30e2\u30fc\u30c9\u7d42\u4e86\u6642\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306e\u81ea\u52d5\u30ea\u30bb\u30c3\u30c8\u3092\u6709\u52b9/\u7121\u52b9\u306b\u3059\u308b\u305f\u3081\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3002</li> </ul>"},{"location":"ja/features/collection/#_8","title":"\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u7834\u68c4","text":"<p><code>SoarCore</code> \u306e\u6d3e\u751f\u30af\u30e9\u30b9\u3068\u3057\u3066\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u7ba1\u7406\u3055\u308c\u305f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u5f93\u3044\u307e\u3059\uff1a</p> <ul> <li>\u521d\u671f\u5316: \u30b2\u30fc\u30e0\u958b\u59cb\u6642\u307e\u305f\u306f\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u5f8c\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u73fe\u5728\u306e\u72b6\u614b\u304c\u521d\u671f\u5024\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002</li> <li>\u30ea\u30bb\u30c3\u30c8: <code>autoResetValue</code> \u304c <code>true</code> \u306e\u5834\u5408\u3001\u518d\u751f\u30e2\u30fc\u30c9\u304c\u7d42\u4e86\u3059\u308b\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u3053\u306e\u521d\u671f\u72b6\u614b\u306b\u623b\u308a\u307e\u3059\u3002<code>ResetValues()</code> \u30e1\u30bd\u30c3\u30c9\u306f\u3044\u3064\u3067\u3082\u624b\u52d5\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</li> <li>\u7834\u68c4: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3059\u308b\u3068 <code>Dispose()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u81ea\u52d5\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u3001\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u9632\u3050\u305f\u3081\u306b\u3059\u3079\u3066\u306e\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u304c\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/collection/#_9","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>The Collection \u30b5\u30f3\u30d7\u30eb\u306f\u3001<code>SoarList&lt;int&gt;</code> \u3092\u4f7f\u7528\u3057\u3066\u52d5\u7684\u306a UI \u3092\u99c6\u52d5\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\u5225\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u30d3\u30e5\u30fc\u3092\u81ea\u52d5\u7684\u306b\u66f4\u65b0\u3059\u308b\u305f\u3081\u306b\u3001\u8ffd\u52a0\u3001\u524a\u9664\u3001\u304a\u3088\u3073\u5024\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>CollectionSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/collection/#_10","title":"\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8","text":""},{"location":"ja/features/collection/#indexvaluepairt","title":"<code>IndexValuePair&lt;T&gt;</code>","text":"<p>\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u306e\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u5024\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\u3002\u3053\u308c\u306f <code>SoarList&lt;T&gt;</code> \u306e <code>SubscribeToValues</code> \u304a\u3088\u3073 <code>ObserveInsert</code> \u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/collection/#movedvaluedtot","title":"<code>MovedValueDto&lt;T&gt;</code>","text":"<p><code>SoarList&lt;T&gt;</code> \u5185\u3067\u79fb\u52d5\u3055\u308c\u305f\u8981\u7d20\u306e\u5024\u3001\u53e4\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3001\u304a\u3088\u3073\u65b0\u3057\u3044\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\u3002\u3053\u308c\u306f <code>SoarList&lt;T&gt;</code> \u306e <code>SubscribeOnMove</code> \u304a\u3088\u3073 <code>ObserveMove</code> \u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/command/","title":"Command","text":"<p>\u30b3\u30de\u30f3\u30c9\u30d1\u30bf\u30fc\u30f3\u306e\u5b9f\u88c5\u3067\u3042\u308b SOAR \u306e <code>Command</code> \u30af\u30e9\u30b9\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u3084\u64cd\u4f5c\u3092 ScriptableObject \u3068\u3057\u3066\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u30a8\u30c7\u30a3\u30bf\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3001UI \u30a4\u30d9\u30f3\u30c8\u3001\u307e\u305f\u306f\u4ed6\u306e\u30b2\u30fc\u30e0\u30ed\u30b8\u30c3\u30af\u306a\u3069\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3055\u307e\u3056\u307e\u306a\u90e8\u5206\u304b\u3089\u30c8\u30ea\u30ac\u30fc\u3067\u304d\u308b\u518d\u5229\u7528\u53ef\u80fd\u306a\u64cd\u4f5c\u3092\u5b9a\u7fa9\u3067\u304d\u3001\u758e\u7d50\u5408\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4fc3\u9032\u3057\u307e\u3059\u3002 \u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u30ed\u30ae\u30f3\u30b0\u306a\u3069\u306e\u4e00\u65b9\u5411\u306e\u5b9f\u884c\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> <p><code>Command</code> \u306f <code>SoarCore</code> \u3092\u7d99\u627f\u3057\u3001\u30a8\u30c7\u30a3\u30bf\u30fc\u7d71\u5408\u3084\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u306e\u51e6\u7406\u306a\u3069\u3001\u305d\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u7ba1\u7406\u6a5f\u80fd\u3092\u5229\u7528\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/command/#_1","title":"\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8","text":""},{"location":"ja/features/command/#_2","title":"\u540c\u671f\u5b9f\u884c","text":"<p>\u30b3\u30de\u30f3\u30c9\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u4e3b\u306a\u65b9\u6cd5\u306f\u3001\u305d\u306e <code>Execute()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u304c\u8868\u3059\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30ed\u30b8\u30c3\u30af\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// \u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30de\u30f3\u30c9\u306e\u4f8b\n// File: MySimpleCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MySimpleCommand\", menuName = MenuHelper.DefaultCommandMenu + \"My Simple Command\")]\npublic class MySimpleCommand : Command\n{\n    public override void Execute()\n    {\n        Debug.Log(\"MySimpleCommand Executed!\");\n    }\n}\n</code></pre> <p>\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\uff1a</p> <ol> <li><code>Assets/Create/SOAR/Commands/My Simple Command</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089 <code>MySimpleCommand</code> \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</li> <li>\u3053\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30b9\u30af\u30ea\u30d7\u30c8\u307e\u305f\u306f UI \u30a4\u30d9\u30f3\u30c8\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002</li> <li><code>mySimpleCommandInstance.Execute()</code> \u3092\u547c\u3073\u51fa\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002</li> </ol>"},{"location":"ja/features/command/#_3","title":"\u975e\u540c\u671f\u5b9f\u884c","text":"<p>\u30b3\u30de\u30f3\u30c9\u306f <code>ExecuteAsync()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4ecb\u3057\u305f\u975e\u540c\u671f\u5b9f\u884c\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u6642\u9593\u304c\u304b\u304b\u308a\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u3079\u304d\u3067\u306a\u3044\u64cd\u4f5c\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> <p>\u52b9\u7387\u7684\u306a\u975e\u540c\u671f\u64cd\u4f5c\u306e\u305f\u3081\u306b <code>ValueTask</code> \u3092\u8fd4\u3057\u307e\u3059\u3002 \u30ad\u30e3\u30f3\u30bb\u30eb\u3092\u53ef\u80fd\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306e <code>CancellationToken</code> \u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002 \u63d0\u4f9b\u3055\u308c\u305f <code>CancellationToken</code> \u3092 <code>Application.exitCancellationToken</code> \u3068\u81ea\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3057\u305f\u5834\u5408\u306b\u975e\u540c\u671f\u64cd\u4f5c\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001<code>ExecuteAsync()</code> \u306f\u5358\u306b\u540c\u671f <code>Execute()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u5b8c\u4e86\u3057\u305f <code>ValueTask</code> \u3092\u8fd4\u3057\u307e\u3059\u3002 \u771f\u306e\u975e\u540c\u671f\u52d5\u4f5c\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u3001\u6d3e\u751f\u30af\u30e9\u30b9\u3067 <code>ExecuteAsync()</code> \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002</p> <pre><code>// \u975e\u540c\u671f\u30b3\u30de\u30f3\u30c9\u306e\u4f8b\n// File: MyAsyncCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyAsyncCommand\", menuName = MenuHelper.DefaultCommandMenu + \"My Async Command\")]\npublic class MyAsyncCommand : Command\n{\n    public override void Execute()\n    {\n        // \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u540c\u671f\u5b9f\u884c\u306e\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\n        Debug.Log(\"MyAsyncCommand Executed (synchronously).\");\n    }\n\n    public override async ValueTask ExecuteAsync(CancellationToken cancellationToken = default)\n    {\n        // Application.exitCancellationToken \u3068\u306e\u30ea\u30f3\u30af\u306f\u57fa\u672c\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u51e6\u7406\u3055\u308c\u307e\u3059\n        Debug.Log(\"MyAsyncCommand Started (asynchronously)...\");\n        try\n        {\n            await Task.Delay(2000, cancellationToken); // \u975e\u540c\u671f\u4f5c\u696d\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            Debug.Log(\"MyAsyncCommand Finished (asynchronously).\");\n        }\n        catch (System.OperationCanceledException)\n        {\n            Debug.Log(\"MyAsyncCommand was cancelled.\");\n        }\n    }\n}\n</code></pre>"},{"location":"ja/features/command/#_4","title":"\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304d\u30b3\u30de\u30f3\u30c9","text":"<p>\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5fc5\u8981\u3068\u3059\u308b\u30b3\u30de\u30f3\u30c9\u306b\u306f\u3001\u30b8\u30a7\u30cd\u30ea\u30c3\u30af <code>Command&lt;T&gt;</code> \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>// \u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304d\u30b3\u30de\u30f3\u30c9\u306e\u4f8b\n// File: LogMessageCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"LogMessageCommand\", menuName = MenuHelper.DefaultCommandMenu + \"Log Message Command\")]\npublic class LogMessageCommand : Command&lt;string&gt;\n{\n    public override void Execute(string message)\n    {\n        Debug.Log($\"Message: {message}\");\n    }\n\n    // \u5fc5\u8981\u306b\u5fdc\u3058\u3066 ExecuteAsync(T param, CancellationToken cancellationToken) \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n    // \u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304d\u306e\u7279\u5b9a\u306e\u975e\u540c\u671f\u52d5\u4f5c\u304c\u5fc5\u8981\u306a\u5834\u5408\u3002\n    // \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Execute(param) \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n}\n</code></pre> <p>\u3053\u308c\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\uff1a</p> <pre><code>// \u4ed6\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\npublic LogMessageCommand logCommand;\npublic string messageToLog = \"Hello from Command!\";\n\nvoid Start()\n{\n    if (logCommand != null)\n    {\n        logCommand.Execute(messageToLog);\n    }\n}\n</code></pre> <p><code>Command&lt;T&gt;</code> \u306e\u975e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af <code>Execute()</code> \u30e1\u30bd\u30c3\u30c9\u306f <code>Execute(default(T))</code> \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/command/#_5","title":"\u30a8\u30c7\u30a3\u30bf\u7d71\u5408","text":"<p><code>Command</code>\uff08\u307e\u305f\u306f\u305d\u3053\u304b\u3089\u6d3e\u751f\u3057\u305f\u30af\u30e9\u30b9\uff09\u304c Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u9078\u629e\u3055\u308c\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u300cExecute\u300d\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002 \u305d\u308c\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u9078\u629e\u3057\u305f <code>Command</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e <code>Execute()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</p> <p> </p> <p>\u30a8\u30c7\u30a3\u30bf\u5b9f\u884c</p> <p>\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306e\u300cExecute\u300d\u30dc\u30bf\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u518d\u751f\u30e2\u30fc\u30c9\u3068\u7de8\u96c6\u30e2\u30fc\u30c9\u306e\u4e21\u65b9\u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002<code>Execute()</code> \u30e1\u30bd\u30c3\u30c9\u5185\u306e\u30b3\u30fc\u30c9\u304c\u7de8\u96c6\u30e2\u30fc\u30c9\u3067\u5b89\u5168\u306b\u5b9f\u884c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3084\u30b7\u30fc\u30f3\u306e\u72b6\u614b\u306b\u6c38\u7d9a\u7684\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/command/#_6","title":"\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u7834\u68c4","text":"<p><code>Command</code> \u306f <code>SoarCore</code> \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u305f\u3081\u3001SOAR \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u53c2\u52a0\u3057\u307e\u3059\u3002\u30b3\u30de\u30f3\u30c9\u304c\u30ea\u30bd\u30fc\u30b9\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001<code>Dispose()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001<code>Command</code> \u306e <code>Dispose()</code> \u30e1\u30bd\u30c3\u30c9\u306f\u7a7a\u3067\u3059\u3002</p> <pre><code>// File: MyResourcefulCommand.cs\nusing Soar;\nusing Soar.Commands;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyResourcefulCommand\", menuName = MenuHelper.DefaultCommandMenu + \"My Resourceful Command\")]\npublic class MyResourcefulCommand : Command\n{\n    private System.IO.StreamWriter _writer;\n\n    public override void Execute()\n    {\n        _writer = new System.IO.StreamWriter(\"my_command_log.txt\", append: true);\n        _writer.WriteLine($\"Command executed at {System.DateTime.Now}\");\n        Debug.Log(\"MyResourcefulCommand Executed and wrote to log.\");\n    }\n\n    public override void Dispose()\n    {\n        _writer?.Dispose();\n        _writer = null;\n        Debug.Log(\"MyResourcefulCommand Disposed.\");\n        base.Dispose(); // SoarCore \u306e Dispose \u306b\u30ed\u30b8\u30c3\u30af\u304c\u3042\u308b\u5834\u5408\u306f base \u3092\u547c\u3073\u51fa\u3059\n    }\n}\n</code></pre>"},{"location":"ja/features/command/#_7","title":"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9","text":"<p>\u30b3\u30de\u30f3\u30c9\u306f\u6c4e\u7528\u6027\u304c\u3042\u308a\u3001\u30b3\u30fc\u30c9\u306e\u6574\u7406\u3068\u518d\u5229\u7528\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b\u591a\u304f\u306e\u30b7\u30ca\u30ea\u30aa\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002 \u4ee5\u4e0b\u306b\u3001\u30b3\u30de\u30f3\u30c9\u3092\u6d3b\u7528\u3067\u304d\u308b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3092\u3044\u304f\u3064\u304b\u793a\u3057\u307e\u3059\uff1a</p> <ul> <li> <p><code>SubmitFormCommand&lt;FormData&gt;</code>:   \u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u30b3\u30de\u30f3\u30c9\u3002   \u5165\u529b\u3092\u691c\u8a3c\u3057\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d3\u30b9\u306b\u9001\u4fe1\u3057\u305f\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b2\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002</p> </li> <li> <p><code>SaveGameCommand</code>:   \u81ea\u52d5\u4fdd\u5b58\u30bf\u30a4\u30de\u30fc\u3001\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3001\u307e\u305f\u306f\u30ec\u30d9\u30eb\u306e\u79fb\u884c\u306b\u3088\u3063\u3066\u958b\u59cb\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u306b\u95a2\u4fc2\u306a\u304f\u3001\u30b2\u30fc\u30e0\u306e\u4fdd\u5b58\u30d7\u30ed\u30bb\u30b9\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u4e00\u8cab\u3057\u305f\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002   \u30b3\u30de\u30f3\u30c9\u81ea\u4f53\u304c\u4fdd\u5b58/\u8aad\u307f\u8fbc\u307f\u30b7\u30b9\u30c6\u30e0\u3068\u5bfe\u8a71\u3057\u307e\u3059\u3002</p> </li> <li> <p><code>AnalyticsEventCommand&lt;AnalyticsData&gt;</code>:   \u5206\u6790\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u4fe1\u3059\u308b\u305f\u3081\u306e\u6c4e\u7528\u30b3\u30de\u30f3\u30c9\u3002   \u30b2\u30fc\u30e0\u306e\u3055\u307e\u3056\u307e\u306a\u90e8\u5206\u304c\u3001\u5206\u6790 SDK \u306e\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u77e5\u308b\u5fc5\u8981\u306a\u304f\u3001\u7279\u5b9a\u306e <code>AnalyticsData</code>\uff08\u30ec\u30d9\u30eb\u5b8c\u4e86\u3001\u30a2\u30a4\u30c6\u30e0\u8cfc\u5165\u306a\u3069\uff09\u3067\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> </li> <li> <p>\u30a8\u30c7\u30a3\u30bf\u30fc\u304b\u3089\u306e\u7279\u5b9a\u306e\u6a5f\u80fd\u306e\u30c7\u30d0\u30c3\u30b0\u3068\u30c6\u30b9\u30c8\uff1a   \u300c\u30a8\u30c7\u30a3\u30bf\u30fc\u7d71\u5408\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u793a\u3057\u305f\u3088\u3046\u306b\u3001\u4efb\u610f\u306e <code>Command</code> \u306f\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u304b\u3089\u76f4\u63a5\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002   \u3053\u308c\u306f\u3001\u30b2\u30fc\u30e0\u30b7\u30fc\u30b1\u30f3\u30b9\u5168\u4f53\u3092\u518d\u751f\u3059\u308b\u5fc5\u8981\u306a\u304f\u3001\u5206\u96e2\u3055\u308c\u305f\u30ed\u30b8\u30c3\u30af\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u975e\u5e38\u306b\u8cb4\u91cd\u3067\u3059\u3002</p> </li> </ul> <p>\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u5fc3\u306e\u5206\u96e2\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002 \u30b3\u30de\u30f3\u30c9\u306e\u547c\u3073\u51fa\u3057\u5143\u306f\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u3069\u306e\u3088\u3046\u306b\u5b9f\u884c\u3055\u308c\u308b\u304b\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u3069\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u304b\u3060\u3051\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u304c\u3088\u308a\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3001\u7406\u89e3\u3057\u3084\u3059\u304f\u306a\u308a\u3001\u4fdd\u5b88\u3068\u62e1\u5f35\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/command/#_8","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u304a\u3088\u3073\u578b\u4ed8\u304d\u306e <code>Command</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8a18\u9332\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002 \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306e <code>UnityEvent</code> \u304b\u3089\u76f4\u63a5\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>CommandSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/game-event/","title":"GameEvent","text":"<p><code>GameEvent</code> \u306f\u3001SOAR \u306e\u30b3\u30a2\u6a5f\u80fd\u3067\u3042\u308a\u3001<code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002 \u30a4\u30d9\u30f3\u30c8\u306f\u3001\u7279\u5b9a\u306e\u5fdc\u7b54\u3092\u5fc5\u8981\u3068\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u5185\u306e\u767a\u751f\u4e8b\u3092\u8868\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7570\u306a\u308b\u90e8\u5206\u9593\u3067\u758e\u7d50\u5408\u306a\u901a\u4fe1\u304c\u53ef\u80fd\u306b\u306a\u308a\u3001\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\uff08raise\uff09\u3055\u308c\u3001\u4ed6\u306e\u8907\u6570\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u76f4\u63a5\u306e\u53c2\u7167\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b\u305d\u308c\u3092\u30ea\u30c3\u30b9\u30f3\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/features/game-event/#gameevent_1","title":"<code>GameEvent</code> (\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057)","text":"<p>\u30d9\u30fc\u30b9\u306e <code>GameEvent</code> \u306f\u3001\u30c7\u30fc\u30bf\u3092\u904b\u3070\u306a\u3044\u30a4\u30d9\u30f3\u30c8\u3092\u8868\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/game-event/#gameevent_2","title":"GameEvent \u306e\u4f5c\u6210","text":"<p><code>Assets &gt; Create &gt; SOAR &gt; Game Events &gt; GameEvent</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089 <code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"ja/features/game-event/#gameevent_3","title":"\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u306e GameEvent \u306e\u767a\u884c","text":"<p>\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u306b\u306f\u3001<code>GameEvent</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e <code>Raise()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002 \u3059\u3079\u3066\u306e\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u901a\u77e5\u3055\u308c\u307e\u3059\u3002</p> <pre><code>// File: GameEventPublisherExample.cs\nusing Soar.Events;\nusing UnityEngine;\n\npublic class GameEventPublisherExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            gameEvent.Raise();\n            Debug.Log($\"Game Event {gameEvent.name} Raised.\");\n        }\n    }\n}\n</code></pre>"},{"location":"ja/features/game-event/#gameevent_4","title":"\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u306e GameEvent \u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6","text":"<p>\u30a4\u30d9\u30f3\u30c8\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u306b\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b <code>Action</code> \u3092\u6307\u5b9a\u3057\u3066 <code>Subscribe()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002 <code>Subscribe</code> \u30e1\u30bd\u30c3\u30c9\u306f <code>IDisposable</code> \u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30ea\u30b9\u30ca\u30fc\u304c\u30a4\u30d9\u30f3\u30c8\u306e\u53d7\u4fe1\u3092\u4e0d\u8981\u306b\u306a\u3063\u305f\u3068\u304d\uff08\u4f8b\uff1a<code>OnDestroy</code> \u307e\u305f\u306f <code>OnDisable</code> \u5185\uff09\u306b\u7834\u68c4\uff08dispose\uff09\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: GameEventSubscriberExample.cs\nusing System;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class GameEventSubscriberExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private IDisposable subscription;\n\n    private void Start()\n    {\n        subscription = gameEvent.Subscribe(OnGameEventRaised);\n    }\n\n    private void OnGameEventRaised()\n    {\n        Debug.Log($\"Game Event {gameEvent.name} Received.\");\n    }\n\n    private void OnDestroy()\n    {\n        subscription?.Dispose();\n    }\n}\n</code></pre>"},{"location":"ja/features/game-event/#gameeventt","title":"<code>GameEvent&lt;T&gt;</code> (\u30c7\u30fc\u30bf\u4ed8\u304d)","text":"<p>\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30af\u30e9\u30b9 <code>GameEvent&lt;T&gt;</code> \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u7279\u5b9a\u306e\u578b <code>T</code> \u306e\u30c7\u30fc\u30bf\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u904b\u3076\u30a4\u30d9\u30f3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/features/game-event/#gameevent_5","title":"\u578b\u4ed8\u304d GameEvent \u306e\u4f5c\u6210","text":"<p>SOAR \u306f\u3001\u4e00\u822c\u7684\u306a\u578b\u4ed8\u304d <code>GameEvent</code>\uff08\u4f8b\uff1a<code>IntGameEvent</code>\u3001<code>StringGameEvent</code>\uff09\u3092\u3044\u304f\u3064\u304b\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001\u3053\u308c\u3089\u306f\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 \u30ab\u30b9\u30bf\u30e0\u306e\u578b\u4ed8\u304d <code>GameEvent</code> \u306f\u3001<code>GameEvent&lt;T&gt;</code> \u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>// File: MyCustomDataGameEvent.cs\nusing System;\nusing Soar;\nusing Soar.Events;\nusing UnityEngine;\n\n// \u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\n[Serializable]\npublic struct MyCustomData\n{\n    public int id;\n    public string message;\n}\n\n// MyCustomData \u7528\u306e\u65b0\u3057\u3044 GameEvent \u30a2\u30bb\u30c3\u30c8\u30bf\u30a4\u30d7\u3092\u4f5c\u6210\n[CreateAssetMenu(fileName = \"MyCustomDataGameEvent\", menuName = MenuHelper.DefaultGameEventMenu + \"My Custom Data GameEvent\")]\npublic class MyCustomDataGameEvent : GameEvent&lt;MyCustomData&gt; { }\n</code></pre> <p>\u305d\u306e\u5f8c\u3001<code>Create &gt; SOAR &gt; Game Events &gt; My Custom Data GameEvent</code> \u304b\u3089\u3053\u306e\u30bf\u30a4\u30d7\u306e\u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/features/game-event/#_1","title":"\u578b\u4ed8\u304d\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u884c","text":"<p>\u30c7\u30fc\u30bf\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u3066 <code>Raise(T value)</code> \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</p> <pre><code>// File: MyCustomDataGameEvent.cs\nusing UnityEngine;\n\npublic class MyTypedPublisher : MonoBehaviour\n{\n    [SerializeField] private MyCustomDataGameEvent onDataPublished;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            var data = new MyCustomData { id = 1, message = \"Hello World\" };\n            onDataPublished.Raise(data);\n        }\n    }\n}\n</code></pre>"},{"location":"ja/features/game-event/#_2","title":"\u578b\u4ed8\u304d\u30a4\u30d9\u30f3\u30c8\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6","text":"<p>\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306b <code>Action&lt;T&gt;</code> \u3067\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3057\u307e\u3059\u3002</p> <pre><code>// File: MyTypedSubscriber.cs\nusing System;\nusing UnityEngine;\n\npublic class MyTypedSubscriber : MonoBehaviour\n{\n    [SerializeField] private MyCustomDataGameEvent gameEvent;\n\n    private IDisposable subscription;\n\n    private void Start()\n    {\n        subscription = gameEvent.Subscribe(HandlePublishedData);\n    }\n\n    private void HandlePublishedData(MyCustomData data)\n    {\n        Debug.Log($\"Data received: ID={data.id}, Message='{data.message}'\");\n    }\n\n    private void OnDestroy()\n    {\n        subscription?.Dispose();\n    }\n}\n</code></pre> <p><code>GameEvent&lt;T&gt;</code> \u306b\u306f\u3001\u6700\u5f8c\u306b\u767a\u884c\u3055\u308c\u305f\u5024\u3092\u683c\u7d0d\u3059\u308b <code>value</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u5024\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3059\u308b\u3068\u304d\u3001\u307e\u305f\u306f\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u304c\u7121\u52b9\u306b\u3055\u308c\u3066\u518d\u751f\u30e2\u30fc\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b <code>default(T)</code> \u306b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/game-event/#r3","title":"R3 \u3068\u306e\u9023\u643a","text":"<p>R3 \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001<code>GameEvent</code> \u306f\u5f37\u529b\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u304a\u3088\u3073\u975e\u540c\u671f\u6a5f\u80fd\u3067\u5f37\u5316\u3055\u308c\u307e\u3059\u3002</p> <ul> <li><code>AsObservable()</code>: \u30a4\u30d9\u30f3\u30c8\u3092 R3 \u306e <code>Observable</code> \u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002<ul> <li>\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u306e <code>GameEvent</code> \u306e\u5834\u5408\u3001<code>Observable&lt;Unit&gt;</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</li> <li><code>GameEvent&lt;T&gt;</code> \u306e\u5834\u5408\u3001<code>Observable&lt;T&gt;</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</li> </ul> </li> <li><code>AsUnitObservable()</code>: <code>GameEvent&lt;T&gt;</code> \u306b\u56fa\u6709\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u305f\u3053\u3068\u3060\u3051\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u306a <code>Observable&lt;Unit&gt;</code> \u3092\u8fd4\u3057\u307e\u3059\u3002</li> <li><code>EventAsync()</code>: \u6b21\u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u5b8c\u4e86\u3059\u308b <code>ValueTask</code>\uff08\u307e\u305f\u306f <code>ValueTask&lt;T&gt;</code>\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002</li> <li><code>ToAsyncEnumerable()</code>: \u30a4\u30d9\u30f3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u3092 <code>IAsyncEnumerable&lt;T&gt;</code> \u306b\u5909\u63db\u3057\u3001<code>await foreach</code> \u30eb\u30fc\u30d7\u3067\u6d88\u8cbb\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/game-event/#_3","title":"\u4f8b","text":"<p><code>GameEvent&lt;T&gt;</code> \u3067 <code>AsObservable</code> \u3092\u4f7f\u7528\u3059\u308b: <pre><code>using R3;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class EventLogger : MonoBehaviour\n{\n    [SerializeField] private StringGameEvent onImportantEvent;\n\n    void Start()\n    {\n        onImportantEvent.AsObservable()\n            .Subscribe(message =&gt; Debug.Log($\"Event received: {message}\"))\n            .AddTo(this);\n    }\n}\n</code></pre></p> <p>GameEvent \u3092\u5f85\u6a5f\u3059\u308b: <pre><code>using Soar.Events;\nusing UnityEngine;\n\npublic class LevelManager : MonoBehaviour\n{\n    [SerializeField] private GameEvent onPlayerReady;\n\n    private async void Start()\n    {\n        Debug.Log(\"Waiting for player to be ready...\");\n        await onPlayerReady.EventAsync();\n        Debug.Log(\"Player is ready! Starting level.\");\n    }\n}\n</code></pre></p>"},{"location":"ja/features/game-event/#_4","title":"\u30a8\u30c7\u30a3\u30bf\u7d71\u5408","text":"<p><code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u306b\u306f\u3001\u30ab\u30b9\u30bf\u30e0\u30a8\u30c7\u30a3\u30bf\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li> <p>Raise \u30dc\u30bf\u30f3: \u3059\u3079\u3066\u306e <code>GameEvent</code> \u306e\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u3067\u300cRaise\u300d\u30dc\u30bf\u30f3\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u306e <code>Raise()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u7de8\u96c6\u30e2\u30fc\u30c9\u3068\u518d\u751f\u30e2\u30fc\u30c9\u306e\u4e21\u65b9\u3067\u30a4\u30d9\u30f3\u30c8\u5fdc\u7b54\u306e\u30c7\u30d0\u30c3\u30b0\u3068\u30c6\u30b9\u30c8\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> </li> <li> <p>\u5024\u306e\u8868\u793a (<code>GameEvent&lt;T&gt;</code> \u306e\u5834\u5408): \u578b\u4ed8\u304d\u306e <code>GameEvent&lt;T&gt;</code> \u306e\u5834\u5408\u3001\u73fe\u5728\u306e <code>value</code>\uff08\u307e\u305f\u306f\u8907\u96d1\u306a\u578b\u306e\u5834\u5408\u306f\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\uff09\u304c\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u65b0\u3057\u3044\u5024\u3092\u6307\u5b9a\u305b\u305a\u306b\u300cRaise\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u5834\u5408\u306b\u767a\u884c\u3055\u308c\u308b\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3057\u305f\u308a\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u5909\u66f4\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002</p> </li> </ul>"},{"location":"ja/features/game-event/#_5","title":"\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u7834\u68c4","text":"<p><code>GameEvent</code> \u306f <code>ScriptableObject</code> \u3067\u3042\u308a\u3001<code>IDisposable</code> \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u5185\u90e8\u3067\u7ba1\u7406\u3055\u308c\u307e\u3059\u3002<code>GameEvent</code> \u304c\u7834\u68c4\u3055\u308c\u308b\u3068\uff08\u901a\u5e38\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306b <code>SoarCore</code> \u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306e\u4e00\u90e8\u3068\u3057\u3066\u884c\u308f\u308c\u307e\u3059\uff09\u3001\u305d\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3002</li> <li>\u72ec\u7acb\u3057\u305f\u5b9f\u88c5\uff08<code>SOAR_R3</code> \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\uff09\u3067\u306f\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u30ea\u30b9\u30c8\u306b\u683c\u7d0d\u3055\u308c\u3001\u7834\u68c4\u3055\u308c\u307e\u3059\u3002</li> <li><code>SOAR_R3</code> \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001<code>GameEvent</code> \u306f\u5185\u90e8\u3067 R3 \u306e <code>Subject</code> \u3092\u4f7f\u7528\u3057\u3001<code>Subject</code> \u3092\u7834\u68c4\u3059\u308b\u3053\u3068\u3067\u7834\u68c4\u304c\u51e6\u7406\u3055\u308c\u307e\u3059\u3002</li> <li><code>SoarCore</code> \u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306f\u3001\u521d\u671f\u5316\u3068\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3092\u51e6\u7406\u3057\u3001<code>OnQuit</code> \u4e2d\u306b <code>Dispose()</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u542b\u307f\u307e\u3059\u3002\u307e\u305f\u3001Unity \u306e\u300cEnter Play Mode Options\u300d\uff08\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u306e\u7121\u52b9\u5316\u306a\u3069\uff09\u306b\u95a2\u9023\u3059\u308b\u52d5\u4f5c\u3082\u7ba1\u7406\u3057\u307e\u3059\u3002</li> </ul> <p>\u3053\u308c\u306b\u3088\u308a\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u6b63\u3057\u304f\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3055\u308c\u3001\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u304c\u7834\u68c4\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u64cd\u4f5c\u3057\u3088\u3046\u3068\u3057\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/game-event/#_6","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>The GameEvent \u30b5\u30f3\u30d7\u30eb\u306f\u3001UI \u30dc\u30bf\u30f3\u304c <code>GameEvent</code> \u3092\u767a\u884c\u3057\u3066\u3001\u76f4\u63a5\u306e\u53c2\u7167\u306a\u3057\u306b\u30ea\u30b9\u30ca\u30fc\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u901a\u4fe1\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\u30ea\u30b9\u30ca\u30fc\u306f\u3001\u5fdc\u7b54\u3068\u3057\u3066 UI \u30c6\u30ad\u30b9\u30c8\u8981\u7d20\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>GameEventSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/game-event/#_7","title":"\u7279\u5225\u306a\u30b2\u30fc\u30e0\u30a4\u30d9\u30f3\u30c8","text":""},{"location":"ja/features/game-event/#boolgameevent","title":"<code>BoolGameEvent</code>","text":"<p><code>BoolGameEvent</code> \u306b\u306f <code>RaiseToggled()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001\u73fe\u5728\u306e\u5024\u306e\u53cd\u5bfe\u3067\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u307e\u3059\u3002</p>"},{"location":"ja/features/jsonable-extension/","title":"Jsonable \u62e1\u5f35","text":"<p>SOAR \u306b\u306f\u3001<code>Variable</code> \u30a2\u30bb\u30c3\u30c8\u3092 JSON \u5f62\u5f0f\u3068\u306e\u9593\u3067\u30b7\u30ea\u30a2\u30eb\u5316\u304a\u3088\u3073\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3067\u304d\u308b\u5f37\u529b\u306a\u300cJsonable \u62e1\u5f35\u300d\u6a5f\u80fd\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30b2\u30fc\u30e0\u30c7\u30fc\u30bf\u3084\u521d\u671f\u8a2d\u5b9a\u306e\u4fdd\u5b58\u3068\u8aad\u307f\u8fbc\u307f\u306b\u7279\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 \u3053\u306e\u6a5f\u80fd\u306f\u3001<code>JsonableVariable&lt;T&gt;</code> \u57fa\u672c\u30af\u30e9\u30b9\u3068\u30ab\u30b9\u30bf\u30e0\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u4ecb\u3057\u3066\u516c\u958b\u3055\u308c\u3066\u304a\u308a\u3001\u5909\u6570\u306e\u30c7\u30fc\u30bf\u3092 JSON \u6587\u5b57\u5217\u307e\u305f\u306f\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/jsonable-extension/#_1","title":"\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8","text":""},{"location":"ja/features/jsonable-extension/#ijsonable","title":"<code>IJsonable</code> \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9","text":"<p><code>IJsonable</code> \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u3001JSON \u6587\u5b57\u5217\u3068\u306e\u9593\u3067\u5909\u63db\u3067\u304d\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u898f\u7d04\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u306f2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li><code>ToJsonString()</code>: \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30fc\u30bf\u3092 JSON \u5f62\u5f0f\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002</li> <li><code>FromJsonString(string jsonString)</code>: JSON \u5f62\u5f0f\u306e\u6587\u5b57\u5217\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/jsonable-extension/#jsonablevariablet","title":"<code>JsonableVariable&lt;T&gt;</code>","text":"<p><code>JsonableVariable&lt;T&gt;</code> \u306f\u3001<code>Variable&lt;T&gt;</code> \u3092\u7d99\u627f\u3057\u3001<code>IJsonable</code> \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u3059\u3002JSON \u306b\u4fdd\u5b58\u307e\u305f\u306f JSON \u304b\u3089\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b <code>Variable</code> \u306f\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u5834\u5408\u3001<code>JsonableVariable&lt;T&gt;</code> \u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\uff08<code>int</code>\u3001<code>float</code>\u3001<code>string</code> \u306a\u3069\uff09\u3092 <code>JsonableWrapper&lt;T&gt;</code> \u3067\u30e9\u30c3\u30d7\u3057\u3066\u3001JSON \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6b63\u3057\u304f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff08\u4f8b\uff1a<code>{\"value\": 10}</code>\uff09\u3002\u8907\u96d1\u306a <code>[Serializable]</code> \u578b\u306f\u76f4\u63a5\u30b7\u30ea\u30a2\u30eb\u5316\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/jsonable-extension/#jsonablevariable","title":"<code>JsonableVariable</code> \u306e\u4f5c\u6210","text":"<p>\u30ab\u30b9\u30bf\u30e0 <code>Variable</code> \u3092 jsonable \u306b\u3059\u308b\u306b\u306f\u3001<code>Variable&lt;T&gt;</code> \u306e\u4ee3\u308f\u308a\u306b <code>JsonableVariable&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u3060\u3051\u3067\u3059\u3002</p> <ol> <li> <p>\u30c7\u30fc\u30bf\u578b\u306e\u5b9a\u7fa9: \u30c7\u30fc\u30bf\u578b\u304c <code>[Serializable]</code> \u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</p> <pre><code>// File: PlayerSettings.cs\nusing System;\n\n[Serializable]\npublic struct PlayerSettings\n{\n    public float musicVolume;\n    public float sfxVolume;\n    public bool showTutorials;\n}\n</code></pre> </li> <li> <p>JsonableVariable \u30af\u30e9\u30b9\u306e\u4f5c\u6210: <code>JsonableVariable&lt;T&gt;</code> \u3092\u7d99\u627f\u3057\u307e\u3059\u3002</p> <pre><code>// File: PlayerSettingsVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"PlayerSettingsVariable\", menuName = MenuHelper.DefaultVariableMenu + \"Player Settings Variable\")]\npublic class PlayerSettingsVariable : JsonableVariable&lt;PlayerSettings&gt; { }\n</code></pre> </li> </ol> <p>\u3053\u308c\u3067\u3001<code>PlayerSettingsVariable</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067 JSON \u30b7\u30ea\u30a2\u30eb\u5316\u6a5f\u80fd\u304c\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/jsonable-extension/#_2","title":"\u30a8\u30c7\u30a3\u30bf\u7d71\u5408","text":"<p><code>JsonableVariableEditor</code> \u306f\u3001<code>JsonableVariable&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u30a2\u30bb\u30c3\u30c8\u306b\u30ab\u30b9\u30bf\u30e0\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u6a19\u6e96\u306e <code>Variable</code> \u6a5f\u80fd\u306b\u52a0\u3048\u3066\u3001\u300cJson File Management\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p> <p></p> <p>\u3053\u306e UI \u3067\u306f\u3001\u6b21\u306e\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\uff1a</p> <ul> <li>\u4fdd\u5b58\u30d1\u30b9\u306e\u9078\u629e: Unity \u306e <code>Application.dataPath</code>\u3001<code>Application.persistentDataPath</code>\u3001\u307e\u305f\u306f\u30ab\u30b9\u30bf\u30e0\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304b\u3089\u9078\u629e\u3057\u307e\u3059\u3002</li> <li>\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6307\u5b9a: JSON \u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001<code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u306e\u540d\u524d\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\uff08\u4f8b\uff1a<code>PlayerSettingsVariable.json</code>\uff09\u3002</li> <li>JSON \u306b\u4fdd\u5b58: \u300cSave to Json\u300d\u30dc\u30bf\u30f3\u306f\u3001\u5909\u6570\u306e\u73fe\u5728\u306e <code>Value</code> \u3092\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002</li> <li>JSON \u304b\u3089\u8aad\u307f\u8fbc\u307f: \u300cLoad from Json\u300d\u30dc\u30bf\u30f3\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u53d6\u308a\u3001\u305d\u306e\u5185\u5bb9\u3092\u5909\u6570\u306e <code>Value</code> \u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/jsonable-extension/#jsonableextensions","title":"<code>JsonableExtensions</code>","text":"<p>SOAR \u306f\u3001<code>Soar.JsonableExtensions</code> \u30af\u30e9\u30b9\u306b\u4e00\u9023\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3082\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001\u30b3\u30fc\u30c9\u304b\u3089 <code>IJsonable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3088\u308a\u4fbf\u5229\u306b\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</p> <p>\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u3055\u307e\u3056\u307e\u306a\u30d1\u30b9\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u69cb\u6210\u3067 <code>IJsonable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\u304a\u3088\u3073\u8aad\u307f\u8fbc\u307f\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/features/jsonable-extension/#_3","title":"\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u4fdd\u5b58","text":"<p><code>IJsonable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u30b3\u30fc\u30c9\u304b\u3089\u76f4\u63a5 JSON \u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002</p> <pre><code>// File: SaveManager.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class SaveManager : MonoBehaviour\n{\n    [SerializeField] private PlayerSettingsVariable playerSettings;\n\n    public void SaveSettings()\n    {\n        // \"PlayerSettings.json\" \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067 Application.persistentDataPath \u306b\u4fdd\u5b58\n        playerSettings.SaveToJson(Application.persistentDataPath, \"PlayerSettings\");\n        Debug.Log(\"Player settings saved!\");\n    }\n}\n</code></pre>"},{"location":"ja/features/jsonable-extension/#_4","title":"\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f","text":"<p>\u540c\u69d8\u306b\u3001JSON \u30d5\u30a1\u30a4\u30eb\u304b\u3089 <code>IJsonable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>// File: LoadManager.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class LoadManager : MonoBehaviour\n{\n    [SerializeField] private PlayerSettingsVariable playerSettings;\n\n    void Start()\n    {\n        // Application.persistentDataPath \u304b\u3089\u8aad\u307f\u8fbc\u307f\n        if (playerSettings.IsJsonFileExist(Application.persistentDataPath, \"PlayerSettings\"))\n        {\n            playerSettings.LoadFromJson(Application.persistentDataPath, \"PlayerSettings\");\n            Debug.Log(\"Player settings loaded!\");\n        }\n        else\n        {\n            Debug.Log(\"No saved settings found. Using default values.\");\n        }\n    }\n}\n</code></pre> <p><code>JsonableExtensions</code> \u30af\u30e9\u30b9\u306b\u306f\u3001JSON \u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u3092\u78ba\u8a8d\u3059\u308b\u30e1\u30bd\u30c3\u30c9\uff08<code>IsJsonFileExist</code>\uff09\u3082\u542b\u307e\u308c\u3066\u304a\u308a\u3001SOAR \u5909\u6570\u3092\u4f7f\u7528\u3057\u305f\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u5b8c\u5168\u306a\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/jsonable-extension/#_5","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>The Jsonable \u30b5\u30f3\u30d7\u30eb\u306f\u3001\u8a2d\u5b9a\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0 <code>JsonableVariable</code> \u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\u5b9f\u884c\u6642\u306b\u30c7\u30fc\u30bf\u3092\u7de8\u96c6\u3059\u308b\u305f\u3081\u306e UI \u3068\u3001<code>JsonableExtensions</code> \u3092\u4f7f\u7528\u3057\u3066\u5909\u6570\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u304a\u3088\u3073\u5fa9\u5143\u3059\u308b\u30dc\u30bf\u30f3\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>JsonableSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/transaction/","title":"Transaction","text":"<p><code>Transaction</code> \u306f\u3001<code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u901a\u4fe1\u30d1\u30bf\u30fc\u30f3\u3092\u5bb9\u6613\u306b\u3059\u308b\u53cc\u65b9\u5411\u30a4\u30d9\u30f3\u30c8\u3067\u3059\u3002 \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u308b\u3068\u3001\u767b\u9332\u3055\u308c\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u304c\u305d\u308c\u3092\u51e6\u7406\u3057\u3001\u30ea\u30af\u30a8\u30b9\u30bf\u306b\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3084\u30e6\u30fc\u30b6\u30fc\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u691c\u8a3c\u306a\u3069\u3001\u78ba\u8a8d\u3084\u7d50\u679c\u304c\u5fc5\u8981\u306a\u64cd\u4f5c\u306b\u6700\u9069\u3067\u3059\u3002 \u4e00\u5ea6\u306b\u767b\u9332\u3067\u304d\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u306f1\u3064\u3060\u3051\u3067\u3059\u3002</p>"},{"location":"ja/features/transaction/#_1","title":"\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8","text":"<p><code>Transaction</code> \u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3001\u304a\u3088\u3073\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e3\u3064\u306e\u4e3b\u8981\u90e8\u5206\u304c\u542b\u307e\u308c\u307e\u3059\u3002</p> <ul> <li>\u30ea\u30af\u30a8\u30b9\u30c8: \u30b7\u30b9\u30c6\u30e0\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u306f\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5165\u529b\u30c7\u30fc\u30bf\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u73fe\u5728\u30ec\u30b9\u30dd\u30f3\u30c0\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u5229\u7528\u53ef\u80fd\u306b\u306a\u308b\u307e\u3067\u30ad\u30e5\u30fc\u306b\u5165\u308c\u3089\u308c\u307e\u3059\u3002</li> <li>\u30ec\u30b9\u30dd\u30f3\u30b9: \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3057\u3001\u540c\u671f\u307e\u305f\u306f\u975e\u540c\u671f\u306e\u7d50\u679c\u3092\u751f\u6210\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3002 \u4e00\u5ea6\u306b\u767b\u9332\u3067\u304d\u308b\u30ec\u30b9\u30dd\u30f3\u30c0\u306f1\u3064\u3060\u3051\u3067\u3001\u65b0\u3057\u3044\u30ec\u30b9\u30dd\u30f3\u30c0\u3092\u767b\u9332\u3059\u308b\u3068\u524d\u306e\u30ec\u30b9\u30dd\u30f3\u30c0\u304c\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\u3002 \u30ec\u30b9\u30dd\u30f3\u30c0\u304c\u767b\u9332\u3055\u308c\u308b\u3068\u3001\u30ad\u30e5\u30fc\u306b\u5165\u308c\u3089\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9806\u756a\u306b\u76f4\u3061\u306b\u51e6\u7406\u3057\u307e\u3059\u3002</li> <li>\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3: \u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u76f4\u63a5\u53c2\u52a0\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30ed\u30b8\u30c3\u30af\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u305f\u3081\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u305f\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u307e\u3059\u3002</li> </ul> <p>\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30bf\u3068\u30ec\u30b9\u30dd\u30f3\u30c0\u304c\u758e\u7d50\u5408\u306b\u306a\u308a\u307e\u3059\u3002 \u901a\u4fe1\u3059\u308b\u306b\u306f\u3001<code>Transaction</code> \u30a2\u30bb\u30c3\u30c8\u3078\u306e\u5171\u6709\u53c2\u7167\u306e\u307f\u304c\u5fc5\u8981\u3067\u3059\u3002</p>"},{"location":"ja/features/transaction/#transaction_1","title":"<code>Transaction</code> (\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057)","text":"<p>\u57fa\u672c\u306e <code>Transaction</code> \u30af\u30e9\u30b9\u306f\u3001\u30c7\u30fc\u30bf\u4ea4\u63db\u3092\u4f34\u308f\u306a\u3044\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30bf\u304c\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u5b8c\u4e86\u3057\u305f\u3053\u3068\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u5358\u7d14\u306a\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p>"},{"location":"ja/features/transaction/#_2","title":"\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210","text":"<p>\u57fa\u672c\u306e <code>Transaction</code> \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Transactions &gt; Transaction</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u76f4\u63a5\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u3088\u308a\u5177\u4f53\u7684\u3067\u3001\u540d\u524d\u7a7a\u9593\u307e\u305f\u306f\u540d\u524d\u4ed8\u304d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u3001\u57fa\u672c\u306e <code>Transaction</code> \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>// File: MySimpleTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MySimpleTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"My Simple Transaction\")]\npublic class MySimpleTransaction : Transaction {}\n</code></pre>"},{"location":"ja/features/transaction/#_3","title":"\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u767b\u9332","text":"<p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u767b\u9332\u3055\u308c\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002 \u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30af\u30e9\u30b9\u5b9a\u7fa9\u5185\u3067\u5185\u90e8\u7684\u306b\u3001\u307e\u305f\u306f\u5225\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u5916\u90e8\u7684\u306b\u767b\u9332\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>\u5185\u90e8\u767b\u9332: <code>RegisterResponseInternal()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u7d99\u627f\u3059\u308b\u30af\u30e9\u30b9\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001\u305d\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002 \u3053\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u3001\u30a2\u30bb\u30c3\u30c8\u304c\u521d\u671f\u5316\u3055\u308c\u308b\u3068\u304d\u306b\u81ea\u52d5\u7684\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002</li> </ul> <pre><code>// File: MyInternallyHandledTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyInternallyHandledTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"My Internally Handled Transaction\")]\npublic class MyInternallyHandledTransaction : Transaction\n{\n    protected override void RegisterResponseInternal()\n    {\n        RegisterResponse(() =&gt; Debug.Log(\"Internal response executed!\"));\n    }\n}\n</code></pre> <ul> <li>\u5916\u90e8\u767b\u9332: <code>RegisterResponse()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4efb\u610f\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u3001\u5b9f\u884c\u6642\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u52d5\u4f5c\u3092\u8a2d\u5b9a\u307e\u305f\u306f\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30ed\u30b8\u30c3\u30af\u304c\u5909\u66f4\u3055\u308c\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u52d5\u7684\u306a\u30b7\u30ca\u30ea\u30aa\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002 \u540c\u671f\uff08<code>Action</code>\uff09\u304a\u3088\u3073\u975e\u540c\u671f\uff08<code>Func&lt;ValueTask&gt;</code>\uff09\u306e\u4e21\u65b9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002</li> </ul> <pre><code>// File: TransactionResponder.cs\nusing Soar.Transactions;\nusing UnityEngine;\nusing System.Threading.Tasks;\n\npublic class TransactionResponder : MonoBehaviour\n{\n    [SerializeField] private Transaction myTransaction;\n\n    private void Start()\n    {\n        // \u540c\u671f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u767b\u9332\n        myTransaction.RegisterResponse(HandleSyncResponse);\n\n        // \u307e\u305f\u306f\u3001\u975e\u540c\u671f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u767b\u9332\n        // myTransaction.RegisterResponse(HandleAsyncResponse);\n    }\n\n    private void OnDestroy()\n    {\n        myTransaction.UnregisterResponse();\n    }\n\n    private void HandleSyncResponse()\n    {\n        Debug.Log(\"External synchronous response executed!\");\n    }\n\n    private async ValueTask HandleAsyncResponse()\n    {\n        Debug.Log(\"Async response started...\");\n        await Task.Delay(1000); // \u4f5c\u696d\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n        Debug.Log(\"Async response finished.\");\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#_4","title":"\u30ea\u30af\u30a8\u30b9\u30c8","text":"<p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d9\u30fc\u30b9\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f <code>Request(Action onResponse)</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u884c\u308f\u308c\u308b\u3068\u3001\u767b\u9332\u3055\u308c\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u30ed\u30b8\u30c3\u30af\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>// File: TransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private Transaction myTransaction;\n\n    private void Start()\n    {\n        myTransaction.Request(() =&gt; Debug.Log(\"Transaction completed!\"));\n    }\n}\n</code></pre> <p>\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f\u3001\u5f85\u6a5f\u53ef\u80fd\u306a <code>ValueTask</code> \u3092\u8fd4\u3059 <code>RequestAsync()</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>// File: AsyncTransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class AsyncTransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private Transaction myTransaction;\n\n    private async void Start()\n    {\n        await myTransaction.RequestAsync();\n        Debug.Log(\"Async transaction completed!\");\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#transactiontrequest-tresponse","title":"<code>Transaction&lt;TRequest, TResponse&gt;</code> (\u578b\u4ed8\u304d)","text":"<p>\u30b8\u30a7\u30cd\u30ea\u30c3\u30af <code>Transaction&lt;TRequest, TResponse&gt;</code> \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u5165\u529b\u5024\u3068\u51fa\u529b\u5024\u3092\u6301\u3064\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/transaction/#transactiont","title":"<code>Transaction&lt;T&gt;</code> (\u5bfe\u79f0\u578b)","text":"<p>\u4fbf\u5b9c\u4e0a\u3001SOAR \u306f <code>Transaction&lt;T, T&gt;</code> \u306e\u77ed\u7e2e\u5f62\u3067\u3042\u308b <code>Transaction&lt;T&gt;</code> \u57fa\u672c\u30af\u30e9\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u540c\u3058\u578b\u3092\u5171\u6709\u3059\u308b\u30b7\u30ca\u30ea\u30aa\uff08\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u5909\u66f4\u3057\u3066\u8fd4\u3059\u64cd\u4f5c\u306a\u3069\uff09\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> <pre><code>// File: ModifyNumberTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"ModifyNumberTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"Modify Number Transaction\")]\npublic class ModifyNumberTransaction : Transaction&lt;int&gt; // Transaction&lt;int, int&gt; \u304b\u3089\u7d99\u627f\n{\n    protected override void RegisterResponseInternal()\n    {\n        RegisterResponse(request =&gt; request * 2);\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#_5","title":"\u578b\u4ed8\u304d\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210","text":"<p><code>Transaction&lt;TRequest, TResponse&gt;</code> \u3092\u7d99\u627f\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001\u30ab\u30b9\u30bf\u30e0\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <pre><code>// File: IntToStringTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"IntToStringTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"Int To String Transaction\")]\npublic class IntToStringTransaction : Transaction&lt;int, string&gt;\n{\n    protected override void RegisterResponseInternal()\n    {\n        RegisterResponse(request =&gt; $\"Value is {request}\");\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#_6","title":"\u5024\u4ed8\u304d\u30ea\u30af\u30a8\u30b9\u30c8","text":"<p>\u578b\u4ed8\u304d\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d9\u30fc\u30b9\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f <code>Request(TRequest, Action&lt;TResponse&gt;)</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002</p> <pre><code>// File: TypedTransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TypedTransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private IntToStringTransaction intToStringTransaction;\n\n    private void Start()\n    {\n        intToStringTransaction.Request(42, response =&gt; Debug.Log(response));\n    }\n}\n</code></pre> <p>\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f\u3001\u5f85\u6a5f\u53ef\u80fd\u306a <code>ValueTask&lt;TResponse&gt;</code> \u3092\u8fd4\u3059 <code>RequestAsync(TRequest)</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002</p> <pre><code>// File: AsyncTypedTransactionUserExample.cs\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class AsyncTypedTransactionUserExample : MonoBehaviour\n{\n    [SerializeField] private IntToStringTransaction intToStringTransaction;\n\n    private async void Start()\n    {\n        var result = await intToStringTransaction.RequestAsync(99);\n        Debug.Log($\"Async result: {result}\");\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#_7","title":"\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6","text":"<p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u305f\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u76e3\u8996\u3059\u308b\u305f\u3081\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u4e0d\u8981\u306b\u306a\u3063\u305f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u7834\u68c4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: TransactionMonitor.cs\nusing System;\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TransactionMonitor : MonoBehaviour\n{\n    [SerializeField] private Transaction transaction;\n\n    private IDisposable requestSubscription;\n    private IDisposable responseSubscription;\n\n    private void Start()\n    {\n        requestSubscription = transaction.SubscribeToRequest(() =&gt; Debug.Log(\"Request made\"));\n        responseSubscription = transaction.SubscribeToResponse(() =&gt; Debug.Log(\"Response made\"));\n    }\n\n    private void OnDestroy()\n    {\n        requestSubscription?.Dispose();\n        responseSubscription?.Dispose();\n    }\n}\n</code></pre> <p>\u578b\u4ed8\u304d\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5834\u5408\uff1a</p> <pre><code>// File: TypedTransactionMonitor.cs\nusing System;\nusing Soar.Transactions;\nusing UnityEngine;\n\npublic class TypedTransactionMonitor : MonoBehaviour\n{\n    [SerializeField] private IntToStringTransaction transaction;\n\n    private IDisposable requestSubscription;\n    private IDisposable responseSubscription;\n\n    private void Start()\n    {\n        requestSubscription = transaction.SubscribeToRequest(request =&gt; Debug.Log($\"Requested: {request}\"));\n        responseSubscription = transaction.SubscribeToResponse(response =&gt; Debug.Log($\"Responded: {response}\"));\n    }\n\n    private void OnDestroy()\n    {\n        requestSubscription?.Dispose();\n        responseSubscription?.Dispose();\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#r3","title":"R3 \u3068\u306e\u9023\u643a","text":"<p>R3 \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u3001<code>Transaction</code> \u306f\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u30b5\u30a4\u30af\u30eb\u3092\u51e6\u7406\u3057\u3001\u540c\u6642\u5b9f\u884c\u6027\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u5805\u7262\u306a\u30c4\u30fc\u30eb\u3067\u5f37\u5316\u3055\u308c\u307e\u3059\u3002</p> <ul> <li><code>AsRequestObservable()</code> / <code>AsResponseObservable()</code>: \u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u884c\u308f\u308c\u305f\u3068\u304d\u3001\u307e\u305f\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3055\u308c\u305f\u3068\u304d\u306b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u30ea\u30c3\u30b9\u30f3\u3067\u304d\u308b <code>Observable</code> \u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u8fd4\u3057\u307e\u3059\u3002</li> <li><code>RequestAsync()</code>: \u3053\u308c\u306f\u975e\u540c\u671f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u884c\u3046\u305f\u3081\u306e\u4e3b\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u767b\u9332\u3055\u308c\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u304c\u4f5c\u696d\u3092\u5b8c\u4e86\u3059\u308b\u3068\u5b8c\u4e86\u3059\u308b <code>ValueTask</code>\uff08\u307e\u305f\u306f <code>ValueTask&lt;TResponse&gt;</code>\uff09\u3092\u8fd4\u3057\u307e\u3059\u3002</li> <li>\u975e\u540c\u671f <code>RegisterResponse</code>: \u6700\u3082\u5f37\u529b\u306a\u6a5f\u80fd\u306f\u3001<code>async</code> \u30e1\u30bd\u30c3\u30c9\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u3068\u3057\u3066\u767b\u9332\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002<code>Func&lt;ValueTask&gt;</code>\u3001<code>Func&lt;TRequest, ValueTask&lt;TResponse&gt;&gt;</code>\u3001\u304a\u3088\u3073\u305d\u306e\u4ed6\u306e\u975e\u540c\u671f\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/transaction/#awaitoperation","title":"<code>AwaitOperation</code> \u306b\u3088\u308b\u540c\u6642\u5b9f\u884c\u6027","text":"<p>\u975e\u540c\u671f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u767b\u9332\u3059\u308b\u3068\u304d\u306b\u3001<code>AwaitOperation</code> \u3092\u6307\u5b9a\u3057\u3066\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u307e\u3060\u51e6\u7406\u4e2d\u306b\u8907\u6570\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5230\u7740\u3057\u305f\u5834\u5408\u306b <code>Transaction</code> \u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\u304b\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002</p> <ul> <li><code>Parallel</code>: (\u30c7\u30d5\u30a9\u30eb\u30c8) \u3059\u3079\u3066\u306e\u7740\u4fe1\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u6642\u306b\u51e6\u7406\u3057\u307e\u3059\u3002</li> <li><code>Sequential</code>: \u7740\u4fe1\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e5\u30fc\u306b\u5165\u308c\u3001\u4e00\u5ea6\u306b1\u3064\u305a\u3064\u51e6\u7406\u3057\u307e\u3059\u3002</li> <li><code>Drop</code>: \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3059\u3067\u306b\u9032\u884c\u4e2d\u306e\u5834\u5408\u3001\u65b0\u3057\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002</li> <li><code>Switch</code>: \u65b0\u3057\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5230\u7740\u3057\u305f\u5834\u5408\u3001\u524d\u306e\u672a\u5b8c\u4e86\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3059\u3002</li> <li><code>ThrottleFirst</code>: \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30b9\u30ed\u30c3\u30c8\u30ea\u30f3\u30b0\u3057\u3001\u7279\u5b9a\u306e\u6642\u9593\u67a0\u3067\u6700\u521d\u306e\u3082\u306e\u306e\u307f\u3092\u8a31\u53ef\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/transaction/#_8","title":"\u4f8b","text":"<pre><code>// File: MyAsyncService.cs\nusing Soar.Transactions;\nusing System.Threading.Tasks;\nusing UnityEngine;\n\npublic class MyAsyncService : MonoBehaviour\n{\n    [SerializeField] private StringTransaction fetchDataTransaction;\n\n    void Start()\n    {\n        // \u30a6\u30a7\u30d6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u975e\u540c\u671f\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u3092\u767b\u9332\n        fetchDataTransaction.RegisterResponse(async (request) =&gt;\n        {\n            Debug.Log($\"Fetching data for: {request}...\");\n            await Task.Delay(1000); // \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u9045\u5ef6\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n            return $\"Data for {request}\";\n        }, R3.AwaitOperation.Sequential); // \u30ea\u30af\u30a8\u30b9\u30c8\u30921\u3064\u305a\u3064\u51e6\u7406\n    }\n}\n</code></pre>"},{"location":"ja/features/transaction/#_9","title":"\u30a8\u30c7\u30a3\u30bf\u7d71\u5408","text":"<p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u306f\u3001Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u306b\u30ab\u30b9\u30bf\u30e0\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li> <p>\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30bf\u30f3: \u3059\u3079\u3066\u306e <code>Transaction</code> \u30a2\u30bb\u30c3\u30c8\u306e\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u300cRequest\u300d\u30dc\u30bf\u30f3\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u3001\u30c6\u30b9\u30c8\u3084\u30c7\u30d0\u30c3\u30b0\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> </li> <li> <p>\u30c0\u30df\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9: \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u884c\u308f\u308c\u308b\u3068\u3001\u30c0\u30df\u30fc\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u304c\u4e00\u6642\u7684\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u884c\u308f\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9069\u5207\u306b\u5fdc\u7b54\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> </li> </ul> <p></p> <ul> <li> <p>\u5024\u306e\u8868\u793a: \u578b\u4ed8\u304d\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3001\u73fe\u5728\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5024\u304c\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002</p> </li> <li> <p>\u5024\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30bf\u30f3: \u578b\u4ed8\u304d\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u73fe\u5728\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u5024\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> </li> </ul> <p></p>"},{"location":"ja/features/transaction/#_10","title":"\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u7834\u68c4","text":"<p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f <code>ScriptableObject</code> \u3067\u3042\u308a\u3001<code>IDisposable</code> \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002</p> <ul> <li>\u521d\u671f\u5316: \u6709\u52b9\u306b\u306a\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u5185\u90e8\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\uff08\u3082\u3057\u3042\u308c\u3070\uff09\u3092\u767b\u9332\u3057\u3001\u4fdd\u7559\u4e2d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002</li> <li>\u7834\u68c4: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u6642\u307e\u305f\u306f\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u6642\uff08\u6709\u52b9\u306a\u5834\u5408\uff09\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u7834\u68c4\u3057\u3001\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u9632\u3050\u305f\u3081\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002</li> <li>\u30ea\u30bb\u30c3\u30c8: <code>ResetResponseInternal()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u767b\u9332\u3055\u308c\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u306b\u30ea\u30bb\u30c3\u30c8\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/transaction/#_11","title":"\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9","text":"<p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u758e\u7d50\u5408\u306a\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u30d5\u30ed\u30fc\u3092\u5fc5\u8981\u3068\u3059\u308b\u30b7\u30ca\u30ea\u30aa\u306b\u9069\u3057\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>\u30b5\u30fc\u30d3\u30b9\u30b3\u30fc\u30eb: \u975e\u540c\u671f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6301\u3064\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u307e\u305f\u306f\u30b5\u30fc\u30d3\u30b9\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30ab\u30d7\u30bb\u30eb\u5316\u3002</li> <li>\u30b2\u30fc\u30e0\u30ed\u30b8\u30c3\u30af: \u78ba\u8a8d\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u4ed8\u304d\u306e\u8cfc\u5165\u3001\u4fdd\u5b58\u3001\u8aad\u307f\u8fbc\u307f\u306a\u3069\u306e\u64cd\u4f5c\u306e\u51e6\u7406\u3002</li> <li>\u30a8\u30c7\u30a3\u30bf\u30c4\u30fc\u30eb: \u30c7\u30d0\u30c3\u30b0\u307e\u305f\u306f\u81ea\u52d5\u5316\u306e\u305f\u3081\u306b Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u304b\u3089\u64cd\u4f5c\u3092\u30c8\u30ea\u30ac\u30fc\u304a\u3088\u3073\u76e3\u8996\u3002</li> </ul> <p>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30b7\u30b9\u30c6\u30e0\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5f0f\u3067\u30c6\u30b9\u30c8\u53ef\u80fd\u3067\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u65b9\u6cd5\u3067\u901a\u4fe1\u3067\u304d\u3001\u540c\u671f\u304a\u3088\u3073\u975e\u540c\u671f\u306e\u4e21\u65b9\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/transaction/#_12","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>The Transaction \u30b5\u30f3\u30d7\u30eb\u306f\u3001\u5b8c\u5168\u306a\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9/\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u793a\u3057\u307e\u3059\u3002\u9577\u6642\u9593\u5b9f\u884c\u3055\u308c\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30bf\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u30ec\u30b9\u30dd\u30f3\u30c0\u3001\u304a\u3088\u3073\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u30ed\u30b0\u3092\u8a18\u9332\u3059\u308b\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>TransactionSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/unity-event-binder/","title":"Unity Event Binder","text":"<p><code>UnityEventBinder</code> \u306f\u3001SOAR \u306e <code>GameEvent</code> \u3068 Unity \u306e\u7d44\u307f\u8fbc\u307f <code>UnityEvent</code> \u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9593\u306e\u30ae\u30e3\u30c3\u30d7\u3092\u57cb\u3081\u308b\u91cd\u8981\u306a <code>MonoBehaviour</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059\u3002 \u300c\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u300d\u3068\u3082\u547c\u3070\u308c\u3001<code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3001\u305d\u308c\u306b\u5fdc\u3058\u3066 <code>UnityEvent</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001\u30b3\u30fc\u30c9\u306a\u3057\u3067\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u76f4\u63a5\u30b2\u30fc\u30e0\u30ed\u30b8\u30c3\u30af\u3092\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/features/unity-event-binder/#_1","title":"\u30b3\u30a2\u30b3\u30f3\u30bb\u30d7\u30c8","text":"<p><code>UnityEventBinder</code> \u306f\u3001\u30b7\u30fc\u30f3\u5185\u306e <code>GameObject</code> \u306b\u30a2\u30bf\u30c3\u30c1\u3055\u308c\u308b <code>MonoBehaviour</code> \u3067\u3059\u3002\u4e3b\u306a\u76ee\u7684\u306f2\u3064\u3042\u308a\u307e\u3059\uff1a</p> <ol> <li><code>GameEvent</code> \u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b: \u7279\u5b9a\u306e <code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u304c\u30d0\u30a4\u30f3\u30c0\u30fc\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002</li> <li><code>UnityEvent</code> \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b: \u6307\u5b9a\u3055\u308c\u305f <code>GameEvent</code> \u304c\u767a\u751f\u3059\u308b\u3068\u3001\u30d0\u30a4\u30f3\u30c0\u30fc\u306f\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u8a2d\u5b9a\u3067\u304d\u308b <code>UnityEvent</code> \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</li> </ol> <p>\u3053\u308c\u306b\u3088\u308a\u3001\u5f37\u529b\u3067\u758e\u7d50\u5408\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002<code>GameEvent</code> \u3092\u767a\u751f\u3055\u305b\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u305d\u308c\u306b\u53cd\u5fdc\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066\u4f55\u3082\u77e5\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u305d\u306e\u9006\u3082\u540c\u69d8\u3067\u3059\u3002</p>"},{"location":"ja/features/unity-event-binder/#unityeventbinder-gameevents","title":"<code>UnityEventBinder</code> (\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u306e GameEvents \u7528)","text":"<p>\u975e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306e <code>UnityEventBinder</code> \u306f\u3001\u30c7\u30fc\u30bf\u3092\u904b\u3070\u306a\u3044 <code>GameEvent</code> \u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/unity-event-binder/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ol> <li> <p>\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u8ffd\u52a0: \u30b7\u30fc\u30f3\u5185\u306e <code>GameObject</code> \u3092\u9078\u629e\u3057\u3001<code>UnityEventBinder</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff08<code>Add Component &gt; SOAR &gt; Unity Event Binder</code>\uff09\u3002</p> </li> <li> <p>GameEvent \u306e\u5272\u308a\u5f53\u3066: \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u306e <code>GameEvent</code> \u30a2\u30bb\u30c3\u30c8\u3092 <code>Game Event To Listen</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002</p> <p></p> </li> <li> <p>UnityEvent \u306e\u8a2d\u5b9a: <code>On Game Event Raised</code> <code>UnityEvent</code> \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002<code>GameObject</code> \u307e\u305f\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30a4\u30d9\u30f3\u30c8\u30b9\u30ed\u30c3\u30c8\u306b\u30c9\u30e9\u30c3\u30b0\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30d1\u30d6\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3092\u9078\u629e\u3067\u304d\u307e\u3059\u3002</p> <p></p> </li> </ol> <p>\u3053\u308c\u3067\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f <code>GameEvent</code> \u304c\uff08\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u5225\u306e <code>UnityEvent</code>\u3001\u307e\u305f\u306f\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u304b\u3089\uff09\u767a\u751f\u3059\u308b\u305f\u3073\u306b\u3001<code>UnityEventBinder</code> \u306f\u8a2d\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/unity-event-binder/#unityeventbindert-gameevents","title":"<code>UnityEventBinder&lt;T&gt;</code> (\u30c7\u30fc\u30bf\u4ed8\u304d\u306e GameEvents \u7528)","text":"<p>\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306e <code>UnityEventBinder&lt;T&gt;</code> \u306f\u3001\u30c7\u30fc\u30bf\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u904b\u3076 <code>GameEvent&lt;T&gt;</code> \u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002SOAR \u306f\u3001\u4e00\u822c\u7684\u306a\u578b\u7528\u306b\u4e8b\u524d\u30d3\u30eb\u30c9\u3055\u308c\u305f\u30d0\u30a4\u30f3\u30c0\u30fc\u306e\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/unity-event-binder/#_3","title":"\u4e8b\u524d\u30d3\u30eb\u30c9\u3055\u308c\u305f\u30d0\u30a4\u30f3\u30c0\u30fc","text":"<p>\u3055\u307e\u3056\u307e\u306a\u578b\u7528\u306e\u4e8b\u524d\u30d3\u30eb\u30c9\u3055\u308c\u305f\u30d0\u30a4\u30f3\u30c0\u30fc\u306f\u3001<code>Add Component &gt; SOAR &gt; Unity Event Binders</code> \u306b\u3042\u308a\u307e\u3059\uff1a</p> <ul> <li><code>BoolUnityEventBinder</code></li> <li><code>ByteUnityEventBinder</code></li> <li><code>DoubleUnityEventBinder</code></li> <li><code>FloatUnityEventBinder</code></li> <li><code>IntUnityEventBinder</code></li> <li><code>LongUnityEventBinder</code></li> <li><code>StringUnityEventBinder</code></li> <li><code>PoseUnityEventBinder</code></li> <li><code>QuaternionUnityEventBinder</code></li> <li><code>Vector2UnityEventBinder</code></li> <li><code>Vector3UnityEventBinder</code></li> </ul>"},{"location":"ja/features/unity-event-binder/#_4","title":"\u578b\u4ed8\u304d\u30d0\u30a4\u30f3\u30c0\u30fc\u306e\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u30d7\u30ed\u30bb\u30b9\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u306e\u30d0\u30a4\u30f3\u30c0\u30fc\u3068\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u578b\u4ed8\u304d\u306e <code>UnityEvent</code> \u3092\u4f7f\u7528\u3057\u307e\u3059\uff1a</p> <ol> <li> <p>\u578b\u4ed8\u304d\u30d0\u30a4\u30f3\u30c0\u30fc\u306e\u8ffd\u52a0: \u7279\u5b9a\u306e\u578b\u4ed8\u304d\u30d0\u30a4\u30f3\u30c0\u30fc\u3092 <code>GameObject</code> \u306b\u8ffd\u52a0\u3057\u307e\u3059\uff08\u4f8b\uff1a<code>Vector3UnityEventBinder</code>\uff09\u3002</p> </li> <li> <p>\u578b\u4ed8\u304d GameEvent \u306e\u5272\u308a\u5f53\u3066: \u5bfe\u5fdc\u3059\u308b\u578b\u4ed8\u304d <code>GameEvent&lt;T&gt;</code> \u30a2\u30bb\u30c3\u30c8\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\uff08\u4f8b\uff1a<code>Vector3Variable</code>\u3002<code>Variable&lt;T&gt;</code> \u306f <code>GameEvent&lt;T&gt;</code> \u304b\u3089\u6d3e\u751f\u3057\u3066\u3044\u308b\u305f\u3081\uff09\u3002</p> </li> <li> <p>\u578b\u4ed8\u304d UnityEvent \u306e\u8a2d\u5b9a: \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u306f <code>On Typed Game Event Raised (T)</code> \u30a4\u30d9\u30f3\u30c8\uff08\u4f8b\uff1a<code>On Typed Game Event Raised (Vector3)</code>\uff09\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30a4\u30d9\u30f3\u30c8\u306e\u30c7\u30fc\u30bf\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u30ea\u30b9\u30cb\u30f3\u30b0\u30e1\u30bd\u30c3\u30c9\u306b\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u308b <code>UnityEvent&lt;T&gt;</code> \u3067\u3059\u3002\u5bfe\u5fdc\u3059\u308b\u578b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u5165\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u9078\u629e\u3067\u304d\u307e\u3059\u3002</p> <p>\u305f\u3068\u3048\u3070\u3001Transform \u306e <code>localPosition</code> \u306f\u3001<code>Vector3UnityEventBinder</code> \u306e <code>UnityEvent</code> \u306b\u76f4\u63a5\u30ea\u30f3\u30af\u3067\u304d\u307e\u3059\u3002</p> <p></p> </li> </ol>"},{"location":"ja/features/unity-event-binder/#_5","title":"\u7279\u5225\u306a\u30d0\u30a4\u30f3\u30c0\u30fc","text":"<ul> <li> <p><code>BoolUnityEventBinder</code>: \u6a19\u6e96\u306e <code>UnityEvent&lt;bool&gt;</code> \u306b\u52a0\u3048\u3066\u3001\u3053\u306e\u30d0\u30a4\u30f3\u30c0\u30fc\u306f\u3001\u53cd\u5bfe\u306e\u30d6\u30fc\u30eb\u5024\u3067\u547c\u3073\u51fa\u3055\u308c\u308b <code>On Negated Bool Event Raised</code> \u30a4\u30d9\u30f3\u30c8\u3082\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <p></p> </li> <li> <p><code>StringUnityEventBinder</code>: \u3053\u306e\u30d0\u30a4\u30f3\u30c0\u30fc\u306b\u306f\u7279\u5225\u306a\u52d5\u4f5c\u304c\u3042\u308a\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u306e <code>GameEvent</code> \u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001<code>GameEvent</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u306e <code>ToString()</code> \u8868\u73fe\u3067 <code>UnityEvent&lt;string&gt;</code> \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002</p> <p></p> </li> <li> <p><code>UnityEventBatchBinder</code>: \u3053\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u8907\u6570\u306e <code>GameEvent</code> \u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3001\u305d\u308c\u306b\u5fdc\u3058\u3066\u5358\u4e00\u306e <code>UnityEvent</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u8907\u6570\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u540c\u3058\u5fdc\u7b54\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002</p> </li> </ul>"},{"location":"ja/features/unity-event-binder/#unityeventbindert","title":"\u30ab\u30b9\u30bf\u30e0 <code>UnityEventBinder&lt;T&gt;</code> \u306e\u4f5c\u6210","text":"<p>\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001\u30ab\u30b9\u30bf\u30e0\u306e\u578b\u4ed8\u304d <code>UnityEventBinder</code> \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff1a</p> <ol> <li> <p>\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u578b\u3068 <code>GameEvent&lt;T&gt;</code> \u306e\u5b9a\u7fa9: <code>[Serializable]</code> \u30c7\u30fc\u30bf\u578b\u3068\u3001\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b <code>GameEvent&lt;T&gt;</code> \u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: PlayerData.cs\nusing System;\n\n[Serializable]\npublic struct PlayerData\n{\n    public string name;\n    public int level;\n}\n\n// File: PlayerDataGameEvent.cs\nusing Soar.Events;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"PlayerDataGameEvent\", menuName = \"SOAR/Game Events/Player Data GameEvent\")]\npublic class PlayerDataGameEvent : GameEvent&lt;PlayerData&gt; { }\n</code></pre> </li> <li> <p>\u30ab\u30b9\u30bf\u30e0\u30d0\u30a4\u30f3\u30c0\u30fc\u30af\u30e9\u30b9\u306e\u4f5c\u6210: \u30ab\u30b9\u30bf\u30e0\u578b\u3092\u6307\u5b9a\u3057\u3066 <code>UnityEventBinder&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <pre><code>// File: PlayerDataUnityEventBinder.cs\nusing Soar.Events;\n\npublic class PlayerDataUnityEventBinder : UnityEventBinder&lt;PlayerData&gt; { }\n</code></pre> </li> </ol> <p><code>UnityEventBinder&lt;T&gt;</code> \u57fa\u672c\u30af\u30e9\u30b9\u304c\u3059\u3079\u3066\u306e\u30ed\u30b8\u30c3\u30af\u3092\u51e6\u7406\u3057\u307e\u3059\u3002<code>PlayerDataUnityEventBinder</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092 <code>GameObject</code> \u306b\u8ffd\u52a0\u3057\u3066\u3001<code>PlayerDataGameEvent</code> \u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ja/features/unity-event-binder/#_6","title":"\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb","text":"<p><code>UnityEventBinder</code> \u306f\u3001<code>Start()</code> \u30e1\u30bd\u30c3\u30c9\u3067 <code>GameEvent</code> \u3078\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3092\u81ea\u52d5\u7684\u306b\u51e6\u7406\u3057\u3001<code>OnDestroy()</code> \u30e1\u30bd\u30c3\u30c9\u3067\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3092\u89e3\u9664\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001<code>GameObject</code> \u304c\u7834\u68c4\u3055\u308c\u305f\u3068\u304d\u306b\u6b8b\u3063\u3066\u3044\u308b\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u304c\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/features/unity-event-binder/#_7","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>The UnityEventBinder \u30b5\u30f3\u30d7\u30eb\u306f\u3001<code>UnityEventBinder</code> \u304c <code>GameEvent</code> \u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3001\u305d\u308c\u306b\u5fdc\u3058\u3066 <code>UnityEvent</code> \u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3059\u3079\u3066\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u30b3\u30fc\u30c9\u306a\u3057\u3067\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>UnityEventBinderSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/variable/","title":"Variable","text":"<p>SOAR \u306e <code>Variable&lt;T&gt;</code> \u30af\u30e9\u30b9\u306f\u3001<code>ScriptableObject</code> \u306b\u4fdd\u5b58\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30b3\u30f3\u30c6\u30ca\u3092\u8868\u3057\u307e\u3059\u3002 \u3053\u308c\u306f <code>GameEvent&lt;T&gt;</code> \u30b7\u30b9\u30c6\u30e0\u3092\u62e1\u5f35\u3057\u3066\u304a\u308a\u3001<code>Variable&lt;T&gt;</code> \u306e <code>Value</code> \u304c\u5909\u66f4\u3055\u308c\u308b\u305f\u3073\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3057\u3001\u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u65b0\u3057\u3044\u5024\u3092\u901a\u77e5\u3057\u307e\u3059\u3002 \u3053\u308c\u306b\u3088\u308a\u3001<code>Variable&lt;T&gt;</code> \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067\u7c21\u5358\u306b\u5171\u6709\u304a\u3088\u3073\u76e3\u8996\u3067\u304d\u308b\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u306b\u306a\u308a\u307e\u3059\u3002</p> <p><code>Variable&lt;T&gt;</code> \u306f\u3001Raise \u304a\u3088\u3073 Subscribe \u30a4\u30d9\u30f3\u30c8\u6a5f\u80fd\u3092\u5099\u3048\u305f <code>GameEvent&lt;T&gt;</code> \u304b\u3089\u7d99\u627f\u3057\u3001\u3057\u305f\u304c\u3063\u3066\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u7ba1\u7406\u6a5f\u80fd\u3092\u6301\u3064 <code>SoarCore</code> \u304b\u3089\u3082\u7d99\u627f\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/variable/#variablet","title":"<code>Variable&lt;T&gt;</code>","text":"<p>\u30b8\u30a7\u30cd\u30ea\u30c3\u30af <code>Variable&lt;T&gt;</code> \u30af\u30e9\u30b9\u306f\u3001\u3059\u3079\u3066\u306e\u5909\u6570\u578b\u306e\u57fa\u790e\u3067\u3059\u3002\u578b <code>T</code> \u306e\u5024\u3092\u4fdd\u6301\u3057\u3001\u3053\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3001\u5909\u66f4\u3001\u304a\u3088\u3073\u76e3\u8996\u3059\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <p></p> <ul> <li> <p>Value \u30d7\u30ed\u30d1\u30c6\u30a3: <code>Variable&lt;T&gt;</code> \u3068\u5bfe\u8a71\u3059\u308b\u4e3b\u306a\u65b9\u6cd5\u306f\u3001\u305d\u306e <code>Value</code> \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4ecb\u3059\u308b\u3053\u3068\u3067\u3059\u3002<code>Value</code> \u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u65b0\u3057\u3044\u5024\u3092\u5272\u308a\u5f53\u3066\u308b\u3068\u3001<code>Raise(T)</code> \u30e1\u30bd\u30c3\u30c9\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u901a\u77e5\u3055\u308c\u307e\u3059\u3002</p> </li> <li> <p>Value Event Type: \uff08\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u8a2d\u5b9a\u53ef\u80fd\u306a\uff09<code>valueEventType</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u5024\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u304c\u3044\u3064\u767a\u751f\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\uff1a</p> <ul> <li><code>OnAssign</code>: \u65b0\u3057\u3044\u5024\u304c\u53e4\u3044\u5024\u3068\u540c\u3058\u3067\u3042\u3063\u3066\u3082\u3001<code>Value</code> \u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u305f\u3073\u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u3002</li> <li><code>OnChange</code>: \u65b0\u3057\u3044\u5024\u304c\u73fe\u5728\u306e\u5024\u3068\u7570\u306a\u308b\u5834\u5408\u306b\u306e\u307f\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u3002 \u3053\u308c\u306f <code>IsValueEquals(T)</code> \u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u30c1\u30a7\u30c3\u30af\u3055\u308c\u307e\u3059\u3002</li> </ul> </li> <li> <p>\u5909\u66f4\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6: <code>Variable&lt;T&gt;</code> \u306f <code>GameEvent&lt;T&gt;</code> \u304b\u3089\u7d99\u627f\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u540c\u3058 <code>Subscribe</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u5024\u306e\u5909\u66f4\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3067\u304d\u307e\u3059\uff1a</p> <ul> <li><code>Subscribe(Action&lt;T&gt; action)</code>: \u65b0\u3057\u3044\u5024\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002</li> <li><code>Subscribe(Action&lt;T, T&gt; action)</code>: \u53e4\u3044\u5024\u3068\u65b0\u3057\u3044\u5024\u306e\u4e21\u65b9\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3053\u308c\u306f <code>Variable&lt;T&gt;</code> \u306b\u56fa\u6709\u3067\u3059\u3002</li> <li><code>Subscribe(Action&lt;PairwiseValue&lt;T&gt;&gt; action)</code>: \u53e4\u3044\u5024\u3068\u65b0\u3057\u3044\u5024\u306e\u4e21\u65b9\u3092\u542b\u3080 <code>PairwiseValue&lt;T&gt;</code> \u69cb\u9020\u4f53\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u3053\u308c\u3082 <code>Variable&lt;T&gt;</code> \u306b\u56fa\u6709\u3067\u3059\u3002</li> </ul> </li> <li> <p>\u521d\u671f\u5024\u3068\u30ea\u30bb\u30c3\u30c8:</p> <ul> <li><code>InitialValue</code> \u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u521d\u671f\u5316\u6642\uff08\u30b2\u30fc\u30e0\u306e\u958b\u59cb\u6642\u3084\u30a8\u30c7\u30a3\u30bf\u30fc\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306a\u3069\uff09\u306e\u5909\u6570\u306e\u5024\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002</li> <li><code>ResetValue()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u5909\u6570\u306e <code>Value</code> \u3092 <code>InitialValue</code> \u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</li> </ul> </li> <li> <p>Auto Reset Value: \uff08\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u8a2d\u5b9a\u53ef\u80fd\u306a\uff09<code>autoResetValue</code> \u30d6\u30fc\u30eb\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u518d\u751f\u30e2\u30fc\u30c9\u306e\u7d42\u4e86\u6642\u306b <code>Variable&lt;T&gt;</code> \u304c\u81ea\u52d5\u7684\u306b <code>ResetValue()</code> \u3092\u547c\u3073\u51fa\u3059\u304b\u3069\u3046\u304b\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c6\u30b9\u30c8\u5f8c\u306b\u5909\u6570\u3092\u65e2\u77e5\u306e\u72b6\u614b\u306b\u623b\u3059\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> </li> </ul> <p>\u30b7\u30ea\u30a2\u30eb\u5316\u3068\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc</p> <p><code>autoResetValue</code> \u304c\u8907\u96d1\u306a\u30af\u30e9\u30b9\u578b\u3067\u6a5f\u80fd\u3059\u308b\u305f\u3081\u306b\u3001SOAR \u306f\u521d\u671f\u5024\u3092 JSON \u6587\u5b57\u5217\u306b\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u3066\u300c\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u300d\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u306f2\u3064\u306e\u91cd\u8981\u306a\u610f\u5473\u304c\u3042\u308a\u307e\u3059\uff1a 1.  \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9: \u3053\u306e\u30b7\u30ea\u30a2\u30eb\u5316\u306f\u3001\u7279\u306b\u8d77\u52d5\u6642\u306b\u30ac\u30d9\u30fc\u30b8\u3068 CPU \u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3092\u767a\u751f\u3055\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u91cd\u8981\u306a\u5909\u6570\u306e\u5834\u5408\u306f\u3001\u5024\u3067\u30b3\u30d4\u30fc\u3055\u308c\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u56de\u907f\u3059\u308b\u69cb\u9020\u4f53\u307e\u305f\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002 2.  \u4e92\u63db\u6027: \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3059\u3079\u3066\u306e\u578b\u3001\u7279\u306b <code>Transform</code> \u3084 <code>GameObject</code> \u306a\u3069\u306e Unity \u30a8\u30f3\u30b8\u30f3\u578b\u3067\u306f\u6a5f\u80fd\u3057\u307e\u305b\u3093\u3002\u3053\u308c\u3089\u306e\u578b\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u624b\u52d5\u3067\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/variable/#_1","title":"\u5909\u6570\u306e\u4f5c\u6210","text":"<p>SOAR \u306f\u3001\u4e00\u822c\u7684\u306a Unity \u304a\u3088\u3073 C# \u578b\uff08\u4f8b\uff1a<code>IntVariable</code>\u3001<code>FloatVariable</code>\u3001<code>StringVariable</code>\u3001<code>Vector3Variable</code>\uff09\u7528\u306b\u3001\u3044\u304f\u3064\u304b\u306e\u4e8b\u524d\u5b9a\u7fa9\u3055\u308c\u305f <code>Variable</code> \u578b\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f <code>Assets &gt; Create &gt; SOAR &gt; Variables</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u53c2\u7167</p> <p>\u3053\u308c\u3089\u306e\u4e00\u822c\u7684\u306a\u578b\u306f\u3001SOAR \u306e\u30b3\u30a2\u30af\u30e9\u30b9 <code>Soar.asmdef</code> \u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3068\u306f\u7570\u306a\u308b <code>Soar.Base.asmdef</code> \u30a2\u30bb\u30f3\u30d6\u30ea\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002<code>Soar.Base.asmdef</code> \u53c2\u7167\u304c\u305d\u308c\u3092\u5fc5\u8981\u3068\u3059\u308b asmdef \u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u578b\u306e\u5909\u6570\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\uff1a</p> <ol> <li> <p>\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u30c7\u30fc\u30bf\u3092\u8868\u793a\u304a\u3088\u3073\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>[Serializable]</code> \u3068\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>// File: MyCustomData.cs\nusing System;\n\n[Serializable]\npublic struct MyCustomData\n{\n    public int score;\n    public string playerName;\n}\n</code></pre> </li> <li> <p>\u30ab\u30b9\u30bf\u30e0\u578b\u3092\u6307\u5b9a\u3057\u3066 <code>Variable&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</p> <pre><code>// File: MyCustomDataVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"MyCustomDataVariable\", menuName = MenuHelper.DefaultVariableMenu + \"My Custom Data Variable\")]\npublic class MyCustomDataVariable : Variable&lt;MyCustomData&gt; { }\n</code></pre> </li> <li> <p><code>MyCustomDataVariable</code> \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001<code>Assets &gt; Create &gt; SOAR &gt; Variables &gt; My Custom Data Variable</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> </li> </ol>"},{"location":"ja/features/variable/#_2","title":"\u5024\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3068\u5909\u66f4","text":"<p>\u5909\u6570\u306e\u5024\u306f <code>Value</code> \u30b2\u30c3\u30bf\u30fc\uff08\u30d7\u30ed\u30d1\u30c6\u30a3\uff09\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u540c\u3058\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u7528\u3057\u3066\u3001\u5909\u6570\u306e\u5024\u3092 <code>Value</code> \u30bb\u30c3\u30bf\u30fc\uff08\u30d7\u30ed\u30d1\u30c6\u30a3\uff09\u304b\u3089\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u5024\u3092\u5909\u66f4\u3059\u308b\u3068\u3001\u5024\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3059\u3002</p> <pre><code>// File: VariableUserExample.cs\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class VariableUserExample : MonoBehaviour\n{\n    [SerializeField] private IntVariable scoreVariable;\n\n    void Start()\n    {\n        Debug.Log($\"Initial Score: {scoreVariable.Value}\");\n    }\n\n    public void AddScore(int amount)\n    {\n        scoreVariable.Value += amount;\n    }\n}\n</code></pre>"},{"location":"ja/features/variable/#_3","title":"\u5024\u306e\u5909\u66f4\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6","text":"<p><code>Variable&lt;T&gt;</code> \u306e\u5909\u66f4\u306f\u3001\u305d\u308c\u306b\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u78ba\u7acb\u3059\u308b\u3053\u3068\u3067\u76e3\u8996\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u306f\u3001<code>GameEvent&lt;T&gt;</code> \u3078\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002<code>Variable&lt;T&gt;</code> \u306e <code>Value</code> \u304c\u5909\u66f4\u3055\u308c\u308b\u3068\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3084\u610f\u56f3\u3057\u306a\u3044\u52d5\u4f5c\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u306b\u306a\u3063\u305f\u3068\u304d\u306b\u7834\u68c4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u901a\u5e38\u306f <code>OnDisable</code> \u307e\u305f\u306f <code>OnDestroy</code> \u5185\u3067\u884c\u3044\u307e\u3059\u3002</p> <pre><code>// File: ScoreDisplay.cs\nusing System;\nusing Soar.Variables;\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class ScoreDisplay : MonoBehaviour\n{\n    [SerializeField] private IntVariable scoreVariable;\n    [SerializeField] private Text scoreText;\n    private IDisposable scoreSubscription;\n\n    private void Start()\n    {\n        // \u65b0\u3057\u3044\u5024\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\n        scoreSubscription = scoreVariable.Subscribe(UpdateScoreText);\n\n        // \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u53e4\u3044\u5024\u3068\u65b0\u3057\u3044\u5024\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\n        // scoreSubscription = scoreVariable.Subscribe(HandleScoreChangeDetailed);\n\n        UpdateScoreText(scoreVariable.Value); // \u521d\u671f\u5024\u3067\u30c6\u30ad\u30b9\u30c8\u3092\u66f4\u65b0\n    }\n\n    private void OnDestroy()\n    {\n        scoreSubscription?.Dispose();\n    }\n\n    private void UpdateScoreText(int newScore)\n    {\n        if (scoreText != null)\n        {\n            scoreText.text = $\"Score: {newScore}\";\n        }\n    }\n\n    // \u53e4\u3044/\u65b0\u3057\u3044\u5024\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306e\u4f8b\n    private void HandleScoreChangeDetailed(int oldValue, int newValue)\n    {\n        Debug.Log($\"Score changed from {oldValue} to {newValue}\");\n        UpdateScoreText(newValue);\n    }\n}\n</code></pre>"},{"location":"ja/features/variable/#jsonablevariablet","title":"<code>JsonableVariable&lt;T&gt;</code>","text":"<p>JSON \u306b\u30b7\u30ea\u30a2\u30eb\u5316\u307e\u305f\u306f\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5909\u6570\u306e\u305f\u3081\u306b\u3001SOAR \u306f <code>JsonableVariable&lt;T&gt;</code> \u57fa\u672c\u30af\u30e9\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306f <code>IJsonable</code> \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002</p> <ul> <li> <p><code>ToJsonString()</code>: \u5909\u6570\u306e\u73fe\u5728\u306e <code>Value</code> \u3092 JSON \u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306f\u3001\u5805\u7262\u306a\u30b7\u30ea\u30a2\u30eb\u5316\u306e\u305f\u3081\u306b <code>JsonableWrapper&lt;T&gt;</code> \u3067\u30e9\u30c3\u30d7\u3055\u308c\u307e\u3059\uff08\u4f8b\uff1a<code>{\"value\": 10}</code>\uff09\u3002</p> </li> <li>\u8907\u96d1\u306a\u578b\u306f\u76f4\u63a5\u30b7\u30ea\u30a2\u30eb\u5316\u3055\u308c\u307e\u3059\u3002</li> <li> <p>Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u306f\u3001<code>JsonUtility.ToJson</code> \u3092\u4f7f\u7528\u3057\u3001\u6574\u5f62\u5370\u5237\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002</p> </li> <li> <p><code>FromJsonString(string jsonString)</code>: JSON \u6587\u5b57\u5217\u3092\u89e3\u6790\u3057\u3001\u5909\u6570\u306e <code>Value</code> \u3092\u66f4\u65b0\u3057\u307e\u3059\u3002</p> </li> <li> <p>\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u3068\u8907\u96d1\u306a\u578b\u306e\u4e21\u65b9\u306e\u30e9\u30c3\u30d7\u89e3\u9664\u3092\u51e6\u7406\u3057\u307e\u3059\u3002</p> </li> </ul> <p>\u30ab\u30b9\u30bf\u30e0\u306e jsonable \u5909\u6570\u306f\u3001\u901a\u5e38\u306e\u5909\u6570\u3068\u540c\u69d8\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u304c\u3001<code>JsonableVariable&lt;T&gt;</code> \u304b\u3089\u7d99\u627f\u3057\u307e\u3059\uff1a</p> <pre><code>// File: MyJsonableDataVariable.cs\nusing Soar.Variables;\nusing UnityEngine;\n\n// MyCustomData \u304c [Serializable] \u3067\u3042\u308b\u3068\u4eee\u5b9a\n[CreateAssetMenu(fileName = \"MyJsonableDataVariable\", menuName = \"SOAR/Jsonable Variables/My Jsonable Data Variable\")]\npublic class MyJsonableDataVariable : JsonableVariable&lt;MyCustomData&gt; { }\n</code></pre> <p><code>JsonableExtensions</code> \u30af\u30e9\u30b9\u306f\u3001<code>IJsonable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u7c21\u5358\u306b\u4fdd\u5b58/\u8aad\u307f\u8fbc\u307f\u3059\u308b\u305f\u3081\u306e <code>SaveToJson</code> \u3084 <code>LoadFromJson</code> \u306a\u3069\u306e\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/variable/#_4","title":"\u30a8\u30c7\u30a3\u30bf\u7d71\u5408","text":"<p><code>Variable&lt;T&gt;</code> \u304a\u3088\u3073 <code>JsonableVariable&lt;T&gt;</code> \u30a2\u30bb\u30c3\u30c8\u306b\u306f\u3001\u4f7f\u3044\u3084\u3059\u3055\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0\u30a8\u30c7\u30a3\u30bf\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/features/variable/#variablet-variableeditor","title":"<code>Variable&lt;T&gt;</code> \u30a4\u30f3\u30b9\u30da\u30af\u30bf (<code>VariableEditor</code>)","text":"<ul> <li>\u5024\u306e\u8868\u793a: \u5909\u6570\u306e\u73fe\u5728\u306e <code>Value</code> \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002<code>T</code> \u304c\u8907\u96d1\u306a\u30b7\u30ea\u30a2\u30eb\u5316\u53ef\u80fd\u306a\u578b\u306e\u5834\u5408\u3001\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002</li> <li>Raise \u30dc\u30bf\u30f3: <code>GameEventEditor</code> \u304b\u3089\u7d99\u627f\u3055\u308c\u305f\u3053\u306e\u30dc\u30bf\u30f3\u306f\u3001\u5909\u6570\u306e <code>Raise(Value)</code> \u3092\u547c\u3073\u51fa\u3057\u3001\u30ea\u30b9\u30ca\u30fc\u306e\u30c6\u30b9\u30c8\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</li> <li>\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8a2d\u5b9a:</li> <li><code>Value Event Type</code>: <code>ValueAssign</code> \u307e\u305f\u306f <code>ValueChanged</code> \u3092\u9078\u629e\u3059\u308b\u305f\u3081\u306e\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u3002</li> <li><code>Auto Reset Value</code>: \u518d\u751f\u30e2\u30fc\u30c9\u7d42\u4e86\u6642\u306e\u81ea\u52d5\u5024\u30ea\u30bb\u30c3\u30c8\u3092\u6709\u52b9/\u7121\u52b9\u306b\u3059\u308b\u305f\u3081\u306e\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3002</li> </ul>"},{"location":"ja/features/variable/#jsonablevariablet-jsonablevariableeditor","title":"<code>JsonableVariable&lt;T&gt;</code> \u30a4\u30f3\u30b9\u30da\u30af\u30bf (<code>JsonableVariableEditor</code>)","text":"<p><code>Variable&lt;T&gt;</code> \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u306e\u3059\u3079\u3066\u306e\u6a5f\u80fd\u3092\u7d99\u627f\u3057\u3001\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a</p> <ul> <li>Json \u30d5\u30a1\u30a4\u30eb\u7ba1\u7406: \u5909\u6570\u306e\u30c7\u30fc\u30bf\u3092 JSON \u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u304a\u3088\u3073\u8aad\u307f\u8fbc\u307f\u3059\u308b\u305f\u3081\u306e\u6298\u308a\u305f\u305f\u307f\u30bb\u30af\u30b7\u30e7\u30f3\u3002</li> <li>Json Path Type: <code>Application.dataPath</code>\u3001<code>Application.persistentDataPath</code>\u3001\u307e\u305f\u306f\u30ab\u30b9\u30bf\u30e0\u30d1\u30b9\u304b\u3089\u9078\u629e\u3057\u307e\u3059\u3002</li> <li>File Name: JSON \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 <code>[VariableName].json</code> \u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</li> <li>Save to Json \u30dc\u30bf\u30f3: \u73fe\u5728\u306e\u5909\u6570\u306e <code>Value</code> \u3092\u6307\u5b9a\u3055\u308c\u305f JSON \u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002</li> <li>Load from Json \u30dc\u30bf\u30f3: \u6307\u5b9a\u3055\u308c\u305f JSON \u30d5\u30a1\u30a4\u30eb\u304b\u3089 <code>Value</code> \u3092\u5909\u6570\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/variable/#_5","title":"\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3068\u7834\u68c4","text":"<p><code>GameEvent&lt;T&gt;</code> \u304a\u3088\u3073 <code>SoarCore</code> \u304b\u3089\u6d3e\u751f\u3057\u3066\u3044\u308b\u305f\u3081\u3001<code>Variable&lt;T&gt;</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\uff1a</p> <ul> <li><code>ScriptableObject</code> \u3067\u3042\u308a\u3001<code>IDisposable</code> \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002</li> <li>\u30a8\u30c7\u30a3\u30bf\u30fc\u306e\u518d\u751f\u30e2\u30fc\u30c9\u306e\u72b6\u614b\u5909\u66f4\u3084\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u306e\u51e6\u7406\u3092\u542b\u3080\u3001SOAR \u306e\u521d\u671f\u5316\u304a\u3088\u3073\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u53c2\u52a0\u3057\u307e\u3059\u3002</li> <li><code>GameEvent&lt;T&gt;</code>\uff08\u3057\u305f\u304c\u3063\u3066 <code>Variable&lt;T&gt;</code>\uff09\u306e <code>value</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3059\u308b\u3068\u304d\u3001\u307e\u305f\u306f\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u304c\u7121\u52b9\u306b\u3055\u308c\u3066\u518d\u751f\u30e2\u30fc\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b <code>default(T)</code> \u306b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\uff08<code>GameEvent&lt;T&gt;.ResetInternal()</code> \u306e\u4e00\u90e8\u3068\u3057\u3066\uff09\u3002<code>Variable&lt;T&gt;</code> \u306e <code>autoResetValue</code> \u6a5f\u80fd\u306f\u3001<code>InitialValue</code> \u304c\u5fa9\u5143\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002</li> </ul>"},{"location":"ja/features/variable/#_6","title":"\u30b5\u30f3\u30d7\u30eb\u4f7f\u7528\u6cd5","text":"<p>\u3053\u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u3089\u95a2\u9023\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p></p> <p>The Variable \u30b5\u30f3\u30d7\u30eb\u306f\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u4f53\u529b\u3092\u8868\u3059\u5171\u6709\u306e <code>FloatVariable</code> \u30a2\u30bb\u30c3\u30c8\u306e\u5909\u66f4\u306b\u8907\u6570\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u3069\u306e\u3088\u3046\u306b\u53cd\u5fdc\u3059\u308b\u304b\u3092\u793a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u3001\u4f53\u529b\u3092\u6e1b\u5c11\u3055\u305b\u3001\u56de\u5fa9\u3055\u305b\u3001\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001\u3059\u3079\u3066\u304c\u4e92\u3044\u306b\u76f4\u63a5\u8a8d\u8b58\u3059\u308b\u3053\u3068\u306a\u304f\u540c\u3058\u30c7\u30fc\u30bf\u30a2\u30bb\u30c3\u30c8\u3068\u5bfe\u8a71\u3057\u307e\u3059\u3002</p> <p>\u8a73\u7d30\u306a\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3068\u4f7f\u7528\u624b\u9806\u306b\u3064\u3044\u3066\u306f\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u5f8c\u306b <code>VariableSamples</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>README.md</code> \u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/features/variable/#_7","title":"\u7279\u5225\u306a\u5909\u6570","text":""},{"location":"ja/features/variable/#cameravariable","title":"<code>CameraVariable</code>","text":"<p><code>CameraVariable</code> \u306b\u306f <code>fallbackType</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308a\u3001\u5024\u304c null \u306e\u5834\u5408\u306b <code>Camera.main</code> \u307e\u305f\u306f <code>Camera.current</code> \u306b\u30d5\u30a9\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5e38\u306b\u6709\u52b9\u306a\u30ab\u30e1\u30e9\u53c2\u7167\u304c\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p>"},{"location":"ja/features/variable/#boolvariable","title":"<code>BoolVariable</code>","text":"<p><code>BoolVariable</code> \u306b\u306f <code>ToggleValue()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001\u5024\u3092\u73fe\u5728\u306e\u5024\u306e\u53cd\u5bfe\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"ja/features/variable/#_8","title":"\u5024\u30aa\u30d6\u30b8\u30a7\u30af\u30c8","text":""},{"location":"ja/features/variable/#pairwisevaluet","title":"<code>PairwiseValue&lt;T&gt;</code>","text":"<p>\u5909\u6570\u306e\u53e4\u3044\u5024\u3068\u65b0\u3057\u3044\u5024\u306e\u4e21\u65b9\u3092\u4fdd\u6301\u3059\u308b\u69cb\u9020\u4f53\u3002\u3053\u308c\u306f <code>Variable&lt;T&gt;</code> \u306e <code>Subscribe</code> \u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/getting-started/installation/","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":""},{"location":"ja/getting-started/installation/#_2","title":"\u59cb\u3081\u308b\u524d\u306b","text":"<p>SOAR \u306f Unity \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002Unity 6.0 \u4ee5\u964d\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>SOAR \u306f\u72ec\u7acb\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001R3 \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u62e1\u5f35\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002SOAR \u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u3092\u6700\u5927\u9650\u306b\u5f15\u304d\u51fa\u3059\u305f\u3081\u306b\u3001R3 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002</p>"},{"location":"ja/getting-started/installation/#openupm","title":"OpenUPM","text":"<p>\u30b9\u30b3\u30fc\u30d7\u4ed8\u304d\u30ec\u30b8\u30b9\u30c8\u30ea\u7d4c\u7531\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u304b\u3089\u66f4\u65b0\u3057\u307e\u3059\u3002</p> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b OpenUPM \u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\uff1a</p> <ul> <li><code>Edit/Project Settings/Package Manager</code> \u3092\u958b\u304d\u307e\u3059\u3002</li> <li>\u65b0\u3057\u3044\u30b9\u30b3\u30fc\u30d7\u4ed8\u304d\u30ec\u30b8\u30b9\u30c8\u30ea\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff1a <pre><code>Name: OpenUPM\nURL:  https://package.openupm.com/\nScope(s):\n  - com.ripandy\n  - com.cysharp.r3 (\u63a8\u5968)\n</code></pre></li> <li><code>Save</code> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> <li><code>Window/Package Manager</code> \u3092\u958b\u304d\u307e\u3059\u3002</li> <li>\u5de6\u4e0a\u306e\u30c9\u30ed\u30c3\u30d7\u30c0\u30a6\u30f3\u3067 <code>My Registries</code> \u3092\u9078\u629e\u3057\u307e\u3059\u3002</li> <li><code>SOAR</code> \u3092\u9078\u629e\u3057\u3001<code>Install</code> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> <li><code>R3</code> \u3092\u9078\u629e\u3057\u3001<code>Install</code> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\uff08\u63a8\u5968\uff09\uff08\u6ce8\u3092\u53c2\u7167\uff09\u3002</li> </ul> <p>Note</p> <p>R3 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f\u3001NuGet \u304b\u3089\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001R3 Unity Installation \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"ja/getting-started/installation/#github-url","title":"GitHub URL","text":"<p>\u30a4\u30f3\u30dd\u30fc\u30c8\u306b\u306f GitHub \u30ea\u30f3\u30af\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002Unity 2021.2 \u4ee5\u964d\u3067\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u4f7f\u7528\u3057\u3066\u66f4\u65b0\u3057\u307e\u3059\u3002</p> <p>SOAR \u306f GitHub \u304b\u3089\u76f4\u63a5\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002 Unity 2021.2 \u4ee5\u964d\u3067\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u4f7f\u7528\u3057\u3066 main \u30d6\u30e9\u30f3\u30c1\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u66f4\u65b0\u3067\u304d\u307e\u3059\u3002 \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u518d\u5ea6\u8ffd\u52a0\u3057\u3066\u624b\u52d5\u3067\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u958b\u304d\u307e\u3059\u3002</li> <li><code>+</code> \u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> <li><code>Add from Git URL</code> \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002</li> <li>\u6b21\u306e URL \u3092\u8cbc\u308a\u4ed8\u3051\u307e\u3059\uff1a <code>https://github.com/ripandy/SOAR.git</code></li> <li><code>Add</code> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> </ul> <p>\u7279\u5b9a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306b\u306f\u3001SOAR \u306e\u30ea\u30ea\u30fc\u30b9\u30bf\u30b0\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u4f8b\uff1a <code>https://github.com/ripandy/SOAR.git#1.0.0</code></p>"},{"location":"ja/getting-started/installation/#_3","title":"\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30eb\u30c0\u306b\u30af\u30ed\u30fc\u30f3","text":"<p>SOAR \u3092\u72ec\u7acb\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30eb\u30c0\u306b\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\u3002</p> <p>SOAR \u306f\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30eb\u30c0\u306b\u30af\u30ed\u30fc\u30f3\u3057\u3066\u3001\u72ec\u7acb\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u305f\u3060\u3057\u3001SOAR \u306e\u6a5f\u80fd\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u5225\u306e Unity \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <ul> <li>SOAR \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30ed\u30fc\u30ab\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\u3002</li> <li>SOAR \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u3001\u5bfe\u8c61\u306e Unity \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u304d\u307e\u3059\u3002</li> <li><code>Window/Package Manager</code> \u3092\u958b\u304d\u307e\u3059\u3002</li> <li><code>+</code> \u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> <li><code>Install package from disk</code> \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002</li> <li>\u30af\u30ed\u30fc\u30f3\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089 <code>package.json</code> \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u307e\u3059\u3002</li> <li><code>Add</code> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002</li> </ul> <p>\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u30ed\u30fc\u30ab\u30eb\u30d1\u30c3\u30b1\u30fc\u30b8 (<code>file://</code>) \u3068\u3057\u3066 manifest.json \u306b\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001\u5bfe\u8c61\u306e Unity \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 \u5909\u66f4\u306f\u901a\u5e38\u901a\u308a git \u3067\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002 \u30d1\u30c3\u30b1\u30fc\u30b8\u30d1\u30b9\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u7d76\u5bfe\u30d1\u30b9\u306e\u4ee3\u308f\u308a\u306b\u76f8\u5bfe\u30d1\u30b9\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <pre><code>{\n  \"dependencies\": {\n    \"com.ripandy.soar\": \"file:../path/to/your/local/SOAR\"\n  }\n}\n</code></pre>"},{"location":"ja/getting-started/installation/#packages","title":"Packages \u30d5\u30a9\u30eb\u30c0\u306b\u30af\u30ed\u30fc\u30f3","text":"<p>\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092 Unity \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e <code>Packages</code> \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3059\uff1a <code>YourUnityProject/Packages/</code>\u3002</p> <p>Unity \u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30ab\u30b9\u30bf\u30e0\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001\u5bfe\u8c61\u306e Unity \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 \u5909\u66f4\u306f\u901a\u5e38\u901a\u308a git \u3067\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002 SOAR \u306f\u3001\u30e1\u30a4\u30f3\u306e git \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u30af\u30ed\u30fc\u30f3\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/getting-started/quick-start/","title":"\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8","text":""},{"location":"ja/getting-started/quick-start/#soar-scriptableobject","title":"SOAR \u306e ScriptableObject \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210","text":"<p>SOAR \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001<code>Create</code> \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u307e\u305f\u306f\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e <code>Assets/Create</code> \u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002 Project \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001\u4f5c\u6210\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u9078\u629e\u3057\u307e\u3059\u3002</p>"},{"location":"ja/getting-started/quick-start/#gameevent","title":"<code>GameEvent</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210","text":"<p><code>GameEvent</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001<code>Create/SOAR/Game Events/</code> \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u3044\u305a\u308c\u304b\u306e\u30a4\u30d9\u30f3\u30c8\u30bf\u30a4\u30d7\u3092\u9078\u629e\u3057\u307e\u3059\u3002</p> <p></p>"},{"location":"ja/getting-started/quick-start/#unityevents-gameevent","title":"UnityEvents \u304b\u3089 GameEvent \u3092\u767a\u884c\u3059\u308b","text":"<p>Unity UI \u306e\u30dc\u30bf\u30f3\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u306b\u306f\u3001\u4f5c\u6210\u3057\u305f GameEvent \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30dc\u30bf\u30f3\u306e OnClick \u30a4\u30d9\u30f3\u30c8\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002 \u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u305f\u3073\u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u3001\u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u901a\u77e5\u3055\u308c\u307e\u3059\u3002</p> <p></p>"},{"location":"ja/getting-started/quick-start/#unityeventbinder","title":"UnityEventBinder \u306e\u4f7f\u7528\u6cd5","text":"<p>Unity Event Binder \u306f\u3001<code>GameEvent</code> \u306b\u3088\u3063\u3066\u767a\u884c\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u3092 <code>UnityEvent</code> \u306b\u8ee2\u9001\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u5b9f\u88c5\u306e Unity \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3059\u3002 \u3053\u308c\u306f\u3001Scriptable Object Architecture \u306e\u7528\u8a9e\u3067\u306f <code>EventListener</code> \u3068\u3057\u3066\u3082\u77e5\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u4efb\u610f\u306e GameObject \u306b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3001<code>GameEventToListen</code> \u30d5\u30a3\u30fc\u30eb\u30c9\u306b GameEvent \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002</p> <p></p> <p>\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u308b\u3068\u3001\u5272\u308a\u5f53\u3066\u3089\u308c\u305f UnityEvent \u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</p> <p></p>"},{"location":"ja/getting-started/quick-start/#gameevent_1","title":"\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089 GameEvent \u3092\u767a\u884c\u3059\u308b","text":"<p>\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u306b\u306f\u3001<code>GameEvent</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e <code>Raise()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u308b\u3068\u3001\u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u901a\u77e5\u3055\u308c\u307e\u3059\u3002</p> <pre><code>using Soar.Events;\nusing UnityEngine;\n\npublic class GameEventPublisherExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private void Update()\n    {\n        if (Input.GetKeyDown(KeyCode.Space))\n        {\n            gameEvent.Raise();\n            Debug.Log($\"Game Event {gameEvent.name} Raised.\");\n        }\n    }\n}\n</code></pre>"},{"location":"ja/getting-started/quick-start/#gameevent_2","title":"\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089 GameEvent \u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b","text":"<p>\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u306b\u306f\u3001<code>GameEvent</code> \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e <code>Subscribe()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 \u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u3068\u3001\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u63d0\u4f9b\u3055\u308c\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</p> <pre><code>using System;\nusing Soar.Events;\nusing UnityEngine;\n\npublic class GameEventSubscriberExample : MonoBehaviour\n{\n    [SerializeField] private GameEvent gameEvent;\n\n    private IDisposable subscription;\n\n    private void Start()\n    {\n        subscription = gameEvent.Subscribe(OnGameEventRaised);\n    }\n\n    private void OnGameEventRaised()\n    {\n        Debug.Log($\"Game Event {gameEvent.name} Received.\");\n    }\n\n    private void OnDestroy()\n    {\n        subscription?.Dispose();\n    }\n}\n</code></pre>"},{"location":"ja/guides/creating-custom-assets/","title":"\u30ab\u30b9\u30bf\u30e0 SOAR \u30a2\u30bb\u30c3\u30c8\u306e\u4f5c\u6210","text":"<p>SOAR \u306b\u306f\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\uff08<code>IntVariable</code>\u3001<code>StringList</code> \u306a\u3069\uff09\u306b\u5bfe\u5fdc\u3057\u305f\u8c4a\u5bcc\u306a\u300c\u57fa\u672c\u300d\u30a2\u30bb\u30c3\u30c8\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u771f\u306e\u30dd\u30c6\u30f3\u30b7\u30e3\u30eb\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u5408\u308f\u305b\u305f\u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u5f15\u304d\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001\u4e00\u822c\u7684\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3067\u3042\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u306e\u7ba1\u7406\u306e\u305f\u3081\u306b\u3001\u30ab\u30b9\u30bf\u30e0 SOAR \u30a2\u30bb\u30c3\u30c8\u306e\u5b8c\u5168\u306a\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u793a\u3057\u307e\u3059\u3002</p> <p>\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30b7\u30f3\u30d7\u30eb\u3067\u4e00\u8cab\u6027\u304c\u3042\u308a\u3001\u5b9a\u578b\u30b3\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u4f5c\u6210\u3055\u308c\u308b\u3068\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30bb\u30c3\u30c8\u306f\u3001\u7d44\u307f\u8fbc\u307f\u578b\u3068\u540c\u69d8\u306b\u3001Unity \u306e <code>Assets &gt; Create</code> \u30e1\u30cb\u30e5\u30fc\u306b\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u7d71\u5408\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#playerdata","title":"\u4f8b\uff1a<code>PlayerData</code>","text":"<p>\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001\u6b21\u306e <code>PlayerData</code> \u69cb\u9020\u4f53\u3067\u52d5\u4f5c\u3059\u308b\u4e00\u9023\u306e SOAR \u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u69cb\u9020\u4f53\u306f\u3001\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u95a2\u3059\u308b\u3059\u3079\u3066\u306e\u91cd\u8981\u306a\u60c5\u5831\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5b9a\u7fa9","text":"<p>\u307e\u305a\u3001\u30c7\u30fc\u30bf\u7528\u306e\u65b0\u3057\u3044 C# \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6700\u3082\u91cd\u8981\u306a\u30b9\u30c6\u30c3\u30d7\u306f\u3001<code>struct</code> \u307e\u305f\u306f <code>class</code> \u306b <code>[System.Serializable]</code> \u5c5e\u6027\u3092\u30de\u30fc\u30af\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001Unity \u306f\u305d\u308c\u3092\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u8868\u793a\u3067\u304d\u307e\u3059\u3002</p> <pre><code>// File: PlayerData.cs\nusing System;\n\n[Serializable]\npublic struct PlayerData\n{\n    public string playerName;\n    public int level;\n    public float health;\n}\n</code></pre> <p>\u3053\u306e <code>PlayerData</code> \u69cb\u9020\u4f53\u3092\u4f7f\u7528\u3057\u3066\u3001<code>Variable</code>\u3001<code>GameEvent</code>\u3001<code>Collection</code>\u3001\u304a\u3088\u3073 <code>Transaction</code> \u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#2-variable","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u30ab\u30b9\u30bf\u30e0 <code>Variable</code> \u306e\u4f5c\u6210","text":"<p><code>Variable</code> \u306f\u3001\u5358\u4e00\u306e\u30c7\u30fc\u30bf\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002<code>PlayerDataVariable</code> \u3092\u4f5c\u6210\u3057\u3066\u3001\u73fe\u5728\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002</p> <p><code>PlayerDataVariable.cs</code> \u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>// File: PlayerDataVariable.cs\nusing Soar;\nusing Soar.Variables;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewPlayerDataVariable\", menuName = MenuHelper.DefaultVariableMenu + \"Player Data\")]\npublic class PlayerDataVariable : Variable&lt;PlayerData&gt; { }\n</code></pre> <p><code>[CreateAssetMenu]</code> \u5c5e\u6027\u306b\u3088\u308a\u3001\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002<code>MenuHelper.DefaultVariableMenu</code> \u306f\u3001\u4ed6\u306e\u3059\u3079\u3066\u306e\u5909\u6570\u3068\u540c\u3058\u30b5\u30d6\u30e1\u30cb\u30e5\u30fc\uff08<code>SOAR &gt; Variables</code>\uff09\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002</p> <p>\u7d50\u679c\uff1a <code>Assets &gt; Create &gt; SOAR &gt; Variables &gt; Player Data</code> \u304b\u3089\u65b0\u3057\u3044 <code>PlayerDataVariable</code> \u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#3-gameevent","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u30ab\u30b9\u30bf\u30e0 <code>GameEvent</code> \u306e\u4f5c\u6210","text":"<p><code>GameEvent</code> \u306f\u3001\u4f55\u304b\u304c\u8d77\u3053\u3063\u305f\u3053\u3068\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002<code>PlayerDataGameEvent</code> \u3092\u4f7f\u7528\u3057\u3066\u3001\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u63a5\u7d9a\u3057\u305f\u3068\u304d\u3001\u307e\u305f\u306f\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306b\u901a\u77e5\u3067\u304d\u307e\u3059\u3002</p> <p><code>PlayerDataGameEvent.cs</code> \u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>// File: PlayerDataGameEvent.cs\nusing Soar;\nusing Soar.Events;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewPlayerDataEvent\", menuName = MenuHelper.DefaultGameEventMenu + \"Player Data\")]\npublic class PlayerDataGameEvent : GameEvent&lt;PlayerData&gt; { }\n</code></pre> <p>\u7d50\u679c\uff1a \u3053\u306e\u30a4\u30d9\u30f3\u30c8\u306f <code>Assets &gt; Create &gt; SOAR &gt; Game Events &gt; Player Data</code> \u304b\u3089\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#4-collection-list","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u30ab\u30b9\u30bf\u30e0 <code>Collection</code> (List) \u306e\u4f5c\u6210","text":"<p><code>Collection</code> \u306f\u3001\u30a2\u30a4\u30c6\u30e0\u306e\u30ea\u30b9\u30c8\u307e\u305f\u306f\u8f9e\u66f8\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002<code>PlayerDataList</code> \u3092\u4f5c\u6210\u3057\u3066\u3001\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30ed\u30d3\u30fc\u306e\u3059\u3079\u3066\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30ea\u30b9\u30c8\u3092\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002</p> <p><code>PlayerDataList.cs</code> \u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>// File: PlayerDataList.cs\nusing Soar;\nusing Soar.Collections;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewPlayerDataList\", menuName = MenuHelper.DefaultListMenu + \"Player Data\")]\npublic class PlayerDataList : SoarList&lt;PlayerData&gt; { }\n</code></pre> <p>\u7d50\u679c\uff1a \u3053\u306e\u30ea\u30b9\u30c8\u306f <code>Assets &gt; Create &gt; SOAR &gt; Lists &gt; Player Data</code> \u304b\u3089\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#5-transaction","title":"\u30b9\u30c6\u30c3\u30d75\uff1a\u30ab\u30b9\u30bf\u30e0 <code>Transaction</code> \u306e\u4f5c\u6210","text":"<p><code>Transaction</code> \u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u30b5\u30a4\u30af\u30eb\u3092\u51e6\u7406\u3057\u307e\u3059\u3002<code>FetchPlayerDataTransaction</code> \u3092\u4f5c\u6210\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3068\u3057\u3066 <code>string</code>\uff08\u30d7\u30ec\u30a4\u30e4\u30fc\u306e ID\uff09\u3092\u53d7\u3051\u53d6\u308a\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u5bfe\u5fdc\u3059\u308b <code>PlayerData</code> \u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p><code>FetchPlayerDataTransaction.cs</code> \u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>// File: FetchPlayerDataTransaction.cs\nusing Soar;\nusing Soar.Transactions;\nusing UnityEngine;\n\n[CreateAssetMenu(fileName = \"NewFetchPlayerDataTransaction\", menuName = MenuHelper.DefaultTransactionMenu + \"Fetch Player Data\")]\npublic class FetchPlayerDataTransaction : Transaction&lt;string, PlayerData&gt; { }\n</code></pre> <p>\u7d50\u679c\uff1a \u3053\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f <code>Assets &gt; Create &gt; SOAR &gt; Transactions &gt; Fetch Player Data</code> \u304b\u3089\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#6-unityeventbinder","title":"\u30b9\u30c6\u30c3\u30d76\uff1a\u30ab\u30b9\u30bf\u30e0 <code>UnityEventBinder</code> \u306e\u4f5c\u6210","text":"<p>\u65b0\u3057\u3044 <code>PlayerDataGameEvent</code> \u3092\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u7c21\u5358\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306b\u3001\u30ab\u30b9\u30bf\u30e0 <code>UnityEventBinder</code> \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p><code>PlayerDataUnityEventBinder.cs</code> \u3068\u3044\u3046\u540d\u524d\u306e\u65b0\u3057\u3044\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>// File: PlayerDataUnityEventBinder.cs\nusing Soar.Events;\n\npublic class PlayerDataUnityEventBinder : UnityEventBinder&lt;PlayerData&gt; { }\n</code></pre> <p>\u7d50\u679c\uff1a <code>PlayerDataUnityEventBinder</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4efb\u610f\u306e <code>GameObject</code> \u306b\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u308a\u3001<code>PlayerDataGameEvent</code> \u3092\u30ea\u30c3\u30b9\u30f3\u3057\u3001<code>UnityEvent&lt;PlayerData&gt;</code> \u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306e\u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u76f4\u63a5\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/guides/creating-custom-assets/#_1","title":"\u7d50\u8ad6","text":"<p>\u3053\u306e\u30b7\u30f3\u30d7\u30eb\u3067\u4e00\u8cab\u6027\u306e\u3042\u308b\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306e\u3042\u3089\u3086\u308b\u30c7\u30fc\u30bf\u578b\u306b\u5bfe\u3057\u3066\u3001\u5805\u7262\u3067\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u3001\u304b\u3064\u30a8\u30c7\u30a3\u30bf\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u304c\u3088\u308a\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3001\u30c6\u30b9\u30c8\u304c\u5bb9\u6613\u306b\u306a\u308a\u3001\u30c1\u30fc\u30e0\u5168\u4f53\u304c\u8ffd\u52a0\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u306a\u304f\u3001Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u76f4\u63a5\u8907\u96d1\u306a\u30ed\u30b8\u30c3\u30af\u3092\u63a5\u7d9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"ja/guides/performance-best-practices/","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"ja/guides/performance-best-practices/#_2","title":"\u30d0\u30e9\u30f3\u30b9\u306e\u53d6\u308c\u305f\u8996\u70b9","text":"<p>SOAR \u306f\u3001\u30af\u30ea\u30fc\u30f3\u3067\u758e\u7d50\u5408\u3001\u304b\u3064\u4fdd\u5b88\u3057\u3084\u3059\u3044\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u305f\u3081\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002UI \u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3001\u30a4\u30f3\u30d9\u30f3\u30c8\u30ea\u7ba1\u7406\u3001\u30af\u30a8\u30b9\u30c8\u306e\u66f4\u65b0\u3001\u30b2\u30fc\u30e0\u306e\u72b6\u614b\u5909\u66f4\u306a\u3069\u3001\u30b2\u30fc\u30e0\u958b\u767a\u306e\u30b7\u30ca\u30ea\u30aa\u306e\u5927\u90e8\u5206\u306b\u304a\u3044\u3066\u3001SOAR \u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3054\u304f\u308f\u305a\u304b\u3067\u3042\u308a\u3001\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4e0a\u306e\u5229\u70b9\u306f\u8a08\u308a\u77e5\u308c\u307e\u305b\u3093\u3002</p> <p>\u3053\u306e\u30ac\u30a4\u30c9\u306f\u3001SOAR \u306e\u6a5f\u80fd\u306e\u4f7f\u7528\u3092\u601d\u3044\u3068\u3069\u307e\u3089\u305b\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306b\u4f7f\u7528\u3057\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u91cd\u8981\u306b\u306a\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u72b6\u6cc1\u3092\u7279\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u5185\u90e8\u3067\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u304b\u3092\u900f\u904e\u7684\u306b\u898b\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u9069\u5316\u306e\u9ec4\u91d1\u5f8b\u306f\u5e38\u306b\u9069\u7528\u3055\u308c\u307e\u3059\uff1a\u307e\u305a\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3057\u3001\u6b21\u306b\u6700\u9069\u5316\u3059\u308b\u3002</p>"},{"location":"ja/guides/performance-best-practices/#_3","title":"\u6700\u3082\u91cd\u8981\u306a\u5358\u4e00\u306e\u30eb\u30fc\u30eb\uff1a\u9ad8\u983b\u5ea6\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u907f\u3051\u308b","text":"<p>\u7d4c\u9a13\u5247\u3068\u3057\u3066\u3001\u30a4\u30d9\u30f3\u30c8\u3084\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u5909\u6570\u306f\u3001\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306b\u6570\u767e\u56de\u307e\u305f\u306f\u6570\u5343\u56de\u5b9f\u884c\u3055\u308c\u308b\u30ed\u30b8\u30c3\u30af\u306b\u306f\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002</p> <p>Pub/Sub \u30d1\u30bf\u30fc\u30f3\u306b\u306f\u3001<code>Raise()</code> \u547c\u3073\u51fa\u3057\u3054\u3068\u306b\u5c0f\u3055\u306a\u56fa\u5b9a\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u30dc\u30bf\u30f3\u306e\u30af\u30ea\u30c3\u30af\u3067\u306f\u91cd\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4e0d\u9069\u5207\u306b\u4f7f\u7528\u3059\u308b\u3068\u9855\u8457\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>\u60aa\u3044\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff1a\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306e\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u4f4d\u7f6e</p> <pre><code>// PlayerController.cs \u306e Update() \u5185\n// \u30a2\u30f3\u30c1\u30d1\u30bf\u30fc\u30f3\uff1a\u3053\u308c\u306f\u907f\u3051\u308b\u3079\u304d\u3067\u3059\uff01\nvoid Update()\n{\n    // \u3053\u308c\u306f\u6bce\u30d5\u30ec\u30fc\u30e0\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u3001\u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u901a\u77e5\u3057\u307e\u3059\u3002\n    playerPositionVariable.Value = transform.position; \n}\n</code></pre> <p>\u3053\u306e\u3088\u3046\u306a\u9ad8\u983b\u5ea6\u306e\u30c7\u30fc\u30bf\u306e\u5834\u5408\u3001\u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u5fc5\u8981\u306a\u3068\u304d\u306b <code>PlayerController</code> \u307e\u305f\u306f\u95a2\u9023\u3059\u308b\u30c7\u30fc\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3078\u306e\u76f4\u63a5\u53c2\u7167\u3092\u4fdd\u6301\u3057\u3066\u30c7\u30fc\u30bf\u3092\u30d7\u30eb\u3059\u308b\u65b9\u304c\u9069\u5207\u3067\u3059\u3002SOAR \u306f\u3001\u7d99\u7d9a\u7684\u306a\u72b6\u614b\u306e\u66f4\u65b0\u3067\u306f\u306a\u304f\u3001\u72b6\u614b\u306e\u5909\u66f4\u306b\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"ja/guides/performance-best-practices/#_4","title":"\u6a5f\u80fd\u3054\u3068\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u5185\u8a33","text":""},{"location":"ja/guides/performance-best-practices/#1-gameevent-variable","title":"1. <code>GameEvent</code> \u3068 <code>Variable</code>","text":"<ul> <li>\u4f55\u304c\u8d77\u3053\u308b\u304b\uff1a <code>Raise()</code> \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001<code>GameEvent</code> \u306f\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306e\u5185\u90e8\u30ea\u30b9\u30c8\u3092\u53cd\u5fa9\u51e6\u7406\u3057\u3001\u305d\u308c\u305e\u308c\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002<code>Variable</code> \u306e\u5834\u5408\u3001<code>.Value</code> \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u540c\u3058\u3053\u3068\u304c\u884c\u308f\u308c\u307e\u3059\u3002</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30b3\u30b9\u30c8\uff1a<ul> <li>\u30b3\u30b9\u30c8\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306e\u6570\u306b\u6bd4\u4f8b\u3057\u307e\u3059\u3002\u30ea\u30b9\u30ca\u30fc\u304c\u591a\u3044\u307b\u3069\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u591a\u304f\u306a\u308a\u307e\u3059\u3002</li> <li>\u76f4\u63a5\u306e C# \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3068\u6bd4\u8f03\u3057\u3066\u308f\u305a\u304b\u306a\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3067\u306f\u975e\u5e38\u306b\u9ad8\u901f\u3067\u3059\u3002</li> </ul> </li> <li>\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\uff1a<ul> <li><code>ValueChanged</code> vs. <code>ValueAssign</code>\uff1a <code>Variable</code> \u3092\u4f5c\u6210\u3059\u308b\u3068\u3001<code>valueEventType</code> \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 <code>ValueChanged</code> \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u4e00\u822c\u7684\u306b\u671b\u307e\u3057\u3044\u52d5\u4f5c\u3067\u3059\u3002\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308b\u524d\u306b\u7b49\u4fa1\u6027\u30c1\u30a7\u30c3\u30af\uff08<code>.Equals()</code>\uff09\u304c\u5b9f\u884c\u3055\u308c\u3001\u5024\u304c\u5b9f\u969b\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u901a\u77e5\u304c\u9632\u6b62\u3055\u308c\u307e\u3059\u3002\u8907\u96d1\u306a <code>struct</code> \u578b\u306e\u5834\u5408\u3001\u3053\u308c\u3092\u52b9\u7387\u7684\u306b\u3059\u308b\u305f\u3081\u306b\u30ab\u30b9\u30bf\u30e0\u306e <code>.Equals()</code> \u5b9f\u88c5\u304c\u5fc5\u8981\u306b\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002<code>ValueAssign</code> \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30c1\u30a7\u30c3\u30af\u304c\u30b9\u30ad\u30c3\u30d7\u3055\u308c\u308b\u305f\u3081\u308f\u305a\u304b\u306b\u9ad8\u901f\u3067\u3059\u304c\u3001\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d0\u30fc\u306b\u3088\u3063\u3066\u4e0d\u8981\u306a\u30ed\u30b8\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u89e3\u9664\uff1a \u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u5e38\u306b\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002SOAR \u306e <code>CompositeDisposable</code> \u3068 R3 \u306e <code>AddTo(this)</code> \u3092\u4f7f\u7528\u3059\u308b\u3068\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u3001\u4e0d\u5fc5\u8981\u306b\u30ea\u30bd\u30fc\u30b9\u3092\u6d88\u8cbb\u3057\u7d9a\u3051\u308b\u300c\u30be\u30f3\u30d3\u300d\u30ea\u30b9\u30ca\u30fc\u304c\u6b8b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</li> </ul> </li> </ul>"},{"location":"ja/guides/performance-best-practices/#2-collection","title":"2. <code>Collection</code> (\u30ea\u30b9\u30c8\u3068\u8f9e\u66f8)","text":"<ul> <li>\u4f55\u304c\u8d77\u3053\u308b\u304b\uff1a <code>SoarList</code> \u307e\u305f\u306f <code>SoarDictionary</code> \u3092\u5909\u66f4\u3059\u308b\u3068\u3001\u8907\u6570\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001<code>Add()</code> \u306f <code>OnAdd</code>\u3001<code>OnValueChanged</code>\u3001\u304a\u3088\u3073 <code>OnCountChanged</code> \u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059\u3002</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30b3\u30b9\u30c8\uff1a \u30b3\u30b9\u30c8\u306f\u3001\u6a19\u6e96\u306e C# <code>List&lt;T&gt;</code> \u307e\u305f\u306f <code>Dictionary&lt;&gt;</code> \u3092\u5909\u66f4\u3059\u308b\u3088\u308a\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002</li> <li>\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\uff1a<ul> <li>\u30d0\u30c3\u30c1\u64cd\u4f5c\uff1a \u4e00\u5ea6\u306b\u591a\u304f\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u8ffd\u52a0\u307e\u305f\u306f\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u500b\u5225\u306e <code>Add()</code> \u547c\u3073\u51fa\u3057\u306e\u30eb\u30fc\u30d7\u3067\u305d\u308c\u3092\u884c\u3046\u3053\u3068\u306f\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002SOAR \u306b\u306f\u5358\u4e00\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u771f\u306e\u300c\u30d0\u30c3\u30c1\u300d\u30e2\u30fc\u30c9\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30ed\u30b8\u30c3\u30af\u3092\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u304c\u30af\u30ea\u30fc\u30f3\u306b\u306a\u308a\u3001\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002</li> <li>\u8ce2\u660e\u306a\u9078\u629e\uff1a \u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u304c\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u3067\u3042\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u5358\u4e00\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u306e\u307f\u4f7f\u7528\u3055\u308c\u308b\u5834\u5408\u306f\u3001<code>MonoBehaviour</code> \u5185\u306e\u6a19\u6e96\u306e <code>List&lt;T&gt;</code> \u306e\u65b9\u304c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002<code>SoarList</code> \u306f\u3001\u8907\u6570\u306e\u758e\u7d50\u5408\u30b7\u30b9\u30c6\u30e0\u304c\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5909\u66f4\u3055\u308c\u305f\u3053\u3068\u3092\u660e\u793a\u7684\u306b\u901a\u77e5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> </ul> </li> </ul>"},{"location":"ja/guides/performance-best-practices/#3-jsonablevariable-autoresetvalue","title":"3. <code>JsonableVariable</code> \u3068 <code>autoResetValue</code>","text":"<p>\u3053\u308c\u306f\u3001\u6700\u3082\u91cd\u8981\u3067\u660e\u767d\u3067\u306a\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30b3\u30b9\u30c8\u304c\u767a\u751f\u3059\u308b\u9818\u57df\u3067\u3059\u3002</p> <ul> <li>\u4f55\u304c\u8d77\u3053\u308b\u304b\uff1a \u8907\u96d1\u306a\u30af\u30e9\u30b9\u578b\u306e <code>autoResetValue</code> \u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u305f\u3081\u306b\u3001<code>Variable&lt;T&gt;</code> \u306f\u3001\u521d\u671f\u5024\u3092 JSON \u6587\u5b57\u5217\u306b\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3053\u3068\u3067\u300c\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u300d\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002<code>ResetValue()</code> \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001\u3053\u306e\u6587\u5b57\u5217\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\u3002</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30b3\u30b9\u30c8\uff1a<ul> <li>GC \u5272\u308a\u5f53\u3066\uff1a <code>JsonUtility.ToJson()</code> \u306f\u3001\u30de\u30cd\u30fc\u30b8\u30c9\u30d2\u30fc\u30d7\u306b\u6587\u5b57\u5217\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30bf\u30fc\uff08GC\uff09\u304c\u5f8c\u3067\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u306e\u3042\u308b\u30ac\u30d9\u30fc\u30b8\u304c\u4f5c\u6210\u3055\u308c\u3001\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u306e\u4f4e\u4e0b\u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>CPU \u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\uff1a \u30b7\u30ea\u30a2\u30eb\u5316\u3068\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u306f\u3001\u5358\u7d14\u306a\u5024\u306e\u5272\u308a\u5f53\u3066\u3088\u308a\u3082\u8a08\u7b97\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002</li> <li>\u3053\u306e\u30b3\u30b9\u30c8\u306f\u3001\u30af\u30e9\u30b9\u578b\u3092\u4f7f\u7528\u3059\u308b\u3059\u3079\u3066\u306e <code>Variable</code> \u306b\u5bfe\u3057\u3066\u521d\u671f\u5316\u6642\uff08\u30b2\u30fc\u30e0\u306e\u958b\u59cb\u6642\u3084\u30a8\u30c7\u30a3\u30bf\u30fc\u306e\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306a\u3069\uff09\u306b\u652f\u6255\u308f\u308c\u307e\u3059\u3002</li> </ul> </li> <li>\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\uff1a<ul> <li>\u69cb\u9020\u4f53\u3068\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u5f37\u304f\u63a8\u5968\uff1a <code>autoResetValue</code> \u304c\u5fc5\u8981\u306a <code>Variable</code> \u306b\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\uff08<code>int</code>\u3001<code>float</code>\u3001<code>bool</code>\uff09\u307e\u305f\u306f <code>struct</code> \u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u5024\u3067\u30b3\u30d4\u30fc\u3055\u308c\u308b\u305f\u3081\u3001JSON \u30b7\u30ea\u30a2\u30eb\u5316\u30d1\u30b9\u3092\u5b8c\u5168\u306b\u56de\u907f\u3067\u304d\u307e\u3059\u3002</li> <li>\u30af\u30e9\u30b9\u306e <code>autoResetValue</code> \u3092\u7121\u52b9\u306b\u3059\u308b\uff1a <code>Variable</code> \u3067\u30af\u30e9\u30b9\u578b\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\uff08\u4f8b\uff1a<code>MyDataClassVariable</code>\uff09\u3001\u30ea\u30bb\u30c3\u30c8\u52d5\u4f5c\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f <code>autoResetValue</code> \u3092\u7121\u52b9\u306b\u3059\u308b\u304b\u3001\u30ea\u30bb\u30c3\u30c8\u3092\u624b\u52d5\u3067\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u8d77\u52d5\u30b3\u30b9\u30c8\u306b\u6ce8\u610f\uff1a \u3053\u308c\u3089\u306e\u5909\u6570\u304c\u6570\u767e\u500b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u4e2d\u306b\u5c0f\u3055\u306a\u9045\u5ef6\u304c\u76ee\u7acb\u3064\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u304c\u7406\u7531\u3067\u3059\u3002</li> </ul> </li> </ul>"},{"location":"ja/guides/performance-best-practices/#4-r3","title":"4. R3 \u3068\u306e\u9023\u643a","text":"<ul> <li>\u4f55\u304c\u8d77\u3053\u308b\u304b\uff1a R3 \u306e LINQ \u30b9\u30bf\u30a4\u30eb\u306e\u6f14\u7b97\u5b50\uff08<code>Where</code>\u3001<code>Select</code>\u3001<code>CombineLatest</code> \u306a\u3069\uff09\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u5c0f\u3055\u306a\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c1\u30a7\u30fc\u30f3\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30b3\u30b9\u30c8\uff1a R3 \u306f\u9ad8\u5ea6\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30c1\u30a7\u30fc\u30f3\u5185\u306e\u3059\u3079\u3066\u306e\u6f14\u7b97\u5b50\u306f\u3001\u5c0f\u3055\u306a\u5272\u308a\u5f53\u3066\u3068\u9593\u63a5\u53c2\u7167\u306e\u30ec\u30a4\u30e4\u30fc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u975e\u5e38\u306b\u9577\u304f\u8907\u96d1\u306a\u30c1\u30a7\u30fc\u30f3\u306f\u3001\u5358\u7d14\u306a <code>Subscribe()</code> \u3088\u308a\u3082\u591a\u304f\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\uff1a<ul> <li>\u81ea\u4fe1\u3092\u6301\u3063\u3066\u4f7f\u7528\u3059\u308b\uff1a \u3053\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3054\u304f\u308f\u305a\u304b\u3067\u3042\u308a\u3001R3 \u306e\u8868\u73fe\u529b\u306f\u8a08\u308a\u77e5\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u4f7f\u7528\u3057\u306a\u3044\u7406\u7531\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002</li> <li>\u63a8\u6e2c\u305b\u305a\u306b\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3059\u308b\uff1a \u975e\u5e38\u306b\u8907\u96d1\u306a\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3067\u3042\u308b\u3068\u7591\u308f\u308c\u308b\u5834\u5408\u306f\u3001Unity \u30d7\u30ed\u30d5\u30a1\u30a4\u30e9\u30fc\u3092\u4f7f\u7528\u3057\u3066\u8abf\u67fb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u300299% \u306e\u5834\u5408\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u554f\u984c\u306e\u539f\u56e0\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</li> </ul> </li> </ul>"},{"location":"ja/guides/performance-best-practices/#_5","title":"\u307e\u3068\u3081\u3068\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u2705 SOAR \u306f\u3001UI\u3001\u30b2\u30fc\u30e0\u306e\u72b6\u614b\u3001\u304a\u3088\u3073\u500b\u5225\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u5fdc\u7b54\u3059\u308b\u30ed\u30b8\u30c3\u30af\u306b\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u274c SOAR \u306f\u3001\u6bce\u30d5\u30ec\u30fc\u30e0\u767a\u751f\u3059\u308b\u9ad8\u983b\u5ea6\u306e\u66f4\u65b0\u306b\u306f\u4f7f\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002</li> <li>\ud83e\udde0 \u30af\u30e9\u30b9\u578b\u3067\u306e <code>autoResetValue</code> \u6a5f\u80fd\u306f\u6ce8\u610f\u3057\u3066\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002JSON \u30b7\u30ea\u30a2\u30eb\u5316\u3092\u4f7f\u7528\u3057\u3001\u30ac\u30d9\u30fc\u30b8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u69cb\u9020\u4f53\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002</li> <li>\u2696\ufe0f <code>Collection</code> \u3078\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u306f\u3001\u6a19\u6e96\u306e C# <code>List</code> \u3092\u5909\u66f4\u3059\u308b\u3088\u308a\u3082\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u30ea\u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\ud83d\uddd1\ufe0f \u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3084\u4e0d\u8981\u306a\u4f5c\u696d\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u5e38\u306b\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> </ul>"},{"location":"ja/guides/soar-lifecycle/","title":"SOAR \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb (SoarCore)","text":"<p><code>GameEvent</code> \u304b\u3089 <code>Variable</code>\u3001<code>Collection</code> \u306b\u81f3\u308b\u307e\u3067\u3001SOAR \u306e\u3059\u3079\u3066\u306e\u30a2\u30bb\u30c3\u30c8\u306f\u3001\u5358\u4e00\u306e\u91cd\u8981\u306a\u57fa\u672c\u30af\u30e9\u30b9\u3067\u3042\u308b <code>SoarCore</code> \u3092\u7d99\u627f\u3057\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5fc3\u81d3\u90e8\u3067\u3042\u308a\u3001\u3059\u3079\u3066\u306e SOAR \u30a2\u30bb\u30c3\u30c8\u304c Unity \u30a8\u30c7\u30a3\u30bf\u30fc\u5185\u304a\u3088\u3073\u30d3\u30eb\u30c9\u3067\u4e88\u6e2c\u53ef\u80fd\u304b\u3064\u78ba\u5b9f\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u7ba1\u7406\u3055\u308c\u305f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u3001SOAR \u3092\u30de\u30b9\u30bf\u30fc\u3059\u308b\u305f\u3081\u306e\u9375\u3067\u3059\u3002</p> <p><code>SoarCore</code> \u306e\u4e3b\u306a\u76ee\u7684\u306f\u3001\u30b7\u30fc\u30f3\u306e\u5916\u90e8\u306b\u5b58\u5728\u3059\u308b <code>ScriptableObject</code> \u30a2\u30bb\u30c3\u30c8\u3068\u3001\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u3078\u306e\u51fa\u5165\u308a\u306a\u3069\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u30a4\u30d9\u30f3\u30c8\u3068\u306e\u9593\u306e\u30ae\u30e3\u30c3\u30d7\u3092\u57cb\u3081\u308b\u3053\u3068\u3067\u3059\u3002</p>"},{"location":"ja/guides/soar-lifecycle/#_1","title":"\u30b3\u30a2\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30e1\u30bd\u30c3\u30c9","text":"<p>\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306f\u3001<code>SoarCore</code> \u306b\u3088\u3063\u3066 <code>OnEnable</code>\u3001<code>Initialize</code>\u3001<code>OnQuit</code> \u306e3\u3064\u306e\u4e3b\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4ecb\u3057\u3066\u7ba1\u7406\u3055\u308c\u307e\u3059\u3002</p> <ol> <li> <p><code>OnEnable()</code></p> <ul> <li>\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\uff1a \u3053\u308c\u306f\u3001<code>ScriptableObject</code> \u304c\u30ed\u30fc\u30c9\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u6a19\u6e96\u306e Unity \u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8d77\u52d5\u6642\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u5f8c\u3001\u307e\u305f\u306f\u30a2\u30bb\u30c3\u30c8\u304c\u6700\u521d\u306b\u30a4\u30f3\u30b9\u30da\u30af\u30c8\u3055\u308c\u305f\u3068\u304d\u306b\u767a\u751f\u3057\u307e\u3059\u3002</li> <li>\u4f55\u3092\u3059\u308b\u304b\uff1a <code>OnEnable</code> \u3067\u306e <code>SoarCore</code> \u306e\u4e3b\u306a\u4ed5\u4e8b\u306f\u3001\u5185\u90e8\u72b6\u614b\u3092\u8a2d\u5b9a\u3057\u3001\u91cd\u8981\u306a\u30a8\u30c7\u30a3\u30bf\u30fc\u304a\u3088\u3073\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\u3053\u3068\u3067\u3059\u3002<code>Initialize()</code> \u306f\u76f4\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</li> </ul> </li> <li> <p><code>Initialize()</code></p> <ul> <li>\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\uff1a <code>OnEnable</code> \u306b\u3088\u3063\u3066\u81ea\u52d5\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</li> <li>\u4f55\u3092\u3059\u308b\u304b\uff1a \u3053\u3053\u3067\u3001\u5404 SOAR \u30a2\u30bb\u30c3\u30c8\u306e\u300c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u300d\u30ed\u30b8\u30c3\u30af\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001<code>Variable</code> \u306f\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u4e2d\u306b\u73fe\u5728\u306e\u5024\u3092 <code>InitialValue</code> \u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002<code>Transaction</code> \u306f\u3001\u5185\u90e8\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3082 <code>Application.exitCancellationToken</code> \u306b\u767b\u9332\u3055\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u9589\u3058\u308b\u3068\u304d\u306b <code>OnQuit</code> \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002</li> </ul> </li> <li> <p><code>OnQuit()</code></p> <ul> <li>\u547c\u3073\u51fa\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\uff1a \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u9589\u3058\u308b\u3068\u304d\uff08\u30d3\u30eb\u30c9\u5185\uff09\u307e\u305f\u306f\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b\u81ea\u52d5\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</li> <li>\u4f55\u3092\u3059\u308b\u304b\uff1a \u3053\u308c\u306f\u300c\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u300d\u30d5\u30a7\u30fc\u30ba\u3067\u3059\u3002\u3042\u308b\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30c7\u30fc\u30bf\u304c\u6b21\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u300c\u30ea\u30fc\u30af\u300d\u3059\u308b\u306e\u3092\u9632\u3050\u305f\u3081\u306b\u3001SOAR \u30a2\u30bb\u30c3\u30c8\u306e\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u8cac\u4efb\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001<code>autoResetValue</code> \u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b <code>Variable</code> \u306f\u3001<code>InitialValue</code> \u306b\u623b\u308a\u307e\u3059\u3002<code>GameEvent</code> \u5185\u306e\u3059\u3079\u3066\u306e\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u9632\u3050\u305f\u3081\u306b\u7834\u68c4\u3055\u308c\u307e\u3059\u3002</li> </ul> </li> </ol>"},{"location":"ja/guides/soar-lifecycle/#_2","title":"\u300c\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u306e\u7121\u52b9\u5316\u300d\u30a8\u30c3\u30b8\u30b1\u30fc\u30b9","text":"<p>Unity \u306e\u300c\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306b\u5165\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3067\u306f\u3001\u3088\u308a\u9ad8\u901f\u306a\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002SOAR \u306f\u3053\u306e\u30b7\u30ca\u30ea\u30aa\u3092\u6b63\u3057\u304f\u51e6\u7406\u3059\u308b\u3088\u3046\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u52d5\u4f5c\u306f\u308f\u305a\u304b\u306b\u7570\u306a\u308a\u307e\u3059\u3002</p> <ul> <li>\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u3042\u308a\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\uff09\uff1a \u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u3092\u7d42\u4e86\u3059\u308b\u3068\u3001\u3059\u3079\u3066\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u72b6\u614b\u304c Unity \u306b\u3088\u3063\u3066\u30ef\u30a4\u30d7\u304a\u3088\u3073\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306b\u518d\u5165\u3059\u308b\u3068\u3001<code>OnEnable</code> \u3068 <code>Initialize</code> \u304c\u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002</li> <li>\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u306a\u3057\uff1a \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u72b6\u614b\u306f\u30ef\u30a4\u30d7\u3055\u308c\u307e\u305b\u3093\u3002\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u30bb\u30c3\u30b7\u30e7\u30f3\u9593\u3067\u6c38\u7d9a\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u3001<code>SoarCore</code> \u304c\u300c\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u300d\u3068\u300c\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u300d\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u624b\u52d5\u3067\u7ba1\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> </ul> <p>\u30c9\u30e1\u30a4\u30f3\u30ea\u30ed\u30fc\u30c9\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u30d5\u30ed\u30fc\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff1a</p> <ol> <li>\u7de8\u96c6\u30e2\u30fc\u30c9\u306e\u7d42\u4e86\uff08\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u3078\u306e\u79fb\u884c\uff09\uff1a <code>SoarCore</code> \u306f <code>Initialize()</code> \u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u30a2\u30bb\u30c3\u30c8\u304c\u65b0\u3057\u3044\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u65b0\u3057\u3044\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</li> <li>\u30d7\u30ec\u30a4\u30e2\u30fc\u30c9\u306e\u7d42\u4e86\uff08\u7de8\u96c6\u30e2\u30fc\u30c9\u3078\u306e\u518d\u79fb\u884c\uff09\uff1a <code>SoarCore</code> \u306f <code>OnQuit()</code> \u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3066\u3044\u308b\u5834\u5408\u3068\u540c\u69d8\u306b\u3001\u5909\u6570\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3001\u30ea\u30bb\u30c3\u30c8\u3057\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u7834\u68c4\u3057\u307e\u3059\u3002</li> </ol> <p>\u3053\u306e\u614e\u91cd\u306a\u7ba1\u7406\u306b\u3088\u308a\u3001SOAR \u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u306b\u95a2\u4fc2\u306a\u304f\u3001\u4e00\u8cab\u3057\u3066\u78ba\u5b9f\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002</p>"},{"location":"ja/guides/soar-lifecycle/#_3","title":"\u306a\u305c\u3053\u308c\u304c\u91cd\u8981\u306a\u306e\u304b","text":"<p>\u3053\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u3001\u554f\u984c\u3092\u8a3a\u65ad\u3057\u3001\u3088\u308a\u5805\u7262\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p> <ul> <li>\u521d\u671f\u5316\u9806\u5e8f\uff1a <code>Variable</code> \u306e <code>InitialValue</code> \u306f\u3001<code>MonoBehaviour</code> \u306e <code>Start()</code> \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u524d\u306e\u3001\u30b2\u30fc\u30e0\u306e\u975e\u5e38\u306b\u65e9\u3044\u6bb5\u968e\u3067\u8a2d\u5b9a\u3055\u308c\u308b\u3068\u60f3\u5b9a\u3067\u304d\u307e\u3059\u3002</li> <li>\u30af\u30ea\u30fc\u30f3\u306a\u72b6\u614b\uff1a \u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u30b2\u30fc\u30e0\u3092\u505c\u6b62\u3057\u3066\u958b\u59cb\u3059\u308b\u3068\u3001SOAR \u30a2\u30bb\u30c3\u30c8\u306f\u30af\u30ea\u30fc\u30f3\u3067\u4e88\u6e2c\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u308a\u3001\u53e4\u3044\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u5f15\u304d\u8d77\u3053\u3055\u308c\u308b\u30a4\u30e9\u30a4\u30e9\u3059\u308b\u30d0\u30b0\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</li> <li>\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\uff1a SOAR \u306b\u3088\u3063\u3066\u4f5c\u6210\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30a4\u30d9\u30f3\u30c8\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u306f\u81ea\u52d5\u7684\u306b\u7834\u68c4\u3055\u308c\u3001\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u4fe1\u983c\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"ja/guides/testing-with-soar/","title":"SOAR \u3092\u4f7f\u7528\u3057\u305f\u30c6\u30b9\u30c8","text":"<p>Scriptable Object Architecture \u306e\u4e3b\u306a\u5229\u70b9\u306e1\u3064\u306f\u3001\u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u304c\u5927\u5e45\u306b\u5bb9\u6613\u306b\u306a\u308b\u3053\u3068\u3067\u3059\u3002\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u758e\u7d50\u5408\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u96d1\u306a\u30b7\u30fc\u30f3\u3092\u69cb\u7bc9\u3057\u305f\u308a\u3001\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u5b58\u5728\u3055\u305b\u308b\u5fc5\u8981\u306a\u304f\u3001\u30ed\u30b8\u30c3\u30af\u3092\u5206\u96e2\u3057\u3066\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002</p> <p>\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001Unity \u306e\u7d44\u307f\u8fbc\u307f\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u7528\u3057\u3066\u3001SOAR \u30a2\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002</p>"},{"location":"ja/guides/testing-with-soar/#_1","title":"\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8","text":"<p>\u30c0\u30e1\u30fc\u30b8\u3092\u53d7\u3051\u308b\u305f\u3081\u306b <code>GameEvent</code> \u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u5358\u7d14\u306a <code>Player</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u76ee\u6a19\u306f\u3001\u5b8c\u5168\u306a\u30b2\u30fc\u30e0\u74b0\u5883\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b\u3001\u3053\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ed\u30b8\u30c3\u30af\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3053\u3068\u3067\u3059\u3002</p> <p>\u30c6\u30b9\u30c8\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff1a</p> <pre><code>// File: Player.cs\nusing Soar.Events;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class Player : MonoBehaviour\n{\n    [SerializeField] private FloatVariable playerHealth;\n    [SerializeField] private FloatGameEvent onPlayerDamaged;\n\n    private void Start()\n    {\n        // \u958b\u59cb\u6642\u306b\u4f53\u529b\u3092\u6e80\u30bf\u30f3\u306b\u3059\u308b\n        playerHealth.Value = 100f;\n\n        // \u30c0\u30e1\u30fc\u30b8\u30a4\u30d9\u30f3\u30c8\u3092\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u3059\u308b\n        onPlayerDamaged.Subscribe(TakeDamage);\n    }\n\n    private void TakeDamage(float amount)\n    {\n        playerHealth.Value -= amount;\n    }\n}\n</code></pre>"},{"location":"ja/guides/testing-with-soar/#_2","title":"\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u4f5c\u6210","text":"<p><code>Player</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306b\u306f\u3001\u300cEditor\u300d\u30d5\u30a9\u30eb\u30c0\uff08\u307e\u305f\u306f\u30c6\u30b9\u30c8\u7528\u306b\u69cb\u6210\u3055\u308c\u305f\u30a2\u30bb\u30f3\u30d6\u30ea\uff09\u5185\u306b\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p> <p>\u30c6\u30b9\u30c8\u306e\u4e3b\u8981\u306a\u30b9\u30c6\u30c3\u30d7\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff1a 1.  \u6e96\u5099\uff08Arrange\uff09\uff1a \u5fc5\u8981\u306a SOAR \u30a2\u30bb\u30c3\u30c8\uff08<code>FloatVariable</code>\u3001<code>FloatGameEvent</code>\uff09\u3068 <code>Player</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u81ea\u4f53\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002 2.  \u5b9f\u884c\uff08Act\uff09\uff1a \u30c6\u30b9\u30c8\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u3059\uff08<code>onPlayerDamaged</code> \u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u307e\u3059\uff09\u3002 3.  \u691c\u8a3c\uff08Assert\uff09\uff1a \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u671f\u5f85\u3069\u304a\u308a\u306b\u52d5\u4f5c\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\uff08<code>playerHealth</code> <code>Variable</code> \u304c\u6e1b\u5c11\u3057\u305f\u3053\u3068\uff09\u3002</p> <p>\u5bfe\u5fdc\u3059\u308b\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff1a</p> <pre><code>// File: PlayerTests.cs\nusing NUnit.Framework;\nusing Soar.Events;\nusing Soar.Variables;\nusing UnityEngine;\n\npublic class PlayerTests\n{\n    [Test]\n    public void Player_TakesDamage_When_OnPlayerDamagedEventIsRaised()\n    {\n        // 1. \u6e96\u5099\n        // \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30db\u30b9\u30c8\u3059\u308b GameObject \u3092\u4f5c\u6210\n        var playerGameObject = new GameObject();\n        var player = playerGameObject.AddComponent&lt;Player&gt;();\n\n        // \u5fc5\u8981\u306a SOAR \u30a2\u30bb\u30c3\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u30e1\u30e2\u30ea\u306b\u4f5c\u6210\n        var healthVariable = ScriptableObject.CreateInstance&lt;FloatVariable&gt;();\n        var damageEvent = ScriptableObject.CreateInstance&lt;FloatGameEvent&gt;();\n\n        // \u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u307e\u305f\u306f\u30d1\u30d6\u30ea\u30c3\u30af\u30bb\u30c3\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3001\u3053\u308c\u3089\u306e\u30a2\u30bb\u30c3\u30c8\u3092 Player \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\n        // (\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u30d7\u30ec\u30cf\u30d6\u306b\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059)\n        SetPrivateField(player, \"playerHealth\", healthVariable);\n        SetPrivateField(player, \"onPlayerDamaged\", damageEvent);\n\n        // Start() \u3092\u624b\u52d5\u3067\u547c\u3073\u51fa\u3057\u3066\u3001\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u3001\u521d\u671f\u4f53\u529b\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n        player.SendMessage(\"Start\");\n\n        // 2. \u5b9f\u884c\n        // \u30c0\u30e1\u30fc\u30b8\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u305f\u3053\u3068\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u3059\n        damageEvent.Raise(25f);\n\n        // 3. \u691c\u8a3c\n        // \u4f53\u529b\u5909\u6570\u304c\u6b63\u3057\u304f\u66f4\u65b0\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\n        Assert.AreEqual(75f, healthVariable.Value);\n\n        // GameObject \u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3057\u307e\u3059\n        Object.DestroyImmediate(playerGameObject);\n    }\n\n    // \u30c6\u30b9\u30c8\u76ee\u7684\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\n    private void SetPrivateField(object obj, string fieldName, object value)\n    {\n        var field = obj.GetType().GetField(fieldName, System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance);\n        field?.SetValue(obj, value);\n    }\n}\n</code></pre>"},{"location":"ja/guides/testing-with-soar/#_3","title":"\u30c6\u30b9\u30c8\u306b\u304a\u3051\u308b\u91cd\u8981\u306a\u6982\u5ff5","text":"<ul> <li>\u30a4\u30f3\u30e1\u30e2\u30ea\u30a2\u30bb\u30c3\u30c8\uff1a <code>ScriptableObject.CreateInstance&lt;T&gt;()</code> \u3092\u4f7f\u7528\u3057\u3066\u3001\u30c6\u30b9\u30c8\u306b\u5fc5\u8981\u306a SOAR \u30a2\u30bb\u30c3\u30c8\u306e\u4e00\u6642\u7684\u306a\u30a4\u30f3\u30e1\u30e2\u30ea\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u4fdd\u5b58\u3055\u308c\u305a\u3001\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\u5f8c\u306b\u30ac\u30d9\u30fc\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3055\u308c\u307e\u3059\u3002</li> <li>\u624b\u52d5\u521d\u671f\u5316\uff1a <code>Player</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u30b7\u30fc\u30f3\u5185\u306b\u306a\u3044\u305f\u3081\u3001\u305d\u306e <code>Start()</code> \u30e1\u30bd\u30c3\u30c9\u3092 <code>SendMessage(\"Start\")</code> \u3092\u4ecb\u3057\u3066\u624b\u52d5\u3067\u547c\u3073\u51fa\u3057\u3066\u3001\u305d\u306e\u30ed\u30b8\u30c3\u30af\uff08\u521d\u671f\u4f53\u529b\u306e\u8a2d\u5b9a\u3084\u30a4\u30d9\u30f3\u30c8\u306e\u30b5\u30d6\u30b9\u30af\u30e9\u30a4\u30d6\u306a\u3069\uff09\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</li> <li>\u30a4\u30d9\u30f3\u30c8\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\uff1a \u30c6\u30b9\u30c8\u306f SOAR \u30a2\u30bb\u30c3\u30c8\u3092\u76f4\u63a5\u5236\u5fa1\u3057\u307e\u3059\u3002<code>damageEvent.Raise(25f)</code> \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u306f\u300c\u30d1\u30d6\u30ea\u30c3\u30b7\u30e3\u30fc\u300d\u306e\u5f79\u5272\u3092\u679c\u305f\u3057\u3001<code>Player</code> \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ed\u30b8\u30c3\u30af\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059\u3002</li> <li>\u758e\u7d50\u5408\u306e\u5b9f\u8df5\uff1a \u30c6\u30b9\u30c8\u306f\u3001\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u30c0\u30e1\u30fc\u30b8\u3092\u53d7\u3051\u308b\u304b\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001<code>onPlayerDamaged</code> \u30a4\u30d9\u30f3\u30c8\u3092\u30ea\u30c3\u30b9\u30f3\u3059\u308b\u3068 <code>playerHealth</code> \u5909\u6570\u304c\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u3060\u3051\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3001\u758e\u7d50\u5408\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u306e\u529b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002</li> </ul> <p>\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3046\u3053\u3068\u3067\u3001\u5165\u529b\u3068\u51fa\u529b\u306b SOAR \u3092\u5229\u7528\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5fb9\u5e95\u7684\u304b\u3064\u52b9\u7387\u7684\u306b\u30c6\u30b9\u30c8\u3067\u304d\u3001\u3088\u308a\u5b89\u5b9a\u3057\u3066\u4fdd\u5b88\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/","title":"\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3068\u30a8\u30c7\u30a3\u30bf\u30c4\u30fc\u30eb","text":"<p>SOAR \u306b\u306f\u3001\u30b3\u30a2\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6a5f\u80fd\u306b\u52a0\u3048\u3066\u3001\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u6539\u5584\u3057\u3001\u5b9a\u578b\u30b3\u30fc\u30c9\u3092\u524a\u6e1b\u3057\u3001\u30c7\u30d0\u30c3\u30b0\u3092\u5bb9\u6613\u306b\u3059\u308b\u305f\u3081\u306b\u8a2d\u8a08\u3055\u308c\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3068\u30ab\u30b9\u30bf\u30e0\u30a8\u30c7\u30a3\u30bf\u62e1\u5f35\u6a5f\u80fd\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#_2","title":"\u30a8\u30c7\u30a3\u30bf\u30c4\u30fc\u30eb","text":"<p>SOAR \u306e\u30a8\u30c7\u30a3\u30bf\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001Unity \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u5185\u3067\u76f4\u63a5\u3001\u5927\u5e45\u306a\u751f\u6d3b\u306e\u8cea\u306e\u5411\u4e0a\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#_3","title":"\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u5185\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3","text":"<p>\u307b\u3068\u3093\u3069\u306e SOAR \u30a2\u30bb\u30c3\u30c8\u306b\u306f\u3001\u30c7\u30d0\u30c3\u30b0\u3068\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u3092\u5099\u3048\u305f\u30ab\u30b9\u30bf\u30e0\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li><code>GameEvent</code>: \u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u304b\u3089\u76f4\u63a5\u30a4\u30d9\u30f3\u30c8\u3092\u30c8\u30ea\u30ac\u30fc\u3059\u308b\u305f\u3081\u306e\u300cRaise\u300d\u30dc\u30bf\u30f3\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30b2\u30fc\u30e0\u3092\u5b9f\u884c\u3057\u305f\u308a\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3059\u308b\u3053\u3068\u306a\u304f\u3001<code>UnityEventBinder</code> \u306e\u8a2d\u5b9a\u3084\u4ed6\u306e\u30ea\u30b9\u30ca\u30fc\u3092\u30c6\u30b9\u30c8\u3059\u308b\u306e\u306b\u975e\u5e38\u306b\u8cb4\u91cd\u3067\u3059\u3002</li> <li><code>Command</code>: \u300cExecute\u300d\u30dc\u30bf\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30b3\u30de\u30f3\u30c9\u306e\u30ed\u30b8\u30c3\u30af\u3092\u3044\u3064\u3067\u3082\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002</li> <li><code>Transaction</code>: \u300cRequest\u300d\u30dc\u30bf\u30f3\u306f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u30c8\u30ea\u30ac\u30fc\u3057\u307e\u3059\u3002\u30ec\u30b9\u30dd\u30f3\u30b9\u30cf\u30f3\u30c9\u30e9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30a8\u30e9\u30fc\u306a\u3057\u3067\u5b8c\u4e86\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u4e00\u6642\u7684\u306a\u7a7a\u306e\u30cf\u30f3\u30c9\u30e9\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u578b\u4ed8\u304d\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u73fe\u5728\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u5024\u3067\u9001\u4fe1\u3067\u304d\u307e\u3059\u3002</li> </ul> <p>\u3053\u308c\u3089\u306e\u30dc\u30bf\u30f3\u306b\u3088\u308a\u3001\u7de8\u96c6\u30e2\u30fc\u30c9\u3068\u518d\u751f\u30e2\u30fc\u30c9\u306e\u4e21\u65b9\u3067\u3001\u5206\u96e2\u3055\u308c\u305f\u30ed\u30b8\u30c3\u30af\u3092\u8fc5\u901f\u306b\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#json","title":"Json \u30d5\u30a1\u30a4\u30eb\u7ba1\u7406","text":"<p><code>JsonableVariable&lt;T&gt;</code> \u3092\u7d99\u627f\u3059\u308b\u5909\u6570\u306f\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u306b\u300cJson File Management\u300d\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30c4\u30fc\u30eb\u306f\u3001\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\u3092\u30b3\u30fc\u30c9\u306a\u3057\u3067\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <ul> <li>Json \u306b\u4fdd\u5b58: \u5909\u6570\u306e\u73fe\u5728\u306e\u5024\u304c\u30b7\u30ea\u30a2\u30eb\u5316\u3055\u308c\u3001\u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002</li> <li>Json \u304b\u3089\u8aad\u307f\u8fbc\u307f: \u5909\u6570\u306e\u5024\u304c\u3001\u6307\u5b9a\u3055\u308c\u305f JSON \u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30fc\u30bf\u3067\u4e0a\u66f8\u304d\u3055\u308c\u307e\u3059\u3002</li> <li>\u30d1\u30b9\u3068\u30d5\u30a1\u30a4\u30eb\u540d: \u4fdd\u5b58\u5834\u6240\uff08<code>Application.dataPath</code>\u3001<code>persistentDataPath</code>\u3001\u307e\u305f\u306f\u30ab\u30b9\u30bf\u30e0\u30d1\u30b9\uff09\u3068\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u3067\u76f4\u63a5\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002</li> </ul>"},{"location":"ja/guides/utilities-and-editor-tooling/#_4","title":"\u62e1\u5f35\u30b9\u30af\u30ea\u30d7\u30bf\u30d6\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30c9\u30ed\u30ef\u30fc","text":"<p>\u30a2\u30bb\u30c3\u30c8\u9593\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u5fc5\u8981\u6027\u3092\u6e1b\u3089\u3059\u305f\u3081\u306b\u3001SOAR \u30a2\u30bb\u30c3\u30c8\u3092\u53c2\u7167\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\uff08\u4f8b\uff1a<code>MonoBehaviour</code> \u306e <code>GameEvent</code> \u30d5\u30a3\u30fc\u30eb\u30c9\uff09\u306f\u3001\u305d\u306e\u30a2\u30bb\u30c3\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u81ea\u52d5\u7684\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u63cf\u753b\u3057\u307e\u3059\u3002</p> <p></p> <p>\u3053\u306e\u6a5f\u80fd\u306b\u3088\u308a\u3001\u5909\u6570\u3092\u4f7f\u7528\u3059\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u96e2\u308c\u308b\u3053\u3068\u306a\u304f\u3001\u5909\u6570\u306e\u5024\u3084\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u7c21\u5358\u306b\u8868\u793a\u304a\u3088\u3073\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</p> <p>\u3055\u3089\u306b\u3001\u30a2\u30bb\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u7a7a\uff08<code>null</code>\uff09\u306e\u5834\u5408\u3001\u300c\u4f5c\u6210\u300d\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u3001\u65b0\u3057\u3044\u30a2\u30bb\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u305d\u306e\u5834\u3067\u4f5c\u6210\u304a\u3088\u3073\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#_5","title":"\u30e9\u30f3\u30bf\u30a4\u30e0\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3","text":"<p>\u3053\u308c\u3089\u306e\u30d8\u30eb\u30d1\u30fc\u30af\u30e9\u30b9\u306f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#menuhelper","title":"<code>MenuHelper</code>","text":"<p>\u3053\u306e\u9759\u7684\u30af\u30e9\u30b9\u306b\u306f\u3001SOAR \u306e\u7d44\u307f\u8fbc\u307f\u30a2\u30bb\u30c3\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30e1\u30cb\u30e5\u30fc\u30d1\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff08\u4f8b\uff1a<code>MenuHelper.DefaultVariableMenu</code> \u306f <code>\"SOAR/Variables/\"</code> \u306b\u89e3\u6c7a\u3055\u308c\u307e\u3059\uff09\u3002</p> <p>\u30ab\u30b9\u30bf\u30e0\u30a2\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\u3053\u306e\u30af\u30e9\u30b9\u3092 <code>[CreateAssetMenu]</code> \u5c5e\u6027\u3067\u4f7f\u7528\u3057\u3066\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30bb\u30c3\u30c8\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u3082\u306e\u3068\u540c\u3058\u6574\u7406\u3055\u308c\u305f\u30b5\u30d6\u30e1\u30cb\u30e5\u30fc\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p> <pre><code>[CreateAssetMenu(fileName = \"NewPlayerDataVariable\", \n                 menuName = MenuHelper.DefaultVariableMenu + \"Player Data\")]\npublic class PlayerDataVariable : Variable&lt;PlayerData&gt; { }\n</code></pre>"},{"location":"ja/guides/utilities-and-editor-tooling/#jsonableextensions","title":"<code>JsonableExtensions</code>","text":"<p><code>IJsonable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08<code>JsonableVariable&lt;T&gt;</code> \u306a\u3069\uff09\u306e\u5834\u5408\u3001\u3053\u306e\u30af\u30e9\u30b9\u306f\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u30fc\u30c4\u30fc\u30eb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308b\u5bfe\u5fdc\u7269\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002</p> <ul> <li><code>SaveToJson(path, filename)</code>: \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002</li> <li><code>LoadFromJson(path, filename)</code>: \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002</li> <li><code>IsJsonFileExist(path, filename)</code>: \u4fdd\u5b58\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u3059\u3067\u306b\u5b58\u5728\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002</li> </ul> <p>\u3053\u308c\u3089\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5c02\u7528\u306e <code>SaveManager</code> \u307e\u305f\u306f <code>LoadManager</code> \u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#compositedisposable","title":"<code>CompositeDisposable</code>","text":"<p>\u3053\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u306f\u3001<code>IDisposable</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002SOAR \u306e\u975e R3 \u5b9f\u88c5\u306b\u3088\u3063\u3066\u5185\u90e8\u7684\u306b\u4f7f\u7528\u3055\u308c\u3001\u3059\u3079\u3066\u306e\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u8de1\u3057\u307e\u3059\u3002<code>CompositeDisposable</code> \u304c\u7834\u68c4\u3055\u308c\u308b\u3068\u3001\u305d\u308c\u304c\u4fdd\u6301\u3059\u308b\u3059\u3079\u3066\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3082\u7834\u68c4\u3055\u308c\u307e\u3059\u3002\u5358\u4e00\u306e <code>MonoBehaviour</code> \u3067\u8907\u6570\u306e\u30b5\u30d6\u30b9\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u3001\u30e6\u30fc\u30b6\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5f79\u7acb\u3061\u307e\u3059\u3002</p>"},{"location":"ja/guides/utilities-and-editor-tooling/#dictionaryextensions","title":"<code>DictionaryExtensions</code>","text":"<p>\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u8f9e\u66f8\u7528\u306e\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002<code>TryChangeKey()</code> \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u8f9e\u66f8\u30a8\u30f3\u30c8\u30ea\u306e\u30ad\u30fc\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\u3002</p>"}]}